# this is an auto generated file. This will be overwritten
query GetDiscourse($discourse_id: Int!) {
  getDiscourse(discourse_id: $discourse_id) {
    discourse_id
    content
    source_id
    region
    created_time
    imported_time
    secondary_content
    isPost
    post_id
    ori_id
    country_code
    url
  }
}
query ListDiscourses {
  listDiscourses {
    discourse_id
    content
    source_id
    region
    created_time
    imported_time
    secondary_content
    isPost
    post_id
    ori_id
    country_code
    url
  }
}
query GetImpactArea($impact_area_id: Int!) {
  getImpactArea(impact_area_id: $impact_area_id) {
    impact_area_id
    tag
    source_parent_id
    impact_parent_id
    source_ontology
  }
}
query ListImpactAreas {
  listImpactAreas {
    impact_area_id
    tag
    source_parent_id
    impact_parent_id
    source_ontology
  }
}
query GetModelVersion($model_id: Int!) {
  getModelVersion(model_id: $model_id) {
    model_id
    model_task
    created_time
  }
}
query ListModelVersions {
  listModelVersions {
    model_id
    model_task
    created_time
  }
}
query GetPlatform($platform_id: Int!) {
  getPlatform(platform_id: $platform_id) {
    platform_id
    platform_desc
    platform_type
  }
}
query ListPlatforms {
  listPlatforms {
    platform_id
    platform_desc
    platform_type
  }
}
query GetSource($source_id: Int!) {
  getSource(source_id: $source_id) {
    source_id
    platform_id
    source_desc
    is_survey
    region
  }
}
query ListSources {
  listSources {
    source_id
    platform_id
    source_desc
    is_survey
    region
  }
}
query GetTrendingTopics($topic: String!) {
  getTrendingTopics(topic: $topic) {
    topic
    counts
    n_gram
    created_time
  }
}
query ListTrendingTopics {
  listTrendingTopics {
    topic
    counts
    n_gram
    created_time
  }
}
query ListTrendingTopicss {
  listTrendingTopicss {
    topic
    counts
    n_gram
    created_time
  }
}
query ListImpactTree {
  listImpactTree {
    tag
    level0
    level1
    level2
  }
}
query GetRegions($region: String!) {
  getRegions(region: $region) {
    region
  }
}
query ListRegionss {
  listRegionss {
    region
  }
}
query GetTodo($id: ID!) {
  getTodo(id: $id) {
    id
    name
    description
  }
}
query ListTodos(
  $filter: ModelTodoFilterInput
  $limit: Int
  $nextToken: String
) {
  listTodos(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      name
      description
    }
    nextToken
  }
}
