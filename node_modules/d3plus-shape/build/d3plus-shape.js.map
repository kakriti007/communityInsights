{"version":3,"file":"d3plus-shape.js","sources":["../src/Image.js","../src/geom/pointDistanceSquared.js","../src/geom/pointDistance.js","../src/Shape/Shape.js","../src/geom/lineIntersection.js","../src/geom/segmentBoxContains.js","../src/geom/segmentsIntersect.js","../src/geom/polygonInside.js","../src/geom/polygonRayCast.js","../src/geom/pointRotate.js","../src/geom/polygonRotate.js","../src/geom/simplify.js","../src/geom/largestRect.js","../src/Shape/Area.js","../src/Shape/Bar.js","../src/Shape/Circle.js","../src/Shape/Rect.js","../src/Shape/Line.js","../src/Shape/Whisker.js","../src/Shape/Box.js","../src/geom/shapeEdgePoint.js","../src/geom/path2polygon.js","../src/Shape/Path.js"],"sourcesContent":["import {select} from \"d3-selection\";\nimport {transition} from \"d3-transition\";\n\nimport {accessor, constant} from \"d3plus-common\";\n\n/**\n    @class Image\n    @desc Creates SVG images based on an array of data.\n    @example <caption>a sample row of data</caption>\nvar data = {\"url\": \"file.png\", \"width\": \"100\", \"height\": \"50\"};\n@example <caption>passed to the generator</caption>\nnew Image().data([data]).render();\n@example <caption>creates the following</caption>\n<image class=\"d3plus-Image\" opacity=\"1\" href=\"file.png\" width=\"100\" height=\"50\" x=\"0\" y=\"0\"></image>\n@example <caption>this is shorthand for the following</caption>\nimage().data([data])();\n@example <caption>which also allows a post-draw callback function</caption>\nimage().data([data])(function() { alert(\"draw complete!\"); })\n*/\nexport default class Image {\n\n  /**\n      @memberof Image\n      @desc Invoked when creating a new class instance, and sets any default parameters.\n      @private\n  */\n  constructor() {\n    this._duration = 600;\n    this._height = accessor(\"height\");\n    this._id = accessor(\"id\");\n    this._opacity = constant(1);\n    this._pointerEvents = constant(\"auto\");\n    this._select;\n    this._url = accessor(\"url\");\n    this._width = accessor(\"width\");\n    this._x = accessor(\"x\", 0);\n    this._y = accessor(\"y\", 0);\n  }\n\n  /**\n      @memberof Image\n      @desc Renders the current Image to the page. If a *callback* is specified, it will be called once the images are done drawing.\n      @param {Function} [*callback*]\n      @chainable\n  */\n  render(callback) {\n\n    if (this._select === void 0) this.select(select(\"body\").append(\"svg\").style(\"width\", `${window.innerWidth}px`).style(\"height\", `${window.innerHeight}px`).style(\"display\", \"block\").node());\n\n    const images = this._select.selectAll(\".d3plus-Image\").data(this._data, this._id);\n\n    const enter = images.enter().append(\"image\")\n      .attr(\"class\", \"d3plus-Image\")\n      .attr(\"opacity\", 0)\n      .attr(\"width\", 0)\n      .attr(\"height\", 0)\n      .attr(\"x\", (d, i) => this._x(d, i) + this._width(d, i) / 2)\n      .attr(\"y\", (d, i) => this._y(d, i) + this._height(d, i) / 2);\n\n    const t = transition().duration(this._duration),\n          that = this,\n          update = enter.merge(images);\n\n    update\n      .attr(\"xlink:href\", this._url)\n      .style(\"pointer-events\", this._pointerEvents)\n      .transition(t)\n      .attr(\"opacity\", this._opacity)\n      .attr(\"width\", (d, i) => this._width(d, i))\n      .attr(\"height\", (d, i) => this._height(d, i))\n      .attr(\"x\", (d, i) => this._x(d, i))\n      .attr(\"y\", (d, i) => this._y(d, i))\n      .each(function(d, i) {\n        const image = select(this), link = that._url(d, i);\n        const fullAddress = link.indexOf(\"http://\") === 0 || link.indexOf(\"https://\") === 0;\n        if (!fullAddress || link.indexOf(window.location.hostname) === 0) {\n          const img = new Image();\n          img.src = link;\n          img.crossOrigin = \"Anonymous\";\n          img.onload = function() {\n            const canvas = document.createElement(\"canvas\");\n            canvas.width = this.width;\n            canvas.height = this.height;\n            const context = canvas.getContext(\"2d\");\n            context.drawImage(this, 0, 0);\n            image.attr(\"xlink:href\", canvas.toDataURL(\"image/png\"));\n          };\n        }\n      });\n\n    images.exit().transition(t)\n      .attr(\"width\", (d, i) => this._width(d, i))\n      .attr(\"height\", (d, i) => this._height(d, i))\n      .attr(\"x\", (d, i) => this._x(d, i))\n      .attr(\"y\", (d, i) => this._y(d, i))\n      .attr(\"opacity\", 0).remove();\n\n    if (callback) setTimeout(callback, this._duration + 100);\n\n    return this;\n\n  }\n\n  /**\n      @memberof Image\n      @desc If *data* is specified, sets the data array to the specified array and returns the current class instance. If *data* is not specified, returns the current data array. An <image> tag will be drawn for each object in the array.\n      @param {Array} [*data* = []]\n      @chainable\n  */\n  data(_) {\n    return arguments.length ? (this._data = _, this) : this._data;\n  }\n\n  /**\n      @memberof Image\n      @desc If *ms* is specified, sets the animation duration to the specified number and returns the current class instance. If *ms* is not specified, returns the current animation duration.\n      @param {Number} [*ms* = 600]\n      @chainable\n  */\n  duration(_) {\n    return arguments.length ? (this._duration = _, this) : this._duration;\n  }\n\n  /**\n      @memberof Image\n      @desc If *value* is specified, sets the height accessor to the specified function or number and returns the current class instance.\n      @param {Function|Number} [*value*]\n      @chainable\n      @example\nfunction(d) {\n  return d.height;\n}\n  */\n  height(_) {\n    return arguments.length ? (this._height = typeof _ === \"function\" ? _ : constant(_), this) : this._height;\n  }\n\n  /**\n      @memberof Image\n      @desc If *value* is specified, sets the id accessor to the specified function and returns the current class instance.\n      @param {Function} [*value*]\n      @chainable\n      @example\nfunction(d) {\n  return d.id;\n}\n  */\n  id(_) {\n    return arguments.length ? (this._id = _, this) : this._id;\n  }\n\n  /**\n      @memberof Image\n      @desc Sets the opacity of the image.\n      @param {Number} [*value* = 1]\n      @chainable\n  */\n  opacity(_) {\n    return arguments.length ? (this._opacity = typeof _ === \"function\" ? _ : constant(_), this) : this._opacity;\n  }\n\n  /**\n      @memberof Image\n      @desc If *value* is specified, sets the pointer-events accessor to the specified function or string and returns the current class instance.\n      @param {Function|String} [*value* = \"auto\"]\n      @chainable\n  */\n  pointerEvents(_) {\n    return arguments.length ? (this._pointerEvents = typeof _ === \"function\" ? _ : constant(_), this) : this._pointerEvents;\n  }\n\n  /**\n      @memberof Image\n      @desc If *selector* is specified, sets the SVG container element to the specified d3 selector or DOM element and returns the current class instance. If *selector* is not specified, returns the current SVG container element.\n      @param {String|HTMLElement} [*selector* = d3.select(\"body\").append(\"svg\")]\n      @chainable\n  */\n  select(_) {\n    return arguments.length ? (this._select = select(_), this) : this._select;\n  }\n\n  /**\n      @memberof Image\n      @desc If *value* is specified, sets the URL accessor to the specified function and returns the current class instance.\n      @param {Function} [*value*]\n      @chainable\n      @example\nfunction(d) {\n  return d.url;\n}\n  */\n  url(_) {\n    return arguments.length ? (this._url = _, this) : this._url;\n  }\n\n  /**\n      @memberof Image\n      @desc If *value* is specified, sets the width accessor to the specified function or number and returns the current class instance.\n      @param {Function|Number} [*value*]\n      @chainable\n      @example\nfunction(d) {\n  return d.width;\n}\n  */\n  width(_) {\n    return arguments.length ? (this._width = typeof _ === \"function\" ? _ : constant(_), this) : this._width;\n  }\n\n  /**\n      @memberof Image\n      @desc If *value* is specified, sets the x accessor to the specified function or number and returns the current class instance.\n      @param {Function|Number} [*value*]\n      @chainable\n      @example\nfunction(d) {\n  return d.x || 0;\n}\n  */\n  x(_) {\n    return arguments.length ? (this._x = typeof _ === \"function\" ? _ : constant(_), this) : this._x;\n  }\n\n  /**\n      @memberof Image\n      @desc If *value* is specified, sets the y accessor to the specified function or number and returns the current class instance.\n      @param {Function|Number} [*value*]\n      @chainable\n      @example\nfunction(d) {\n  return d.y || 0;\n}\n  */\n  y(_) {\n    return arguments.length ? (this._y = typeof _ === \"function\" ? _ : constant(_), this) : this._y;\n  }\n\n}\n","/**\n    @function pointDistanceSquared\n    @desc Returns the squared euclidean distance between two points.\n    @param {Array} p1 The first point, which should always be an `[x, y]` formatted Array.\n    @param {Array} p2 The second point, which should always be an `[x, y]` formatted Array.\n    @returns {Number}\n*/\nexport default (p1, p2) => {\n\n  const dx = p2[0] - p1[0],\n        dy = p2[1] - p1[1];\n\n  return dx * dx + dy * dy;\n\n};\n","import pointDistanceSquared from \"./pointDistanceSquared\";\n\n/**\n    @function pointDistance\n    @desc Calculates the pixel distance between two points.\n    @param {Array} p1 The first point, which should always be an `[x, y]` formatted Array.\n    @param {Array} p2 The second point, which should always be an `[x, y]` formatted Array.\n    @returns {Number}\n*/\nexport default (p1, p2) => Math.sqrt(pointDistanceSquared(p1, p2));\n","/**\n    @external BaseClass\n    @see https://github.com/d3plus/d3plus-common#BaseClass\n*/\n\nimport {min} from \"d3-array\";\nimport {color} from \"d3-color\";\nimport {mouse, select, selectAll} from \"d3-selection\";\nimport {transition} from \"d3-transition\";\n\nimport {accessor, assign, attrize, BaseClass, configPrep, constant, elem} from \"d3plus-common\";\nimport {colorContrast} from \"d3plus-color\";\nimport * as paths from \"d3-shape\";\nimport {strip, TextBox} from \"d3plus-text\";\n\nimport Image from \"../Image\";\nimport pointDistance from \"../geom/pointDistance\";\n\n/**\n    @class Shape\n    @extends external:BaseClass\n    @desc An abstracted class for generating shapes.\n*/\nexport default class Shape extends BaseClass {\n\n  /**\n      @memberof Shape\n      @desc Invoked when creating a new class instance, and sets any default parameters.\n      @private\n  */\n  constructor(tagName = \"g\") {\n\n    super();\n\n    this._activeOpacity = 0.25;\n    this._activeStyle = {\n      \"stroke\": (d, i) => {\n        let c = this._fill(d, i);\n        if ([\"transparent\", \"none\"].includes(c)) c = this._stroke(d, i);\n        return color(c).darker(1);\n      },\n      \"stroke-width\": (d, i) => {\n        const s = this._strokeWidth(d, i) || 1;\n        return s * 3;\n      }\n    };\n    this._ariaLabel = constant(\"\");\n    this._backgroundImage = constant(false);\n    this._backgroundImageClass = new Image();\n    this._data = [];\n    this._duration = 600;\n    this._fill = constant(\"black\");\n    this._fillOpacity = constant(1);\n\n    this._hoverOpacity = 0.5;\n    this._hoverStyle = {\n      \"stroke\": (d, i) => {\n        let c = this._fill(d, i);\n        if ([\"transparent\", \"none\"].includes(c)) c = this._stroke(d, i);\n        return color(c).darker(0.5);\n      },\n      \"stroke-width\": (d, i) => {\n        const s = this._strokeWidth(d, i) || 1;\n        return s * 2;\n      }\n    };\n    this._id = (d, i) => d.id !== void 0 ? d.id : i;\n    this._label = constant(false);\n    this._labelClass = new TextBox();\n    this._labelConfig = {\n      fontColor: (d, i) => colorContrast(this._fill(d, i)),\n      fontSize: 12,\n      padding: 5\n    };\n    this._name = \"Shape\";\n    this._opacity = constant(1);\n    this._pointerEvents = constant(\"visiblePainted\");\n    this._role = constant(\"presentation\");\n    this._rotate = constant(0);\n    this._rx = constant(0);\n    this._ry = constant(0);\n    this._scale = constant(1);\n    this._shapeRendering = constant(\"geometricPrecision\");\n    this._stroke = (d, i) => color(this._fill(d, i)).darker(1);\n    this._strokeDasharray = constant(\"0\");\n    this._strokeLinecap = constant(\"butt\");\n    this._strokeOpacity = constant(1);\n    this._strokeWidth = constant(0);\n    this._tagName = tagName;\n    this._textAnchor = constant(\"start\");\n    this._vectorEffect = constant(\"non-scaling-stroke\");\n    this._verticalAlign = constant(\"top\");\n\n    this._x = accessor(\"x\", 0);\n    this._y = accessor(\"y\", 0);\n\n  }\n\n  /**\n      @memberof Shape\n      @desc Given a specific data point and index, returns the aesthetic properties of the shape.\n      @param {Object} *data point*\n      @param {Number} *index*\n      @private\n  */\n  _aes() {\n    return {};\n  }\n\n  /**\n      @memberof Shape\n      @desc Adds event listeners to each shape group or hit area.\n      @param {D3Selection} *update* The update cycle of the data binding.\n      @private\n  */\n  _applyEvents(handler) {\n\n    const events = Object.keys(this._on);\n    for (let e = 0; e < events.length; e++) {\n      handler.on(events[e], (d, i) => {\n        if (!this._on[events[e]]) return;\n        if (d.i !== void 0) i = d.i;\n        if (d.nested && d.values) {\n          const cursor = mouse(this._select.node()),\n                values = d.values.map(d => pointDistance(cursor, [this._x(d, i), this._y(d, i)]));\n          d = d.values[values.indexOf(min(values))];\n        }\n        this._on[events[e]].bind(this)(d, i);\n      });\n    }\n\n  }\n\n  /**\n      @memberof Shape\n      @desc Provides the updated styling to the given shape elements.\n      @param {HTMLElement} *elem*\n      @param {Object} *style*\n      @private\n  */\n  _updateStyle(elem, style) {\n\n    const that = this;\n\n    if (elem.size() && elem.node().tagName === \"g\") elem = elem.selectAll(\"*\");\n\n    /**\n        @desc Determines whether a shape is a nested collection of data points, and uses the appropriate data and index for the given function context.\n        @param {Object} *d* data point\n        @param {Number} *i* index\n        @private\n    */\n    function styleLogic(d, i) {\n      return typeof this !== \"function\" ? this\n        : d.nested && d.key && d.values\n          ? this(d.values[0], that._data.indexOf(d.values[0]))\n          : this(d, i);\n    }\n\n    const styleObject = {};\n    for (const key in style) {\n      if ({}.hasOwnProperty.call(style, key)) {\n        styleObject[key] = styleLogic.bind(style[key]);\n      }\n    }\n\n    elem.transition().duration(0).call(attrize, styleObject);\n\n  }\n\n  /**\n      @memberof Shape\n      @desc Provides the default styling to the shape elements.\n      @param {HTMLElement} *elem*\n      @private\n  */\n  _applyStyle(elem) {\n\n    const that = this;\n\n    if (elem.size() && elem.node().tagName === \"g\") elem = elem.selectAll(\"*\");\n\n    /**\n        @desc Determines whether a shape is a nested collection of data points, and uses the appropriate data and index for the given function context.\n        @param {Object} *d* data point\n        @param {Number} *i* index\n        @private\n    */\n    function styleLogic(d, i) {\n      return typeof this !== \"function\" ? this\n        : d.nested && d.key && d.values\n          ? this(d.values[0], that._data.indexOf(d.values[0]))\n          : this(d, i);\n    }\n\n    elem\n      .attr(\"fill\", styleLogic.bind(this._fill))\n      .attr(\"fill-opacity\", styleLogic.bind(this._fillOpacity))\n      .attr(\"rx\", styleLogic.bind(this._rx))\n      .attr(\"ry\", styleLogic.bind(this._ry))\n      .attr(\"stroke\", styleLogic.bind(this._stroke))\n      .attr(\"stroke-dasharray\", styleLogic.bind(this._strokeDasharray))\n      .attr(\"stroke-linecap\", styleLogic.bind(this._strokeLinecap))\n      .attr(\"stroke-opacity\", styleLogic.bind(this._strokeOpacity))\n      .attr(\"stroke-width\", styleLogic.bind(this._strokeWidth))\n      .attr(\"vector-effect\", styleLogic.bind(this._vectorEffect));\n  }\n\n  /**\n      @memberof Shape\n      @desc Calculates the transform for the group elements.\n      @param {HTMLElement} *elem*\n      @private\n  */\n  _applyTransform(elem) {\n\n    elem\n      .attr(\"transform\", (d, i) => `\n        translate(${d.__d3plusShape__\n    ? d.translate ? d.translate\n    : `${this._x(d.data, d.i)},${this._y(d.data, d.i)}`\n    : `${this._x(d, i)},${this._y(d, i)}`})\n        scale(${d.__d3plusShape__ ? d.scale || this._scale(d.data, d.i)\n  : this._scale(d, i)})\n        rotate(${d.__d3plusShape__ ? d.rotate ? d.rotate\n  : this._rotate(d.data || d, d.i)\n  : this._rotate(d.data || d, d.i)})`);\n  }\n\n  /**\n      @memberof Shape\n      @desc Checks for nested data and uses the appropriate variables for accessor functions.\n      @param {HTMLElement} *elem*\n      @private\n  */\n  _nestWrapper(method) {\n    return (d, i) => method(d.__d3plusShape__ ? d.data : d, d.__d3plusShape__ ? d.i : i);\n  }\n\n  /**\n      @memberof Shape\n      @desc Modifies existing shapes to show active status.\n      @private\n  */\n  _renderActive() {\n\n    const that = this;\n\n    this._group.selectAll(\".d3plus-Shape, .d3plus-Image, .d3plus-textBox\")\n      .each(function(d, i) {\n\n        if (!d) d = {};\n        if (!d.parentNode) d.parentNode = this.parentNode;\n        const parent = d.parentNode;\n\n        if (select(this).classed(\"d3plus-textBox\")) d = d.data;\n        if (d.__d3plusShape__ || d.__d3plus__) {\n          while (d && (d.__d3plusShape__ || d.__d3plus__)) {\n            i = d.i;\n            d = d.data;\n          }\n        }\n        else i = that._data.indexOf(d);\n\n        const group = !that._active || typeof that._active !== \"function\" || !that._active(d, i) ? parent : that._activeGroup.node();\n        if (group !== this.parentNode) {\n          group.appendChild(this);\n          if (this.className.baseVal.includes(\"d3plus-Shape\")) {\n            if (parent === group) select(this).call(that._applyStyle.bind(that));\n            else select(this).call(that._updateStyle.bind(that, select(this), that._activeStyle));\n          }\n        }\n\n      });\n\n    // this._renderImage();\n    // this._renderLabels();\n\n    this._group.selectAll(`g.d3plus-${this._name}-shape, g.d3plus-${this._name}-image, g.d3plus-${this._name}-text`)\n      .attr(\"opacity\", this._hover ? this._hoverOpacity : this._active ? this._activeOpacity : 1);\n\n  }\n\n  /**\n      @memberof Shape\n      @desc Modifies existing shapes to show hover status.\n      @private\n  */\n  _renderHover() {\n\n    const that = this;\n\n    this._group.selectAll(`g.d3plus-${this._name}-shape, g.d3plus-${this._name}-image, g.d3plus-${this._name}-text, g.d3plus-${this._name}-hover`)\n      .selectAll(\".d3plus-Shape, .d3plus-Image, .d3plus-textBox\")\n      .each(function(d, i) {\n\n        if (!d) d = {};\n        if (!d.parentNode) d.parentNode = this.parentNode;\n        const parent = d.parentNode;\n\n        if (select(this).classed(\"d3plus-textBox\")) d = d.data;\n        if (d.__d3plusShape__ || d.__d3plus__) {\n          while (d && (d.__d3plusShape__ || d.__d3plus__)) {\n            i = d.i;\n            d = d.data;\n          }\n        }\n        else i = that._data.indexOf(d);\n\n        const group = !that._hover || typeof that._hover !== \"function\" || !that._hover(d, i) ? parent : that._hoverGroup.node();\n        if (group !== this.parentNode) group.appendChild(this);\n        if (this.className.baseVal.includes(\"d3plus-Shape\")) {\n          if (parent === group) select(this).call(that._applyStyle.bind(that));\n          else select(this).call(that._updateStyle.bind(that, select(this), that._hoverStyle));\n        }\n\n      });\n\n    // this._renderImage();\n    // this._renderLabels();\n\n    this._group.selectAll(`g.d3plus-${this._name}-shape, g.d3plus-${this._name}-image, g.d3plus-${this._name}-text`)\n      .attr(\"opacity\", this._hover ? this._hoverOpacity : this._active ? this._activeOpacity : 1);\n\n  }\n\n  /**\n      @memberof Shape\n      @desc Adds background image to each shape group.\n      @private\n  */\n  _renderImage() {\n\n    const imageData = [];\n\n    this._update.merge(this._enter).data()\n      .forEach((datum, i) => {\n\n        const aes = this._aes(datum, i);\n\n        if (aes.r || aes.width && aes.height) {\n\n          let d = datum;\n          if (datum.nested && datum.key && datum.values) {\n            d = datum.values[0];\n            i = this._data.indexOf(d);\n          }\n\n          const height = aes.r ? aes.r * 2 : aes.height,\n                url = this._backgroundImage(d, i),\n                width = aes.r ? aes.r * 2 : aes.width;\n\n          if (url) {\n\n            let x = d.__d3plusShape__ ? d.translate ? d.translate[0]\n                  : this._x(d.data, d.i) : this._x(d, i),\n                y = d.__d3plusShape__ ? d.translate ? d.translate[1]\n                : this._y(d.data, d.i) : this._y(d, i);\n\n            if (aes.x) x += aes.x;\n            if (aes.y) y += aes.y;\n\n            if (d.__d3plusShape__) {\n              d = d.data;\n              i = d.i;\n            }\n\n            imageData.push({\n              __d3plus__: true,\n              data: d,\n              height,\n              i,\n              id: this._id(d, i),\n              url,\n              width,\n              x: x + -width / 2,\n              y: y + -height / 2\n            });\n\n          }\n\n        }\n\n      });\n\n    this._backgroundImageClass\n      .data(imageData)\n      .duration(this._duration)\n      .opacity(this._nestWrapper(this._opacity))\n      .pointerEvents(\"none\")\n      .select(elem(`g.d3plus-${this._name}-image`, {parent: this._group, update: {opacity: this._active ? this._activeOpacity : 1}}).node())\n      .render();\n\n  }\n\n  /**\n      @memberof Shape\n      @desc Adds labels to each shape group.\n      @private\n  */\n  _renderLabels() {\n\n    const labelData = [];\n\n    this._update.merge(this._enter).data()\n      .forEach((datum, i) => {\n\n        let d = datum;\n        if (datum.nested && datum.key && datum.values) {\n          d = datum.values[0];\n          i = this._data.indexOf(d);\n        }\n\n        let labels = this._label(d, i);\n\n        if (this._labelBounds && labels !== false && labels !== undefined && labels !== null) {\n\n          const bounds = this._labelBounds(d, i, this._aes(datum, i));\n\n          if (bounds) {\n\n            if (labels.constructor !== Array) labels = [labels];\n\n            const x = d.__d3plusShape__ ? d.translate ? d.translate[0]\n                    : this._x(d.data, d.i) : this._x(d, i),\n                  y = d.__d3plusShape__ ? d.translate ? d.translate[1]\n                  : this._y(d.data, d.i) : this._y(d, i);\n\n            if (d.__d3plusShape__) {\n              d = d.data;\n              i = d.i;\n            }\n\n            for (let l = 0; l < labels.length; l++) {\n\n              const b = bounds.constructor === Array ? bounds[l] : Object.assign({}, bounds);\n              const rotate = this._rotate(d, i);\n              let r = d.labelConfig && d.labelConfig.rotate ? d.labelConfig.rotate : bounds.angle !== undefined ? bounds.angle : 0;\n              r += rotate;\n              const rotateAnchor = rotate !== 0 ? [b.x * -1 || 0, b.y * -1 || 0] : [b.width / 2, b.height / 2];\n\n              labelData.push({\n                __d3plus__: true,\n                data: d,\n                height: b.height,\n                l,\n                id: `${this._id(d, i)}_${l}`,\n                r,\n                rotateAnchor,\n                text: labels[l],\n                width: b.width,\n                x: x + b.x,\n                y: y + b.y\n              });\n\n            }\n\n          }\n\n        }\n\n      });\n\n    this._labelClass\n      .data(labelData)\n      .duration(this._duration)\n      .fontOpacity(this._nestWrapper(this._opacity))\n      .pointerEvents(\"none\")\n      .rotate(d => d.__d3plus__ ? d.r : d.data.r)\n      .rotateAnchor(d => d.__d3plus__ ? d.rotateAnchor : d.data.rotateAnchor)\n      .select(elem(`g.d3plus-${this._name}-text`, {parent: this._group, update: {opacity: this._active ? this._activeOpacity : 1}}).node())\n      .config(configPrep.bind(this)(this._labelConfig))\n      .render();\n\n  }\n\n  /**\n      @memberof Shape\n      @desc Renders the current Shape to the page. If a *callback* is specified, it will be called once the shapes are done drawing.\n      @param {Function} [*callback*]\n      @chainable\n  */\n  render(callback) {\n\n    if (this._select === void 0) {\n      this.select(select(\"body\").append(\"svg\")\n        .style(\"width\", `${window.innerWidth}px`)\n        .style(\"height\", `${window.innerHeight}px`)\n        .style(\"display\", \"block\").node());\n    }\n\n    this._transition = transition().duration(this._duration);\n\n    let data = this._data, key = this._id;\n    if (this._dataFilter) {\n      data = this._dataFilter(data);\n      if (data.key) key = data.key;\n    }\n\n    if (this._sort) {\n      data = data.sort((a, b) => {\n        while (a.__d3plusShape__ || a.__d3plus__) a = a.data;\n        while (b.__d3plusShape__ || b.__d3plus__) b = b.data;\n        return this._sort(a, b);\n      });\n    }\n\n    selectAll(`g.d3plus-${this._name}-hover > *, g.d3plus-${this._name}-active > *`).each(function(d) {\n      if (d && d.parentNode) d.parentNode.appendChild(this);\n      else this.parentNode.removeChild(this);\n    });\n\n    // Makes the update state of the group selection accessible.\n    this._group = elem(`g.d3plus-${this._name}-group`, {parent: this._select});\n    const update = this._update = elem(`g.d3plus-${this._name}-shape`, {parent: this._group, update: {opacity: this._active ? this._activeOpacity : 1}})\n      .selectAll(`.d3plus-${this._name}`)\n      .data(data, key);\n\n    // Orders and transforms the updating Shapes.\n    update.order();\n    if (this._duration) {\n      update.transition(this._transition)\n        .call(this._applyTransform.bind(this));\n    }\n    else {\n      update.call(this._applyTransform.bind(this));\n    }\n\n    // Makes the enter state of the group selection accessible.\n    const enter = this._enter = update.enter().append(this._tagName)\n      .attr(\"class\", (d, i) => `d3plus-Shape d3plus-${this._name} d3plus-id-${strip(this._nestWrapper(this._id)(d, i))}`)\n      .call(this._applyTransform.bind(this))\n      .attr(\"aria-label\", this._ariaLabel)\n      .attr(\"role\", this._role)\n      .attr(\"opacity\", this._nestWrapper(this._opacity));\n\n    const enterUpdate = enter.merge(update);\n\n    let enterUpdateRender = enterUpdate.attr(\"shape-rendering\", this._nestWrapper(this._shapeRendering));\n\n    if (this._duration) {\n      enterUpdateRender = enterUpdateRender\n        .attr(\"pointer-events\", \"none\")\n        .transition(this._transition).transition().delay(100)\n        .attr(\"pointer-events\", this._pointerEvents);\n    }\n\n    enterUpdateRender\n      .attr(\"opacity\", this._nestWrapper(this._opacity));\n\n    // Makes the exit state of the group selection accessible.\n    const exit = this._exit = update.exit();\n    if (this._duration) exit.transition().delay(this._duration).remove();\n    else exit.remove();\n\n    this._renderImage();\n    this._renderLabels();\n\n    this._hoverGroup = elem(`g.d3plus-${this._name}-hover`, {parent: this._group});\n    this._activeGroup = elem(`g.d3plus-${this._name}-active`, {parent: this._group});\n\n    const hitAreas = this._group.selectAll(\".d3plus-HitArea\")\n      .data(this._hitArea ? data : [], key);\n\n    hitAreas.order()\n      .call(this._applyTransform.bind(this));\n\n    const isLine = this._name === \"Line\";\n\n    isLine && this._path\n      .curve(paths[`curve${this._curve.charAt(0).toUpperCase()}${this._curve.slice(1)}`])\n      .defined(this._defined)\n      .x(this._x)\n      .y(this._y);\n\n    const hitEnter = hitAreas.enter().append(isLine ? \"path\" : \"rect\")\n      .attr(\"class\", (d, i) => `d3plus-HitArea d3plus-id-${strip(this._nestWrapper(this._id)(d, i))}`)\n      .attr(\"fill\", \"black\")\n      .attr(\"stroke\", \"black\")\n      .attr(\"pointer-events\", \"painted\")\n      .attr(\"opacity\", 0)\n      .call(this._applyTransform.bind(this));\n\n    const that = this;\n\n    const hitUpdates = hitAreas.merge(hitEnter)\n      .each(function(d) {\n        const i = that._data.indexOf(d);\n        const h = that._hitArea(d, i, that._aes(d, i));\n        return h && !(that._name === \"Line\" && parseFloat(that._strokeWidth(d, i)) > 10) ? select(this).call(attrize, h) : select(this).remove();\n      });\n\n    hitAreas.exit().remove();\n\n    this._applyEvents(this._hitArea ? hitUpdates : enterUpdate);\n\n    setTimeout(() => {\n      if (this._active) this._renderActive();\n      else if (this._hover) this._renderHover();\n      if (callback) callback();\n    }, this._duration + 100);\n\n    return this;\n\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the highlight accessor to the specified function and returns the current class instance.\n      @param {Function} [*value*]\n      @chainable\n  */\n  active(_) {\n\n    if (!arguments.length || _ === undefined) return this._active;\n    this._active = _;\n    if (this._group) {\n      // this._renderImage();\n      // this._renderLabels();\n      this._renderActive();\n    }\n    return this;\n\n  }\n\n  /**\n      @memberof Shape\n      @desc When shapes are active, this is the opacity of any shape that is not active.\n      @param {Number} *value* = 0.25\n      @chainable\n  */\n  activeOpacity(_) {\n    return arguments.length ? (this._activeOpacity = _, this) : this._activeOpacity;\n  }\n\n  /**\n      @memberof Shape\n      @desc The style to apply to active shapes.\n      @param {Object} *value*\n      @chainable\n  */\n  activeStyle(_) {\n    return arguments.length ? (this._activeStyle = assign({}, this._activeStyle, _), this) : this._activeStyle;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the aria-label attribute to the specified function or string and returns the current class instance.\n      @param {Function|String} *value*\n      @chainable\n  */\n  ariaLabel(_) {\n    return _ !== undefined\n      ? (this._ariaLabel = typeof _ === \"function\" ? _ : constant(_), this)\n      : this._ariaLabel;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the background-image accessor to the specified function or string and returns the current class instance.\n      @param {Function|String} [*value* = false]\n      @chainable\n  */\n  backgroundImage(_) {\n    return arguments.length\n      ? (this._backgroundImage = typeof _ === \"function\" ? _ : constant(_), this)\n      : this._backgroundImage;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *data* is specified, sets the data array to the specified array and returns the current class instance. If *data* is not specified, returns the current data array. A shape will be drawn for each object in the array.\n      @param {Array} [*data* = []]\n      @chainable\n  */\n  data(_) {\n    return arguments.length\n      ? (this._data = _, this)\n      : this._data;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *ms* is specified, sets the animation duration to the specified number and returns the current class instance. If *ms* is not specified, returns the current animation duration.\n      @param {Number} [*ms* = 600]\n      @chainable\n  */\n  duration(_) {\n    return arguments.length\n      ? (this._duration = _, this)\n      : this._duration;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the fill accessor to the specified function or string and returns the current class instance.\n      @param {Function|String} [*value* = \"black\"]\n      @chainable\n  */\n  fill(_) {\n    return arguments.length\n      ? (this._fill = typeof _ === \"function\" ? _ : constant(_), this)\n      : this._fill;\n  }\n\n  /**\n      @memberof Shape\n      @desc Defines the \"fill-opacity\" attribute for the shapes.\n      @param {Function|Number} [*value* = 1]\n      @chainable\n  */\n  fillOpacity(_) {\n    return arguments.length\n      ? (this._fillOpacity = typeof _ === \"function\" ? _ : constant(_), this)\n      : this._fillOpacity;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the highlight accessor to the specified function and returns the current class instance.\n      @param {Function} [*value*]\n      @chainable\n  */\n  hover(_) {\n\n    if (!arguments.length || _ === void 0) return this._hover;\n    this._hover = _;\n    if (this._group) {\n      // this._renderImage();\n      // this._renderLabels();\n      this._renderHover();\n    }\n    return this;\n\n  }\n\n  /**\n      @memberof Shape\n      @desc The style to apply to hovered shapes.\n      @param {Object} *value*\n      @chainable\n   */\n  hoverStyle(_) {\n    return arguments.length ? (this._hoverStyle = assign({}, this._hoverStyle, _), this) : this._hoverStyle;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the hover opacity to the specified function and returns the current class instance.\n      @param {Number} [*value* = 0.5]\n      @chainable\n  */\n  hoverOpacity(_) {\n    return arguments.length ? (this._hoverOpacity = _, this) : this._hoverOpacity;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *bounds* is specified, sets the mouse hit area to the specified function and returns the current class instance. If *bounds* is not specified, returns the current mouse hit area accessor.\n      @param {Function} [*bounds*] The given function is passed the data point, index, and internally defined properties of the shape and should return an object containing the following values: `width`, `height`, `x`, `y`.\n      @chainable\n      @example\nfunction(d, i, shape) {\n  return {\n    \"width\": shape.width,\n    \"height\": shape.height,\n    \"x\": -shape.width / 2,\n    \"y\": -shape.height / 2\n  };\n}\n  */\n  hitArea(_) {\n    return arguments.length ? (this._hitArea = typeof _ === \"function\" ? _ : constant(_), this) : this._hitArea;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the id accessor to the specified function and returns the current class instance.\n      @param {Function} [*value*]\n      @chainable\n  */\n  id(_) {\n    return arguments.length ? (this._id = _, this) : this._id;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the label accessor to the specified function or string and returns the current class instance.\n      @param {Function|String|Array} [*value*]\n      @chainable\n  */\n  label(_) {\n    return arguments.length ? (this._label = typeof _ === \"function\" ? _ : constant(_), this) : this._label;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *bounds* is specified, sets the label bounds to the specified function and returns the current class instance. If *bounds* is not specified, returns the current inner bounds accessor.\n      @param {Function} [*bounds*] The given function is passed the data point, index, and internally defined properties of the shape and should return an object containing the following values: `width`, `height`, `x`, `y`. If an array is returned from the function, each value will be used in conjunction with each label.\n      @chainable\n      @example\nfunction(d, i, shape) {\n  return {\n    \"width\": shape.width,\n    \"height\": shape.height,\n    \"x\": -shape.width / 2,\n    \"y\": -shape.height / 2\n  };\n}\n  */\n  labelBounds(_) {\n    return arguments.length ? (this._labelBounds = typeof _ === \"function\" ? _ : constant(_), this) : this._labelBounds;\n  }\n\n  /**\n      @memberof Shape\n      @desc A pass-through to the config method of the TextBox class used to create a shape's labels.\n      @param {Object} [*value*]\n      @chainable\n  */\n  labelConfig(_) {\n    return arguments.length ? (this._labelConfig = assign(this._labelConfig, _), this) : this._labelConfig;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the opacity accessor to the specified function or number and returns the current class instance.\n      @param {Number} [*value* = 1]\n      @chainable\n  */\n  opacity(_) {\n    return arguments.length ? (this._opacity = typeof _ === \"function\" ? _ : constant(_), this) : this._opacity;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the pointerEvents accessor to the specified function or string and returns the current class instance.\n      @param {String} [*value*]\n      @chainable\n   */\n  pointerEvents(_) {\n    return arguments.length ? (this._pointerEvents = typeof _ === \"function\" ? _ : constant(_), this) : this._pointerEvents;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the role attribute to the specified function or string and returns the current class instance.\n      @param {Function|String} *value*\n      @chainable\n  */\n  role(_) {\n    return _ !== undefined\n      ? (this._role = typeof _ === \"function\" ? _ : constant(_), this)\n      : this._role;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the rotate accessor to the specified function or number and returns the current class instance.\n      @param {Function|Number} [*value* = 0]\n      @chainable\n   */\n  rotate(_) {\n    return arguments.length ? (this._rotate = typeof _ === \"function\" ? _ : constant(_), this) : this._rotate;\n  }\n\n  /**\n      @memberof Shape\n      @desc Defines the \"rx\" attribute for the shapes.\n      @param {Function|Number} [*value* = 0]\n      @chainable\n  */\n  rx(_) {\n    return arguments.length ? (this._rx = typeof _ === \"function\" ? _ : constant(_), this) : this._rx;\n  }\n\n  /**\n      @memberof Shape\n      @desc Defines the \"rx\" attribute for the shapes.\n      @param {Function|Number} [*value* = 0]\n      @chainable\n  */\n  ry(_) {\n    return arguments.length ? (this._ry = typeof _ === \"function\" ? _ : constant(_), this) : this._ry;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the scale accessor to the specified function or string and returns the current class instance.\n      @param {Function|Number} [*value* = 1]\n      @chainable\n  */\n  scale(_) {\n    return arguments.length ? (this._scale = typeof _ === \"function\" ? _ : constant(_), this) : this._scale;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *selector* is specified, sets the SVG container element to the specified d3 selector or DOM element and returns the current class instance. If *selector* is not specified, returns the current SVG container element.\n      @param {String|HTMLElement} [*selector* = d3.select(\"body\").append(\"svg\")]\n      @chainable\n  */\n  select(_) {\n    return arguments.length ? (this._select = select(_), this) : this._select;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the shape-rendering accessor to the specified function or string and returns the current class instance.\n      @param {Function|String} [*value* = \"geometricPrecision\"]\n      @chainable\n      @example\nfunction(d) {\n  return d.x;\n}\n  */\n  shapeRendering(_) {\n    return arguments.length ? (this._shapeRendering = typeof _ === \"function\" ? _ : constant(_), this) : this._shapeRendering;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the sort comparator to the specified function and returns the current class instance.\n      @param {false|Function} [*value* = []]\n      @chainable\n  */\n  sort(_) {\n    return arguments.length ? (this._sort = _, this) : this._sort;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the stroke accessor to the specified function or string and returns the current class instance.\n      @param {Function|String} [*value* = \"black\"]\n      @chainable\n  */\n  stroke(_) {\n    return arguments.length ? (this._stroke = typeof _ === \"function\" ? _ : constant(_), this) : this._stroke;\n  }\n\n  /**\n      @memberof Shape\n      @desc Defines the \"stroke-dasharray\" attribute for the shapes.\n      @param {Function|String} [*value* = \"1\"]\n      @chainable\n  */\n  strokeDasharray(_) {\n    return arguments.length ? (this._strokeDasharray = typeof _ === \"function\" ? _ : constant(_), this) : this._strokeDasharray;\n  }\n\n  /**\n      @memberof Shape\n      @desc Defines the \"stroke-linecap\" attribute for the shapes. Accepted values are `\"butt\"`, `\"round\"`, and `\"square\"`.\n      @param {Function|String} [*value* = \"butt\"]\n      @chainable\n  */\n  strokeLinecap(_) {\n    return arguments.length ? (this._strokeLinecap = typeof _ === \"function\" ? _ : constant(_), this) : this._strokeLinecap;\n  }\n\n  /**\n      @memberof Shape\n      @desc Defines the \"stroke-opacity\" attribute for the shapes.\n      @param {Function|Number} [*value* = 1]\n      @chainable\n  */\n  strokeOpacity(_) {\n    return arguments.length ? (this._strokeOpacity = typeof _ === \"function\" ? _ : constant(_), this) : this._strokeOpacity;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the stroke-width accessor to the specified function or string and returns the current class instance.\n      @param {Function|Number} [*value* = 0]\n      @chainable\n  */\n  strokeWidth(_) {\n    return arguments.length ? (this._strokeWidth = typeof _ === \"function\" ? _ : constant(_), this) : this._strokeWidth;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the text-anchor accessor to the specified function or string and returns the current class instance.\n      @param {Function|String|Array} [*value* = \"start\"]\n      @chainable\n  */\n  textAnchor(_) {\n    return arguments.length ? (this._textAnchor = typeof _ === \"function\" ? _ : constant(_), this) : this._textAnchor;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the vector-effect accessor to the specified function or string and returns the current class instance.\n      @param {Function|String} [*value* = \"non-scaling-stroke\"]\n      @chainable\n  */\n  vectorEffect(_) {\n    return arguments.length ? (this._vectorEffect = typeof _ === \"function\" ? _ : constant(_), this) : this._vectorEffect;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the vertical alignment accessor to the specified function or string and returns the current class instance.\n      @param {Function|String|Array} [*value* = \"start\"]\n      @chainable\n  */\n  verticalAlign(_) {\n    return arguments.length ? (this._verticalAlign = typeof _ === \"function\" ? _ : constant(_), this) : this._verticalAlign;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the x accessor to the specified function or number and returns the current class instance.\n      @param {Function|Number} [*value*]\n      @chainable\n      @example\nfunction(d) {\n  return d.x;\n}\n  */\n  x(_) {\n    return arguments.length ? (this._x = typeof _ === \"function\" ? _ : constant(_), this) : this._x;\n  }\n\n  /**\n      @memberof Shape\n      @desc If *value* is specified, sets the y accessor to the specified function or number and returns the current class instance.\n      @param {Function|Number} [*value*]\n      @chainable\n      @example\nfunction(d) {\n  return d.y;\n}\n  */\n  y(_) {\n    return arguments.length ? (this._y = typeof _ === \"function\" ? _ : constant(_), this) : this._y;\n  }\n\n}\n","/**\n    @function lineIntersection\n    @desc Finds the intersection point (if there is one) of the lines p1q1 and p2q2.\n    @param {Array} p1 The first point of the first line segment, which should always be an `[x, y]` formatted Array.\n    @param {Array} q1 The second point of the first line segment, which should always be an `[x, y]` formatted Array.\n    @param {Array} p2 The first point of the second line segment, which should always be an `[x, y]` formatted Array.\n    @param {Array} q2 The second point of the second line segment, which should always be an `[x, y]` formatted Array.\n    @returns {Boolean}\n*/\nexport default function(p1, q1, p2, q2) {\n\n  // allow for some margins due to numerical errors\n  const eps = 1e-9;\n\n  // find the intersection point between the two infinite lines\n  const dx1 = p1[0] - q1[0],\n        dx2 = p2[0] - q2[0],\n        dy1 = p1[1] - q1[1],\n        dy2 = p2[1] - q2[1];\n\n  const denom = dx1 * dy2 - dy1 * dx2;\n\n  if (Math.abs(denom) < eps) return null;\n\n  const cross1 = p1[0] * q1[1] - p1[1] * q1[0],\n        cross2 = p2[0] * q2[1] - p2[1] * q2[0];\n\n  const px = (cross1 * dx2 - cross2 * dx1) / denom,\n        py = (cross1 * dy2 - cross2 * dy1) / denom;\n\n  return [px, py];\n\n}\n","/**\n    @function segmentBoxContains\n    @desc Checks whether a point is inside the bounding box of a line segment.\n    @param {Array} s1 The first point of the line segment to be used for the bounding box, which should always be an `[x, y]` formatted Array.\n    @param {Array} s2 The second point of the line segment to be used for the bounding box, which should always be an `[x, y]` formatted Array.\n    @param {Array} p The point to be checked, which should always be an `[x, y]` formatted Array.\n    @returns {Boolean}\n*/\nexport default function(s1, s2, p) {\n\n  const eps = 1e-9, [px, py] = p;\n\n  return !(px < Math.min(s1[0], s2[0]) - eps || px > Math.max(s1[0], s2[0]) + eps ||\n           py < Math.min(s1[1], s2[1]) - eps || py > Math.max(s1[1], s2[1]) + eps);\n\n}\n","import lineIntersection from \"./lineIntersection\";\nimport segmentBoxContains from \"./segmentBoxContains\";\n\n/**\n    @function segmentsIntersect\n    @desc Checks whether the line segments p1q1 && p2q2 intersect.\n    @param {Array} p1 The first point of the first line segment, which should always be an `[x, y]` formatted Array.\n    @param {Array} q1 The second point of the first line segment, which should always be an `[x, y]` formatted Array.\n    @param {Array} p2 The first point of the second line segment, which should always be an `[x, y]` formatted Array.\n    @param {Array} q2 The second point of the second line segment, which should always be an `[x, y]` formatted Array.\n    @returns {Boolean}\n*/\nexport default function(p1, q1, p2, q2) {\n\n  const p = lineIntersection(p1, q1, p2, q2);\n  if (!p) return false;\n  return segmentBoxContains(p1, q1, p) && segmentBoxContains(p2, q2, p);\n\n}\n","import {polygonContains} from \"d3-polygon\";\n\nimport segmentsIntersect from \"./segmentsIntersect\";\n\n/**\n    @function polygonInside\n    @desc Checks if one polygon is inside another polygon.\n    @param {Array} polyA An Array of `[x, y]` points to be used as the inner polygon, checking if it is inside polyA.\n    @param {Array} polyB An Array of `[x, y]` points to be used as the containing polygon.\n    @returns {Boolean}\n*/\nexport default function(polyA, polyB) {\n\n  let iA = -1;\n  const nA = polyA.length;\n  const nB = polyB.length;\n  let bA = polyA[nA - 1];\n\n  while (++iA < nA) {\n\n    const aA = bA;\n    bA = polyA[iA];\n\n    let iB = -1;\n    let bB = polyB[nB - 1];\n    while (++iB < nB) {\n      const aB = bB;\n      bB = polyB[iB];\n      if (segmentsIntersect(aA, bA, aB, bB)) return false;\n    }\n  }\n\n  return polygonContains(polyB, polyA[0]);\n\n}\n","import lineIntersection from \"./lineIntersection\";\nimport segmentBoxContains from \"./segmentBoxContains\";\nimport pointDistanceSquared from \"./pointDistanceSquared\";\n\n/**\n    @function polygonRayCast\n    @desc Gives the two closest intersection points between a ray cast from a point inside a polygon. The two points should lie on opposite sides of the origin.\n    @param {Array} poly The polygon to test against, which should be an `[x, y]` formatted Array.\n    @param {Array} origin The origin point of the ray to be cast, which should be an `[x, y]` formatted Array.\n    @param {Number} [alpha = 0] The angle in radians of the ray.\n    @returns {Array} An array containing two values, the closest point on the left and the closest point on the right. If either point cannot be found, that value will be `null`.\n*/\nexport default function(poly, origin, alpha = 0) {\n\n  const eps = 1e-9;\n  origin = [origin[0] + eps * Math.cos(alpha), origin[1] + eps * Math.sin(alpha)];\n  const [x0, y0] = origin;\n  const shiftedOrigin = [x0 + Math.cos(alpha), y0 + Math.sin(alpha)];\n\n  let idx = 0;\n  if (Math.abs(shiftedOrigin[0] - x0) < eps) idx = 1;\n  let i = -1;\n  const n = poly.length;\n  let b = poly[n - 1];\n  let minSqDistLeft = Number.MAX_VALUE;\n  let minSqDistRight = Number.MAX_VALUE;\n  let closestPointLeft = null;\n  let closestPointRight = null;\n  while (++i < n) {\n    const a = b;\n    b = poly[i];\n    const p = lineIntersection(origin, shiftedOrigin, a, b);\n    if (p && segmentBoxContains(a, b, p)) {\n      const sqDist = pointDistanceSquared(origin, p);\n      if (p[idx] < origin[idx]) {\n        if (sqDist < minSqDistLeft) {\n          minSqDistLeft = sqDist;\n          closestPointLeft = p;\n        }\n      }\n      else if (p[idx] > origin[idx]) {\n        if (sqDist < minSqDistRight) {\n          minSqDistRight = sqDist;\n          closestPointRight = p;\n        }\n      }\n    }\n  }\n\n  return [closestPointLeft, closestPointRight];\n\n}\n","/**\n    @function pointRotate\n    @desc Rotates a point around a given origin.\n    @param {Array} p The point to be rotated, which should always be an `[x, y]` formatted Array.\n    @param {Number} alpha The angle in radians to rotate.\n    @param {Array} [origin = [0, 0]] The origin point of the rotation, which should always be an `[x, y]` formatted Array.\n    @returns {Boolean}\n*/\nexport default function(p, alpha, origin = [0, 0]) {\n\n  const cosAlpha = Math.cos(alpha),\n        sinAlpha = Math.sin(alpha),\n        xshifted = p[0] - origin[0],\n        yshifted = p[1] - origin[1];\n\n  return [\n    cosAlpha * xshifted - sinAlpha * yshifted + origin[0],\n    sinAlpha * xshifted + cosAlpha * yshifted + origin[1]\n  ];\n\n}\n","import pointRotate from \"./pointRotate\";\n\n/**\n    @function polygonRotate\n    @desc Rotates a point around a given origin.\n    @param {Array} poly The polygon to be rotated, which should be an Array of `[x, y]` values.\n    @param {Number} alpha The angle in radians to rotate.\n    @param {Array} [origin = [0, 0]] The origin point of the rotation, which should be an `[x, y]` formatted Array.\n    @returns {Boolean}\n*/\nexport default (poly, alpha, origin = [0, 0]) => poly.map(p => pointRotate(p, alpha, origin));\n","import pointDistanceSquared from \"./pointDistanceSquared\";\n\n/**\n    @desc square distance from a point to a segment\n    @param {Array} point\n    @param {Array} segmentAnchor1\n    @param {Array} segmentAnchor2\n    @private\n*/\nfunction getSqSegDist(p, p1, p2) {\n\n  let x = p1[0],\n      y = p1[1];\n\n  let dx = p2[0] - x,\n      dy = p2[1] - y;\n\n  if (dx !== 0 || dy !== 0) {\n\n    const t = ((p[0] - x) * dx + (p[1] - y) * dy) / (dx * dx + dy * dy);\n\n    if (t > 1) {\n      x = p2[0];\n      y = p2[1];\n\n    }\n    else if (t > 0) {\n      x += dx * t;\n      y += dy * t;\n    }\n\n  }\n\n  dx = p[0] - x;\n  dy = p[1] - y;\n\n  return dx * dx + dy * dy;\n\n}\n\n/**\n    @desc basic distance-based simplification\n    @param {Array} polygon\n    @param {Number} sqTolerance\n    @private\n*/\nfunction simplifyRadialDist(poly, sqTolerance) {\n\n  let point,\n      prevPoint = poly[0];\n\n  const newPoints = [prevPoint];\n\n  for (let i = 1, len = poly.length; i < len; i++) {\n    point = poly[i];\n\n    if (pointDistanceSquared(point, prevPoint) > sqTolerance) {\n      newPoints.push(point);\n      prevPoint = point;\n    }\n  }\n\n  if (prevPoint !== point) newPoints.push(point);\n\n  return newPoints;\n}\n\n/**\n    @param {Array} polygon\n    @param {Number} first\n    @param {Number} last\n    @param {Number} sqTolerance\n    @param {Array} simplified\n    @private\n*/\nfunction simplifyDPStep(poly, first, last, sqTolerance, simplified) {\n\n  let index, maxSqDist = sqTolerance;\n\n  for (let i = first + 1; i < last; i++) {\n    const sqDist = getSqSegDist(poly[i], poly[first], poly[last]);\n\n    if (sqDist > maxSqDist) {\n      index = i;\n      maxSqDist = sqDist;\n    }\n  }\n\n  if (maxSqDist > sqTolerance) {\n    if (index - first > 1) simplifyDPStep(poly, first, index, sqTolerance, simplified);\n    simplified.push(poly[index]);\n    if (last - index > 1) simplifyDPStep(poly, index, last, sqTolerance, simplified);\n  }\n}\n\n/**\n    @desc simplification using Ramer-Douglas-Peucker algorithm\n    @param {Array} polygon\n    @param {Number} sqTolerance\n    @private\n*/\nfunction simplifyDouglasPeucker(poly, sqTolerance) {\n  const last = poly.length - 1;\n\n  const simplified = [poly[0]];\n  simplifyDPStep(poly, 0, last, sqTolerance, simplified);\n  simplified.push(poly[last]);\n\n  return simplified;\n}\n\n/**\n    @function largestRect\n    @desc Simplifies the points of a polygon using both the Ramer-Douglas-Peucker algorithm and basic distance-based simplification. Adapted to an ES6 module from the excellent [Simplify.js](http://mourner.github.io/simplify-js/).\n    @author Vladimir Agafonkin\n    @param {Array} poly An Array of points that represent a polygon.\n    @param {Number} [tolerance = 1] Affects the amount of simplification (in the same metric as the point coordinates).\n    @param {Boolean} [highestQuality = false] Excludes distance-based preprocessing step which leads to highest quality simplification but runs ~10-20 times slower.\n\n*/\nexport default (poly, tolerance = 1, highestQuality = false) => {\n\n  if (poly.length <= 2) return poly;\n\n  const sqTolerance = tolerance * tolerance;\n\n  poly = highestQuality ? poly : simplifyRadialDist(poly, sqTolerance);\n  poly = simplifyDouglasPeucker(poly, sqTolerance);\n\n  return poly;\n\n};\n","import {extent, merge, range} from \"d3-array\";\nimport {polygonArea, polygonCentroid, polygonContains} from \"d3-polygon\";\n\nimport polygonInside from \"./polygonInside\";\nimport polygonRayCast from \"./polygonRayCast\";\nimport polygonRotate from \"./polygonRotate\";\nimport simplify from \"./simplify\";\nimport pointDistanceSquared from \"./pointDistanceSquared\";\n\n// Algorithm constants\nconst aspectRatioStep = 0.5; // step size for the aspect ratio\nconst angleStep = 5; // step size for angles (in degrees); has linear impact on running time\n\nconst polyCache = {};\n\n/**\n    @typedef {Object} LargestRect\n    @desc The returned Object of the largestRect function.\n    @property {Number} width The width of the rectangle\n    @property {Number} height The height of the rectangle\n    @property {Number} cx The x coordinate of the rectangle's center\n    @property {Number} cy The y coordinate of the rectangle's center\n    @property {Number} angle The rotation angle of the rectangle in degrees. The anchor of rotation is the center point.\n    @property {Number} area The area of the largest rectangle.\n    @property {Array} points An array of x/y coordinates for each point in the rectangle, useful for rendering paths.\n*/\n\n/**\n    @function largestRect\n    @author Daniel Smilkov [dsmilkov@gmail.com]\n    @desc An angle of zero means that the longer side of the polygon (the width) will be aligned with the x axis. An angle of 90 and/or -90 means that the longer side of the polygon (the width) will be aligned with the y axis. The value can be a number between -90 and 90 specifying the angle of rotation of the polygon, a string which is parsed to a number, or an array of numbers specifying the possible rotations of the polygon.\n    @param {Array} poly An Array of points that represent a polygon.\n    @param {Object} [options] An Object that allows for overriding various parameters of the algorithm.\n    @param {Number|String|Array} [options.angle = d3.range(-90, 95, 5)] The allowed rotations of the final rectangle.\n    @param {Number|String|Array} [options.aspectRatio] The ratio between the width and height of the rectangle. The value can be a number, a string which is parsed to a number, or an array of numbers specifying the possible aspect ratios of the final rectangle.\n    @param {Number} [options.maxAspectRatio = 15] The maximum aspect ratio (width/height) allowed for the rectangle. This property should only be used if the aspectRatio is not provided.\n    @param {Number} [options.minAspectRatio = 1] The minimum aspect ratio (width/height) allowed for the rectangle. This property should only be used if the aspectRatio is not provided.\n    @param {Number} [options.nTries = 20] The number of randomly drawn points inside the polygon which the algorithm explores as possible center points of the maximal rectangle.\n    @param {Number} [options.minHeight = 0] The minimum height of the rectangle.\n    @param {Number} [options.minWidth = 0] The minimum width of the rectangle.\n    @param {Number} [options.tolerance = 0.02] The simplification tolerance factor, between 0 and 1. A larger tolerance corresponds to more extensive simplification.\n    @param {Array} [options.origin] The center point of the rectangle. If specified, the rectangle will be fixed at that point, otherwise the algorithm optimizes across all possible points. The given value can be either a two dimensional array specifying the x and y coordinate of the origin or an array of two dimensional points specifying multiple possible center points of the rectangle.\n    @param {Boolean} [options.cache] Whether or not to cache the result, which would be used in subsequent calculations to preserve consistency and speed up calculation time.\n    @return {LargestRect}\n*/\nexport default function(poly, options = {}) {\n\n  if (poly.length < 3) {\n    if (options.verbose) console.error(\"polygon has to have at least 3 points\", poly);\n    return null;\n  }\n\n  // For visualization debugging purposes\n  const events = [];\n\n  // User's input normalization\n  options = Object.assign({\n    angle: range(-90, 90 + angleStep, angleStep),\n    cache: true,\n    maxAspectRatio: 15,\n    minAspectRatio: 1,\n    minHeight: 0,\n    minWidth: 0,\n    nTries: 20,\n    tolerance: 0.02,\n    verbose: false\n  }, options);\n\n  const angles = options.angle instanceof Array ? options.angle\n    : typeof options.angle === \"number\" ? [options.angle]\n    : typeof options.angle === \"string\" && !isNaN(options.angle) ? [Number(options.angle)]\n    : [];\n\n  const aspectRatios = options.aspectRatio instanceof Array ? options.aspectRatio\n    : typeof options.aspectRatio === \"number\" ? [options.aspectRatio]\n    : typeof options.aspectRatio === \"string\" && !isNaN(options.aspectRatio) ? [Number(options.aspectRatio)]\n    : [];\n\n  const origins = options.origin && options.origin instanceof Array\n    ? options.origin[0] instanceof Array ? options.origin\n    : [options.origin] : [];\n\n  let cacheString;\n  if (options.cache) {\n    cacheString = merge(poly).join(\",\");\n    cacheString += `-${options.minAspectRatio}`;\n    cacheString += `-${options.maxAspectRatio}`;\n    cacheString += `-${options.minHeight}`;\n    cacheString += `-${options.minWidth}`;\n    cacheString += `-${angles.join(\",\")}`;\n    cacheString += `-${origins.join(\",\")}`;\n    if (polyCache[cacheString]) return polyCache[cacheString];\n  }\n\n  const area = Math.abs(polygonArea(poly)); // take absolute value of the signed area\n  if (area === 0) {\n    if (options.verbose) console.error(\"polygon has 0 area\", poly);\n    return null;\n  }\n  // get the width of the bounding box of the original polygon to determine tolerance\n  let [minx, maxx] = extent(poly, d => d[0]);\n  let [miny, maxy] = extent(poly, d => d[1]);\n\n  // simplify polygon\n  const tolerance = Math.min(maxx - minx, maxy - miny) * options.tolerance;\n\n  if (tolerance > 0) poly = simplify(poly, tolerance);\n  if (options.events) events.push({type: \"simplify\", poly});\n\n  // get the width of the bounding box of the simplified polygon\n  [minx, maxx] = extent(poly, d => d[0]);\n  [miny, maxy] = extent(poly, d => d[1]);\n  const [boxWidth, boxHeight] = [maxx - minx, maxy - miny];\n\n  // discretize the binary search for optimal width to a resolution of this times the polygon width\n  const widthStep = Math.min(boxWidth, boxHeight) / 50;\n\n  // populate possible center points with random points inside the polygon\n  if (!origins.length) {\n    // get the centroid of the polygon\n    const centroid = polygonCentroid(poly);\n    if (!isFinite(centroid[0])) {\n      if (options.verbose) console.error(\"cannot find centroid\", poly);\n      return null;\n    }\n    if (polygonContains(poly, centroid)) origins.push(centroid);\n\n    let nTries = options.nTries;\n    // get few more points inside the polygon\n    while (nTries) {\n      const rndX = Math.random() * boxWidth + minx;\n      const rndY = Math.random() * boxHeight + miny;\n      const rndPoint = [rndX, rndY];\n      if (polygonContains(poly, rndPoint)) {\n        origins.push(rndPoint);\n      }\n      nTries--;\n    }\n  }\n  if (options.events) events.push({type: \"origins\", points: origins});\n  let maxArea = 0;\n  let maxRect = null;\n\n  for (let ai = 0; ai < angles.length; ai++) {\n    const angle = angles[ai];\n    const angleRad = -angle * Math.PI / 180;\n    if (options.events) events.push({type: \"angle\", angle});\n    for (let i = 0; i < origins.length; i++) {\n      const origOrigin = origins[i];\n      // generate improved origins\n      const [p1W, p2W] = polygonRayCast(poly, origOrigin, angleRad);\n      const [p1H, p2H] = polygonRayCast(poly, origOrigin, angleRad + Math.PI / 2);\n      const modifOrigins = [];\n      if (p1W && p2W) modifOrigins.push([(p1W[0] + p2W[0]) / 2, (p1W[1] + p2W[1]) / 2]); // average along with width axis\n      if (p1H && p2H) modifOrigins.push([(p1H[0] + p2H[0]) / 2, (p1H[1] + p2H[1]) / 2]); // average along with height axis\n\n      if (options.events) events.push({type: \"modifOrigin\", idx: i, p1W, p2W, p1H, p2H, modifOrigins});\n\n      for (let i = 0; i < modifOrigins.length; i++) {\n\n        const origin = modifOrigins[i];\n\n        if (options.events) events.push({type: \"origin\", cx: origin[0], cy: origin[1]});\n\n        const [p1W, p2W] = polygonRayCast(poly, origin, angleRad);\n        if (p1W === null || p2W === null) continue;\n        const minSqDistW = Math.min(pointDistanceSquared(origin, p1W), pointDistanceSquared(origin, p2W));\n        const maxWidth = 2 * Math.sqrt(minSqDistW);\n\n        const [p1H, p2H] = polygonRayCast(poly, origin, angleRad + Math.PI / 2);\n        if (p1H === null || p2H === null) continue;\n        const minSqDistH = Math.min(pointDistanceSquared(origin, p1H), pointDistanceSquared(origin, p2H));\n        const maxHeight = 2 * Math.sqrt(minSqDistH);\n\n        if (maxWidth * maxHeight < maxArea) continue;\n\n        let aRatios = aspectRatios;\n        if (!aRatios.length) {\n          const minAspectRatio = Math.max(options.minAspectRatio, options.minWidth / maxHeight, maxArea / (maxHeight * maxHeight));\n          const maxAspectRatio = Math.min(options.maxAspectRatio, maxWidth / options.minHeight, maxWidth * maxWidth / maxArea);\n          aRatios = range(minAspectRatio, maxAspectRatio + aspectRatioStep, aspectRatioStep);\n        }\n\n        for (let a = 0; a < aRatios.length; a++) {\n\n          const aRatio = aRatios[a];\n\n          // do a binary search to find the max width that works\n          let left = Math.max(options.minWidth, Math.sqrt(maxArea * aRatio));\n          let right = Math.min(maxWidth, maxHeight * aRatio);\n          if (right * maxHeight < maxArea) continue;\n\n          if (options.events && right - left >= widthStep) events.push({type: \"aRatio\", aRatio});\n\n          while (right - left >= widthStep) {\n            const width = (left + right) / 2;\n            const height = width / aRatio;\n            const [cx, cy] = origin;\n            let rectPoly = [\n              [cx - width / 2, cy - height / 2],\n              [cx + width / 2, cy - height / 2],\n              [cx + width / 2, cy + height / 2],\n              [cx - width / 2, cy + height / 2]\n            ];\n            rectPoly = polygonRotate(rectPoly, angleRad, origin);\n            const insidePoly = polygonInside(rectPoly, poly);\n            if (insidePoly) {\n              // we know that the area is already greater than the maxArea found so far\n              maxArea = width * height;\n              rectPoly.push(rectPoly[0]);\n              maxRect = {area: maxArea, cx, cy, width, height, angle: -angle, points: rectPoly};\n              left = width; // increase the width in the binary search\n            }\n            else {\n              right = width; // decrease the width in the binary search\n            }\n            if (options.events) events.push({type: \"rectangle\", areaFraction: width * height / area, cx, cy, width, height, angle, insidePoly});\n\n          }\n\n        }\n\n      }\n\n    }\n\n  }\n\n  if (options.cache) {\n    polyCache[cacheString] = maxRect;\n  }\n\n  return options.events ? Object.assign(maxRect || {}, {events}) : maxRect;\n\n}\n","import {extent} from \"d3-array\";\nimport {nest} from \"d3-collection\";\nimport {interpolatePath} from \"d3-interpolate-path\";\nimport {select} from \"d3-selection\";\nimport * as paths from \"d3-shape\";\n\nimport {accessor, constant, merge} from \"d3plus-common\";\n\nimport Shape from \"./Shape\";\nimport largestRect from \"../geom/largestRect\";\n\n/**\n    @class Area\n    @extends Shape\n    @desc Creates SVG areas based on an array of data.\n*/\nexport default class Area extends Shape {\n\n  /**\n      @memberof Area\n      @desc Invoked when creating a new class instance, and overrides any default parameters inherited from Shape.\n      @private\n  */\n  constructor() {\n\n    super();\n\n    this._curve = \"linear\";\n    this._defined = () => true;\n    this._labelBounds = (d, i, aes) => {\n      const r = largestRect(aes.points);\n      if (!r) return null;\n      return {angle: r.angle, width: r.width, height: r.height, x: r.cx - r.width / 2 - this._x(d, i), y: r.cy - r.height / 2 - this._y(d, i)};\n    };\n    this._labelConfig = Object.assign(this._labelConfig, {\n      textAnchor: \"middle\",\n      verticalAlign: \"middle\"\n    });\n    this._name = \"Area\";\n    this._x = accessor(\"x\");\n    this._x0 = accessor(\"x\");\n    this._x1 = null;\n    this._y = constant(0);\n    this._y0 = constant(0);\n    this._y1 = accessor(\"y\");\n\n  }\n\n  /**\n      @memberof Area\n      @desc Given a specific data point and index, returns the aesthetic properties of the shape.\n      @param {Object} *data point*\n      @param {Number} *index*\n      @private\n  */\n  _aes(d) {\n    const values = d.values.slice().sort((a, b) => this._y1 ? this._x(a) - this._x(b) : this._y(a) - this._y(b));\n    const points1 = values.map((v, z) => [this._x0(v, z), this._y0(v, z)]);\n    const points2 = values.reverse().map((v, z) => this._y1 ? [this._x(v, z), this._y1(v, z)] : [this._x1(v, z), this._y(v, z)]);\n    let points = points1.concat(points2);\n    if (points1[0][1] > points2[0][1]) points = points.reverse();\n    points.push(points[0]);\n    return {points};\n  }\n\n  /**\n      @memberof Area\n      @desc Filters/manipulates the data array before binding each point to an SVG group.\n      @param {Array} [*data* = the data array to be filtered]\n      @private\n  */\n  _dataFilter(data) {\n\n    const areas = nest().key(this._id).entries(data).map(d => {\n\n      d.data = merge(d.values);\n      d.i = data.indexOf(d.values[0]);\n\n      const x = extent(d.values.map(this._x)\n        .concat(d.values.map(this._x0))\n        .concat(this._x1 ? d.values.map(this._x1) : [])\n      );\n      d.xR = x;\n      d.width = x[1] - x[0];\n      d.x = x[0] + d.width / 2;\n\n      const y = extent(d.values.map(this._y)\n        .concat(d.values.map(this._y0))\n        .concat(this._y1 ? d.values.map(this._y1) : [])\n      );\n      d.yR = y;\n      d.height = y[1] - y[0];\n      d.y = y[0] + d.height / 2;\n\n      d.nested = true;\n      d.translate = [d.x, d.y];\n      d.__d3plusShape__ = true;\n\n      return d;\n    });\n\n    areas.key = d => d.key;\n    return areas;\n\n  }\n\n  /**\n      @memberof Area\n      @desc Draws the area polygons.\n      @param {Function} [*callback*]\n      @chainable\n  */\n  render(callback) {\n\n    super.render(callback);\n\n    const path = this._path = paths.area()\n      .defined(this._defined)\n      .curve(paths[`curve${this._curve.charAt(0).toUpperCase()}${this._curve.slice(1)}`])\n      .x(this._x).x0(this._x0).x1(this._x1)\n      .y(this._y).y0(this._y0).y1(this._y1);\n\n    const exitPath = paths.area()\n      .defined(d => d)\n      .curve(paths[`curve${this._curve.charAt(0).toUpperCase()}${this._curve.slice(1)}`])\n      .x(this._x).y(this._y)\n      .x0((d, i) => this._x1 ? this._x0(d, i) + (this._x1(d, i) - this._x0(d, i)) / 2 : this._x0(d, i))\n      .x1((d, i) => this._x1 ? this._x0(d, i) + (this._x1(d, i) - this._x0(d, i)) / 2 : this._x0(d, i))\n      .y0((d, i) => this._y1 ? this._y0(d, i) + (this._y1(d, i) - this._y0(d, i)) / 2 : this._y0(d, i))\n      .y1((d, i) => this._y1 ? this._y0(d, i) + (this._y1(d, i) - this._y0(d, i)) / 2 : this._y0(d, i));\n\n    this._enter.append(\"path\")\n      .attr(\"transform\", d => `translate(${-d.xR[0] - d.width / 2}, ${-d.yR[0] - d.height / 2})`)\n      .attr(\"d\", d => exitPath(d.values))\n      .call(this._applyStyle.bind(this))\n      .transition(this._transition)\n        .attrTween(\"d\", function(d) {\n          return interpolatePath(select(this).attr(\"d\"), path(d.values));\n        });\n\n    this._update.select(\"path\").transition(this._transition)\n      .attr(\"transform\", d => `translate(${-d.xR[0] - d.width / 2}, ${-d.yR[0] - d.height / 2})`)\n      .attrTween(\"d\", function(d) {\n        return interpolatePath(select(this).attr(\"d\"), path(d.values));\n      })\n      .call(this._applyStyle.bind(this));\n\n    this._exit.select(\"path\").transition(this._transition)\n      .attrTween(\"d\", function(d) {\n        return interpolatePath(select(this).attr(\"d\"), exitPath(d.values));\n      });\n\n    return this;\n\n  }\n\n  /**\n      @memberof Area\n      @desc If *value* is specified, sets the area curve to the specified string and returns the current class instance. If *value* is not specified, returns the current area curve.\n      @param {String} [*value* = \"linear\"]\n      @chainable\n  */\n  curve(_) {\n    return arguments.length ? (this._curve = _, this) : this._curve;\n  }\n\n  /**\n      @memberof Area\n      @desc If *value* is specified, sets the defined accessor to the specified function and returns the current class instance. If *value* is not specified, returns the current defined accessor.\n      @param {Function} [*value*]\n      @chainable\n  */\n  defined(_) {\n    return arguments.length ? (this._defined = _, this) : this._defined;\n  }\n\n  /**\n      @memberof Area\n      @desc If *value* is specified, sets the x accessor to the specified function or number and returns the current class instance. If *value* is not specified, returns the current x accessor.\n      @param {Function|Number} [*value*]\n      @chainable\n  */\n  x(_) {\n    if (!arguments.length) return this._x;\n    this._x = typeof _ === \"function\" ? _ : constant(_);\n    this._x0 = this._x;\n    return this;\n  }\n\n  /**\n      @memberof Area\n      @desc If *value* is specified, sets the x0 accessor to the specified function or number and returns the current class instance. If *value* is not specified, returns the current x0 accessor.\n      @param {Function|Number} [*value*]\n      @chainable\n  */\n  x0(_) {\n    if (!arguments.length) return this._x0;\n    this._x0 = typeof _ === \"function\" ? _ : constant(_);\n    this._x = this._x0;\n    return this;\n  }\n\n  /**\n      @memberof Area\n      @desc If *value* is specified, sets the x1 accessor to the specified function or number and returns the current class instance. If *value* is not specified, returns the current x1 accessor.\n      @param {Function|Number|null} [*value*]\n      @chainable\n  */\n  x1(_) {\n    return arguments.length ? (this._x1 = typeof _ === \"function\" || _ === null ? _ : constant(_), this) : this._x1;\n  }\n\n  /**\n      @memberof Area\n      @desc If *value* is specified, sets the y accessor to the specified function or number and returns the current class instance. If *value* is not specified, returns the current y accessor.\n      @param {Function|Number} [*value*]\n      @chainable\n  */\n  y(_) {\n    if (!arguments.length) return this._y;\n    this._y = typeof _ === \"function\" ? _ : constant(_);\n    this._y0 = this._y;\n    return this;\n  }\n\n  /**\n      @memberof Area\n      @desc If *value* is specified, sets the y0 accessor to the specified function or number and returns the current class instance. If *value* is not specified, returns the current y0 accessor.\n      @param {Function|Number} [*value*]\n      @chainable\n  */\n  y0(_) {\n    if (!arguments.length) return this._y0;\n    this._y0 = typeof _ === \"function\" ? _ : constant(_);\n    this._y = this._y0;\n    return this;\n  }\n\n  /**\n      @memberof Area\n      @desc If *value* is specified, sets the y1 accessor to the specified function or number and returns the current class instance. If *value* is not specified, returns the current y1 accessor.\n      @param {Function|Number|null} [*value*]\n      @chainable\n  */\n  y1(_) {\n    return arguments.length ? (this._y1 = typeof _ === \"function\" || _ === null ? _ : constant(_), this) : this._y1;\n  }\n\n}\n","import {accessor, constant} from \"d3plus-common\";\n\nimport Shape from \"./Shape\";\n\n/**\n    @class Bar\n    @extends Shape\n    @desc Creates SVG areas based on an array of data.\n*/\nexport default class Bar extends Shape {\n\n  /**\n      @memberof Bar\n      @desc Invoked when creating a new class instance, and overrides any default parameters inherited from Shape.\n      @private\n  */\n  constructor() {\n\n    super(\"rect\");\n\n    this._name = \"Bar\";\n    this._height = constant(10);\n    this._labelBounds = (d, i, s) => ({\n      width: s.width,\n      height: s.height,\n      x: this._x1 !== null ? this._getX(d, i) : -s.width / 2,\n      y: this._x1 === null ? this._getY(d, i) : -s.height / 2\n    });\n    this._width = constant(10);\n    this._x = accessor(\"x\");\n    this._x0 = accessor(\"x\");\n    this._x1 = null;\n    this._y = constant(0);\n    this._y0 = constant(0);\n    this._y1 = accessor(\"y\");\n\n  }\n\n  /**\n      @memberof Bar\n      @desc Draws the bars.\n      @param {Function} [*callback*]\n      @chainable\n  */\n  render(callback) {\n\n    super.render(callback);\n\n    let enter = this._enter\n      .attr(\"width\", (d, i) => this._x1 === null ? this._getWidth(d, i) : 0)\n      .attr(\"height\", (d, i) => this._x1 !== null ? this._getHeight(d, i) : 0)\n      .attr(\"x\", (d, i) => this._x1 === null ? -this._getWidth(d, i) / 2 : 0)\n      .attr(\"y\", (d, i) => this._x1 !== null ? -this._getHeight(d, i) / 2 : 0)\n      .call(this._applyStyle.bind(this));\n\n    let update = this._update;\n\n    if (this._duration) {\n      enter = enter.transition(this._transition);\n      update = update.transition(this._transition);\n      this._exit.transition(this._transition)\n        .attr(\"width\", (d, i) => this._x1 === null ? this._getWidth(d, i) : 0)\n        .attr(\"height\", (d, i) => this._x1 !== null ? this._getHeight(d, i) : 0)\n        .attr(\"x\", (d, i) => this._x1 === null ? -this._getWidth(d, i) / 2 : 0)\n        .attr(\"y\", (d, i) => this._x1 !== null ? -this._getHeight(d, i) / 2 : 0);\n    }\n\n    enter\n      .call(this._applyPosition.bind(this));\n\n    update\n      .call(this._applyStyle.bind(this))\n      .call(this._applyPosition.bind(this));\n\n    return this;\n\n  }\n\n  /**\n      @memberof Bar\n      @desc Given a specific data point and index, returns the aesthetic properties of the shape.\n      @param {Object} *data point*\n      @param {Number} *index*\n      @private\n  */\n  _aes(d, i) {\n    return {height: this._getHeight(d, i), width: this._getWidth(d, i)};\n  }\n\n  /**\n      @memberof Bar\n      @desc Provides the default positioning to the <rect> elements.\n      @param {D3Selection} *elem*\n      @private\n  */\n  _applyPosition(elem) {\n    elem\n      .attr(\"width\", (d, i) => this._getWidth(d, i))\n      .attr(\"height\", (d, i) => this._getHeight(d, i))\n      .attr(\"x\", (d, i) => this._x1 !== null ? this._getX(d, i) : -this._getWidth(d, i) / 2)\n      .attr(\"y\", (d, i) => this._x1 === null ? this._getY(d, i) : -this._getHeight(d, i) / 2);\n  }\n\n  /**\n      @memberof Bar\n      @desc Calculates the height of the <rect> by assessing the x and y properties.\n      @param {Object} *d*\n      @param {Number} *i*\n      @private\n  */\n  _getHeight(d, i) {\n    if (this._x1 !== null) return this._height(d, i);\n    return Math.abs(this._y1(d, i) - this._y(d, i));\n  }\n\n  /**\n      @memberof Bar\n      @desc Calculates the width of the <rect> by assessing the x and y properties.\n      @param {Object} *d*\n      @param {Number} *i*\n      @private\n  */\n  _getWidth(d, i) {\n    if (this._x1 === null) return this._width(d, i);\n    return Math.abs(this._x1(d, i) - this._x(d, i));\n  }\n\n  /**\n      @memberof Bar\n      @desc Calculates the x of the <rect> by assessing the x and width properties.\n      @param {Object} *d*\n      @param {Number} *i*\n      @private\n  */\n  _getX(d, i) {\n    const w = this._x1 === null ? this._x(d, i) : this._x1(d, i) - this._x(d, i);\n    if (w < 0) return w;\n    else return 0;\n  }\n\n  /**\n      @memberof Bar\n      @desc Calculates the y of the <rect> by assessing the y and height properties.\n      @param {Object} *d*\n      @param {Number} *i*\n      @private\n  */\n  _getY(d, i) {\n    const h = this._x1 !== null ? this._y(d, i) : this._y1(d, i) - this._y(d, i);\n    if (h < 0) return h;\n    else return 0;\n  }\n\n  /**\n      @memberof Bar\n      @desc If *value* is specified, sets the height accessor to the specified function or number and returns the current class instance.\n      @param {Function|Number} [*value*]\n      @chainable\n      @example\nfunction(d) {\n  return d.height;\n}\n  */\n  height(_) {\n    return arguments.length ? (this._height = typeof _ === \"function\" ? _ : constant(_), this) : this._height;\n  }\n\n  /**\n      @memberof Bar\n      @desc If *value* is specified, sets the width accessor to the specified function or number and returns the current class instance.\n      @param {Function|Number} [*value*]\n      @chainable\n      @example\nfunction(d) {\n  return d.width;\n}\n  */\n  width(_) {\n    return arguments.length ? (this._width = typeof _ === \"function\" ? _ : constant(_), this) : this._width;\n  }\n\n  /**\n      @memberof Bar\n      @desc If *value* is specified, sets the x0 accessor to the specified function or number and returns the current class instance.\n      @param {Function|Number} [*value*]\n      @chainable\n  */\n  x0(_) {\n    if (!arguments.length) return this._x0;\n    this._x0 = typeof _ === \"function\" ? _ : constant(_);\n    this._x = this._x0;\n    return this;\n  }\n\n  /**\n      @memberof Bar\n      @desc If *value* is specified, sets the x1 accessor to the specified function or number and returns the current class instance.\n      @param {Function|Number|null} [*value*]\n      @chainable\n  */\n  x1(_) {\n    return arguments.length ? (this._x1 = typeof _ === \"function\" || _ === null ? _ : constant(_), this) : this._x1;\n  }\n\n  /**\n      @memberof Bar\n      @desc If *value* is specified, sets the y0 accessor to the specified function or number and returns the current class instance.\n      @param {Function|Number} [*value*]\n      @chainable\n  */\n  y0(_) {\n    if (!arguments.length) return this._y0;\n    this._y0 = typeof _ === \"function\" ? _ : constant(_);\n    this._y = this._y0;\n    return this;\n  }\n\n  /**\n      @memberof Bar\n      @desc If *value* is specified, sets the y1 accessor to the specified function or number and returns the current class instance.\n      @param {Function|Number|null} [*value*]\n      @chainable\n  */\n  y1(_) {\n    return arguments.length ? (this._y1 = typeof _ === \"function\" || _ === null ? _ : constant(_), this) : this._y1;\n  }\n\n}\n","import {accessor, assign, constant} from \"d3plus-common\";\n\nimport Shape from \"./Shape\";\n\n/**\n    @class Circle\n    @extends Shape\n    @desc Creates SVG circles based on an array of data.\n*/\nexport default class Circle extends Shape {\n\n  /**\n      @memberof Circle\n      @desc Invoked when creating a new class instance, and overrides any default parameters inherited from Shape.\n      @private\n  */\n  constructor() {\n    super(\"circle\");\n    this._labelBounds = (d, i, s) =>\n      ({width: s.r * 1.5, height: s.r * 1.5, x: -s.r * 0.75, y: -s.r * 0.75});\n    this._labelConfig = assign(this._labelConfig, {\n      textAnchor: \"middle\",\n      verticalAlign: \"middle\"\n    });\n    this._name = \"Circle\";\n    this._r = accessor(\"r\");\n  }\n\n  /**\n      @memberof Circle\n      @desc Provides the default positioning to the <rect> elements.\n      @private\n  */\n  _applyPosition(elem) {\n    elem\n      .attr(\"r\", (d, i) => this._r(d, i))\n      .attr(\"x\", (d, i) => -this._r(d, i) / 2)\n      .attr(\"y\", (d, i) => -this._r(d, i) / 2);\n  }\n\n  /**\n      @memberof Circle\n      @desc Draws the circles.\n      @param {Function} [*callback*]\n      @chainable\n  */\n  render(callback) {\n\n    super.render(callback);\n\n    const enter = this._enter\n      .call(this._applyStyle.bind(this));\n\n    let update = this._update;\n\n    if (this._duration) {\n      enter\n        .attr(\"r\", 0).attr(\"x\", 0).attr(\"y\", 0)\n        .transition(this._transition)\n          .call(this._applyPosition.bind(this));\n      update = update.transition(this._transition);\n      this._exit.transition(this._transition)\n        .attr(\"r\", 0).attr(\"x\", 0).attr(\"y\", 0);\n    }\n    else {\n      enter.call(this._applyPosition.bind(this));\n    }\n\n    update\n      .call(this._applyStyle.bind(this))\n      .call(this._applyPosition.bind(this));\n\n    return this;\n\n  }\n\n  /**\n      @memberof Circle\n      @desc Given a specific data point and index, returns the aesthetic properties of the shape.\n      @param {Object} *data point*\n      @param {Number} *index*\n      @private\n  */\n  _aes(d, i) {\n    return {r: this._r(d, i)};\n  }\n\n  /**\n      @memberof Circle\n      @desc If *value* is specified, sets the radius accessor to the specified function or number and returns the current class instance.\n      @param {Function|Number} [*value*]\n      @chainable\n      @example\nfunction(d) {\n  return d.r;\n}\n  */\n  r(_) {\n    return arguments.length ? (this._r = typeof _ === \"function\" ? _ : constant(_), this) : this._r;\n  }\n\n}\n","import {accessor, constant} from \"d3plus-common\";\n\nimport Shape from \"./Shape\";\n\n/**\n    @class Rect\n    @extends Shape\n    @desc Creates SVG rectangles based on an array of data. See [this example](https://d3plus.org/examples/d3plus-shape/getting-started/) for help getting started using the rectangle generator.\n*/\nexport default class Rect extends Shape {\n\n  /**\n      @memberof Rect\n      @desc Invoked when creating a new class instance, and overrides any default parameters inherited from Shape.\n      @private\n  */\n  constructor() {\n    super(\"rect\");\n    this._height = accessor(\"height\");\n    this._labelBounds = (d, i, s) =>\n      ({width: s.width, height: s.height, x: -s.width / 2, y: -s.height / 2});\n    this._name = \"Rect\";\n    this._width = accessor(\"width\");\n  }\n\n  /**\n      @memberof Rect\n      @desc Draws the rectangles.\n      @param {Function} [*callback*]\n      @chainable\n  */\n  render(callback) {\n\n    super.render(callback);\n\n    let enter = this._enter\n      .attr(\"width\", 0).attr(\"height\", 0)\n      .attr(\"x\", 0).attr(\"y\", 0)\n      .call(this._applyStyle.bind(this));\n\n    let update = this._update;\n\n    if (this._duration) {\n      enter = enter.transition(this._transition);\n      update = update.transition(this._transition);\n      this._exit.transition(this._transition)\n        .attr(\"width\", 0).attr(\"height\", 0)\n        .attr(\"x\", 0).attr(\"y\", 0);\n    }\n\n    enter\n      .call(this._applyPosition.bind(this));\n\n    update\n      .call(this._applyStyle.bind(this))\n      .call(this._applyPosition.bind(this));\n\n    return this;\n\n  }\n\n  /**\n      @memberof Rect\n      @desc Given a specific data point and index, returns the aesthetic properties of the shape.\n      @param {Object} *data point*\n      @param {Number} *index*\n      @private\n  */\n  _aes(d, i) {\n    return {width: this._width(d, i), height: this._height(d, i)};\n  }\n\n  /**\n      @memberof Rect\n      @desc Provides the default positioning to the <rect> elements.\n      @param {D3Selection} *elem*\n      @private\n  */\n  _applyPosition(elem) {\n    elem\n      .attr(\"width\", (d, i) => this._width(d, i))\n      .attr(\"height\", (d, i) => this._height(d, i))\n      .attr(\"x\", (d, i) => -this._width(d, i) / 2)\n      .attr(\"y\", (d, i) => -this._height(d, i) / 2);\n  }\n\n  /**\n      @memberof Rect\n      @desc If *value* is specified, sets the height accessor to the specified function or number and returns the current class instance.\n      @param {Function|Number} [*value*]\n      @chainable\n      @example\nfunction(d) {\n  return d.height;\n}\n  */\n  height(_) {\n    return arguments.length ? (this._height = typeof _ === \"function\" ? _ : constant(_), this) : this._height;\n  }\n\n  /**\n      @memberof Rect\n      @desc If *value* is specified, sets the width accessor to the specified function or number and returns the current class instance.\n      @param {Function|Number} [*value*]\n      @chainable\n      @example\nfunction(d) {\n  return d.width;\n}\n  */\n  width(_) {\n    return arguments.length ? (this._width = typeof _ === \"function\" ? _ : constant(_), this) : this._width;\n  }\n\n}\n","import {extent, sum} from \"d3-array\";\nimport {nest} from \"d3-collection\";\nimport {interpolatePath} from \"d3-interpolate-path\";\nimport {select} from \"d3-selection\";\nimport * as paths from \"d3-shape\";\n\nimport {constant, merge} from \"d3plus-common\";\n\nimport Shape from \"./Shape\";\n\n/**\n    @class Line\n    @extends Shape\n    @desc Creates SVG lines based on an array of data.\n*/\nexport default class Line extends Shape {\n\n  /**\n      @memberof Line\n      @desc Invoked when creating a new class instance, and overrides any default parameters inherited from Shape.\n      @private\n  */\n  constructor() {\n\n    super();\n\n    this._curve = \"linear\";\n    this._defined = d => d;\n    this._fill = constant(\"none\");\n    this._hitArea = constant({\n      \"d\": d => this._path(d.values),\n      \"fill\": \"none\",\n      \"stroke-width\": 10,\n      \"transform\": null\n    });\n    this._name = \"Line\";\n    this._path = paths.line();\n    this._stroke = constant(\"black\");\n    this._strokeWidth = constant(1);\n\n  }\n\n  /**\n      @memberof Line\n      @desc Filters/manipulates the data array before binding each point to an SVG group.\n      @param {Array} [*data* = the data array to be filtered]\n      @private\n  */\n  _dataFilter(data) {\n\n    const lines = nest().key(this._id).entries(data).map(d => {\n\n      d.data = merge(d.values);\n      d.i = data.indexOf(d.values[0]);\n\n      const x = extent(d.values, this._x);\n      d.xR = x;\n      d.width = x[1] - x[0];\n      d.x = x[0] + d.width / 2;\n\n      const y = extent(d.values, this._y);\n      d.yR = y;\n      d.height = y[1] - y[0];\n      d.y = y[0] + d.height / 2;\n\n      d.nested = true;\n      d.translate = [d.x, d.y];\n      d.__d3plusShape__ = true;\n\n      return d;\n    });\n\n    lines.key = d => d.key;\n    return lines;\n\n  }\n\n  /**\n      @memberof Line\n      @desc Draws the lines.\n      @param {Function} [*callback*]\n      @chainable\n  */\n  render(callback) {\n\n    super.render(callback);\n\n    const that = this;\n\n    /**\n        @desc Calculates the stroke-dasharray used for animations\n        @param {Object} *d* data point\n        @private\n    */\n    function calculateStrokeDashArray(d) {\n\n      d.initialLength = this.getTotalLength();\n\n      let strokeArray = that._strokeDasharray(d.values[0], that._data.indexOf(d.values[0]))\n        .split(\" \").map(Number);\n\n      if (strokeArray.length === 1 && strokeArray[0] === 0) strokeArray = [d.initialLength];\n      else if (strokeArray.length === 1) strokeArray.push(strokeArray[0]);\n      else if (strokeArray.length % 2) strokeArray = strokeArray.concat(strokeArray);\n\n      const newStrokeArray = [];\n      let strokeLength = 0;\n      while (strokeLength < d.initialLength) {\n        for (let i = 0; i < strokeArray.length; i++) {\n          const num = strokeArray[i];\n          strokeLength += num;\n          newStrokeArray.push(num);\n          if (strokeLength >= d.initialLength) break;\n        }\n      }\n\n      if (newStrokeArray.length > 1 && newStrokeArray.length % 2) newStrokeArray.pop();\n      newStrokeArray[newStrokeArray.length - 1] += d.initialLength - sum(newStrokeArray);\n      if (newStrokeArray.length % 2 === 0) newStrokeArray.push(0);\n      d.initialStrokeArray = newStrokeArray.join(\" \");\n\n    }\n\n    this._path\n      .curve(paths[`curve${this._curve.charAt(0).toUpperCase()}${this._curve.slice(1)}`])\n      .defined(this._defined)\n      .x(this._x)\n      .y(this._y);\n\n    const enter = this._enter.append(\"path\")\n      .attr(\"transform\", d => `translate(${-d.xR[0] - d.width / 2}, ${-d.yR[0] - d.height / 2})`)\n      .attr(\"d\", d => this._path(d.values))\n      .call(this._applyStyle.bind(this));\n\n    let update = this._update.select(\"path\")\n      .attr(\"stroke-dasharray\", d => that._strokeDasharray(d.values[0], that._data.indexOf(d.values[0])));\n\n    if (this._duration) {\n      enter\n        .each(calculateStrokeDashArray)\n        .attr(\"stroke-dasharray\", d => `${d.initialStrokeArray} ${d.initialLength}`)\n        .attr(\"stroke-dashoffset\", d => d.initialLength)\n        .transition(this._transition)\n          .attr(\"stroke-dashoffset\", 0);\n      update = update.transition(this._transition)\n        .attrTween(\"d\", function(d) {\n          return interpolatePath(select(this).attr(\"d\"), that._path(d.values));\n        });\n      this._exit.selectAll(\"path\")\n        .each(calculateStrokeDashArray)\n        .attr(\"stroke-dasharray\", d => `${d.initialStrokeArray} ${d.initialLength}`)\n        .transition(this._transition)\n          .attr(\"stroke-dashoffset\", d => -d.initialLength);\n\n    }\n    else {\n      update = update\n        .attr(\"d\", d => that._path(d.values));\n    }\n\n    update\n      .attr(\"transform\", d => `translate(${-d.xR[0] - d.width / 2}, ${-d.yR[0] - d.height / 2})`)\n      .call(this._applyStyle.bind(this));\n\n    return this;\n\n  }\n\n  /**\n      @memberof Line\n      @desc Given a specific data point and index, returns the aesthetic properties of the shape.\n      @param {Object} *data point*\n      @param {Number} *index*\n      @private\n  */\n  _aes(d, i) {\n    return {points: d.values.map(p => [this._x(p, i), this._y(p, i)])};\n  }\n\n  /**\n      @memberof Line\n      @desc If *value* is specified, sets the line curve to the specified string and returns the current class instance. If *value* is not specified, returns the current line curve.\n      @param {String} [*value* = \"linear\"]\n      @chainable\n  */\n  curve(_) {\n    return arguments.length ? (this._curve = _, this) : this._curve;\n  }\n\n  /**\n      @memberof Line\n      @desc If *value* is specified, sets the defined accessor to the specified function and returns the current class instance. If *value* is not specified, returns the current defined accessor.\n      @param {Function} [*value*]\n      @chainable\n  */\n  defined(_) {\n    return arguments.length ? (this._defined = _, this) : this._defined;\n  }\n\n}\n","import {select} from \"d3-selection\";\n\nimport {accessor, assign, BaseClass, configPrep, constant, elem} from \"d3plus-common\";\nimport {nest} from \"d3-collection\";\n\nimport Circle from \"./Circle\";\nimport Line from \"./Line\";\nimport Rect from \"./Rect\";\n\nconst shapes = {Circle, Rect};\n\n/**\n    @class Whisker\n    @extends BaseClass\n    @desc Creates SVG whisker based on an array of data.\n*/\nexport default class Whisker extends BaseClass {\n\n  /**\n      @memberof Whisker\n      @desc Invoked when creating a new class instance, and overrides any default parameters inherited from BaseClass.\n      @private\n  */\n  constructor() {\n\n    super();\n\n    this._endpoint = accessor(\"endpoint\", \"Rect\");\n    this._endpointConfig = {\n      Circle: {\n        r: accessor(\"r\", 5)\n      }\n    };\n    this._length = accessor(\"length\", 25);\n    this._lineConfig = {};\n    this._orient = accessor(\"orient\", \"top\");\n    this._x = accessor(\"x\", 0);\n    this._y = accessor(\"y\", 0);\n\n  }\n\n  /**\n      @memberof Whisker\n      @desc Draws the whisker.\n      @param {Function} [*callback*]\n      @chainable\n  */\n  render(callback) {\n\n    if (this._select === void 0) {\n      this.select(select(\"body\").append(\"svg\")\n        .style(\"width\", `${window.innerWidth}px`)\n        .style(\"height\", `${window.innerHeight}px`)\n        .style(\"display\", \"block\").node());\n    }\n\n    const lineData = [];\n    this._data.forEach((d, i) => {\n\n      const orient = this._orient(d, i);\n      const x = this._x(d, i);\n      const y = this._y(d, i);\n\n      let endpointX = x;\n      if (orient === \"left\") endpointX -= this._length(d, i);\n      else if (orient === \"right\") endpointX += this._length(d, i);\n\n      let endpointY = y;\n      if (orient === \"top\") endpointY -= this._length(d, i);\n      else if (orient === \"bottom\") endpointY += this._length(d, i);\n\n      lineData.push({__d3plus__: true, data: d, i, id: i, x, y});\n      lineData.push({__d3plus__: true, data: d, i, id: i, x: endpointX, y: endpointY});\n    });\n\n    // Draw whisker line.\n    this._line = new Line()\n      .data(lineData)\n      .select(elem(\"g.d3plus-Whisker\", {parent: this._select}).node())\n      .config(configPrep.bind(this)(this._lineConfig, \"shape\"))\n      .render(callback);\n\n    const whiskerData = this._data.map((d, i) => {\n\n      const dataObj = {};\n      dataObj.__d3plus__ = true;\n      dataObj.data = d;\n      dataObj.i = i;\n      dataObj.endpoint = this._endpoint(d, i);\n      dataObj.length = this._length(d, i);\n      dataObj.orient = this._orient(d, i);\n\n      let endpointX = this._x(d, i);\n      if (dataObj.orient === \"left\") endpointX -= dataObj.length;\n      else if (dataObj.orient === \"right\") endpointX += dataObj.length;\n\n      let endpointY = this._y(d, i);\n      if (dataObj.orient === \"top\") endpointY -= dataObj.length;\n      else if (dataObj.orient === \"bottom\") endpointY += dataObj.length;\n\n      dataObj.x = endpointX;\n      dataObj.y = endpointY;\n\n      return dataObj;\n\n    });\n\n    // Draw whisker endpoint.\n    this._whiskerEndpoint = [];\n    nest()\n      .key(d => d.endpoint)\n      .entries(whiskerData)\n      .forEach(shapeData => {\n        const shapeName = shapeData.key;\n        this._whiskerEndpoint.push(new shapes[shapeName]()\n          .data(shapeData.values)\n          .select(elem(`g.d3plus-Whisker-Endpoint-${shapeName}`, {parent: this._select}).node())\n          .config({\n            height: d => d.orient === \"top\" || d.orient === \"bottom\" ? 5 : 20,\n            width: d => d.orient === \"top\" || d.orient === \"bottom\" ? 20 : 5\n          })\n          .config(configPrep.bind(this)(this._endpointConfig, \"shape\", shapeName))\n          .render());\n      });\n\n    return this;\n\n  }\n\n  /**\n      @memberof Whisker\n      @desc Sets the highlight accessor to the Shape class's active function.\n      @param {Function} [*value*]\n      @chainable\n  */\n  active(_) {\n    if (this._line) this._line.active(_);\n    if (this._whiskerEndpoint) this._whiskerEndpoint.forEach(endPoint => endPoint.active(_));\n  }\n\n  /**\n      @memberof Whisker\n      @desc If *data* is specified, sets the data array to the specified array and returns the current class instance. If *data* is not specified, returns the current data array.\n      @param {Array} [*data* = []]\n      @chainable\n  */\n  data(_) {\n    return arguments.length ? (this._data = _, this) : this._data;\n  }\n\n  /**\n      @memberof Whisker\n      @desc If *value* is specified, sets the endpoint accessor to the specified function or string and returns the current class instance.\n      @param {Function|String}\n      @chainable\n  */\n  endpoint(_) {\n    return arguments.length ? (this._endpoint = typeof _ === \"function\" ? _ : constant(_), this) : this._endpoint;\n  }\n\n  /**\n      @memberof Whisker\n      @desc If *value* is specified, sets the config method for each endpoint and returns the current class instance.\n      @param {Object} [*value*]\n      @chainable\n  */\n  endpointConfig(_) {\n    return arguments.length ? (this._endpointConfig = assign(this._endpointConfig, _), this) : this._endpointConfig;\n  }\n\n  /**\n      @memberof Whisker\n      @desc Sets the highlight accessor to the Shape class's hover function.\n      @param {Function} [*value*]\n      @chainable\n  */\n  hover(_) {\n    if (this._line) this._line.hover(_);\n    if (this._whiskerEndpoint) this._whiskerEndpoint.forEach(endPoint => endPoint.hover(_));\n  }\n\n  /**\n      @memberof Whisker\n      @desc If *value* is specified, sets the length accessor for whisker and returns the current class instance.\n      @param {Function|Number} [*value*]\n      @chainable\n  */\n  length(_) {\n    return arguments.length ? (this._length = typeof _ === \"function\" ? _ : constant(_), this) : this._length;\n  }\n\n  /**\n      @memberof Whisker\n      @desc If *value* is specified, sets the config method for line shape and returns the current class instance.\n      @param {Object} [*value*]\n      @chainable\n  */\n  lineConfig(_) {\n    return arguments.length ? (this._lineConfig = assign(this._lineConfig, _), this) : this._lineConfig;\n  }\n  \n  /**\n      @memberof Whisker\n      @desc If *value* is specified, sets the orientation to the specified value. If *value* is not specified, returns the current orientation.\n      @param {Function|String} [*value* = \"top\"] Accepts \"top\", \"right\", \"bottom\" or \"left\"\n      @chainable\n  */\n  orient(_) {\n    return arguments.length ? (this._orient = typeof _ === \"function\" ? _ : constant(_), this) : this._orient;\n  }\n\n  /**\n      @memberof Whisker\n      @desc If *selector* is specified, sets the SVG container element to the specified d3 selector or DOM element and returns the current class instance. If *selector* is not specified, returns the current SVG container element.\n      @param {String|HTMLElement} [*selector* = d3.select(\"body\").append(\"svg\")]\n      @chainable\n  */\n  select(_) {\n    return arguments.length ? (this._select = select(_), this) : this._select;\n  }\n\n  /**\n    @memberof Whisker\n    @desc If *value* is specified, sets the x axis to the specified function or number and returns the current class instance.\n    @param {Function|Number} [*value*]\n    @chainable\n    @example\nfunction(d) {\n  return d.x;\n}\n  */\n  x(_) {\n    return arguments.length ? (this._x = typeof _ === \"function\" ? _ : constant(_), this) : this._x;\n  }\n\n  /**\n      @memberof Whisker\n      @desc If *value* is specified, sets the y axis to the specified function or number and returns the current class instance.\n      @param {Function|Number} [*value*]\n      @chainable\n      @example\nfunction(d) {\n  return d.y;\n}\n  */\n  y(_) {\n    return arguments.length ? (this._y = typeof _ === \"function\" ? _ : constant(_), this) : this._y;\n  }\n\n}\n","import {max, min, quantile} from \"d3-array\";\nimport {nest} from \"d3-collection\";\nimport {select} from \"d3-selection\";\n\nimport {accessor, assign, BaseClass, configPrep, constant, merge, elem} from \"d3plus-common\";\n\nimport Circle from \"./Circle\";\nimport Rect from \"./Rect\";\nimport Whisker from \"./Whisker\";\n\nconst shapes = {Circle, Rect};\n\n/**\n    @class Box\n    @extends BaseClass\n    @desc Creates SVG box based on an array of data.\n*/\nexport default class Box extends BaseClass {\n\n  /**\n      @memberof Box\n      @desc Invoked when creating a new class instance, and overrides any default parameters inherited from BaseClass.\n      @private\n  */\n  constructor() {\n\n    super();\n\n    this._medianConfig = {\n      fill: constant(\"black\")\n    };\n    this._orient = accessor(\"orient\", \"vertical\");\n    this._outlier = accessor(\"outlier\", \"Circle\");\n    this._outlierConfig = {\n      Circle: {\n        r: accessor(\"r\", 5)\n      },\n      Rect: {\n        height: (d, i) => this._orient(d, i) === \"vertical\" ? 5 : 20,\n        width: (d, i) => this._orient(d, i) === \"vertical\" ? 20 : 5\n      }\n    };\n    this._rectConfig = {\n      fill: constant(\"white\"),\n      stroke: constant(\"black\"),\n      strokeWidth: constant(1)\n    };\n    this._rectWidth = constant(50);\n    this._whiskerConfig = {};\n    this._whiskerMode = [\"tukey\", \"tukey\"];\n    this._x = accessor(\"x\", 250);\n    this._y = accessor(\"y\", 250);\n\n  }\n\n  /**\n      @memberof Box\n      @desc Draws the Box.\n      @param {Function} [*callback*]\n      @chainable\n  */\n  render() {\n\n    if (this._select === void 0) {\n      this.select(select(\"body\").append(\"svg\")\n        .style(\"width\", `${window.innerWidth}px`)\n        .style(\"height\", `${window.innerHeight}px`)\n        .style(\"display\", \"block\").node());\n    }\n\n    const outlierData = [];\n\n    const filteredData = nest()\n      .key((d, i) => this._orient(d, i) === \"vertical\" ? this._x(d, i) : this._y(d, i))\n      .entries(this._data)\n      .map(d => {\n        d.data = merge(d.values);\n        d.i = this._data.indexOf(d.values[0]);\n        d.orient = this._orient(d.data, d.i);\n        const values = d.values.map(d.orient === \"vertical\" ? this._y : this._x);\n        values.sort((a, b) => a - b);\n\n        d.first = quantile(values, 0.25);\n        d.median = quantile(values, 0.50);\n        d.third = quantile(values, 0.75);\n\n        const mode = this._whiskerMode;\n\n        if (mode[0] === \"tukey\") {\n          d.lowerLimit = d.first - (d.third - d.first) * 1.5;\n          if (d.lowerLimit < min(values)) d.lowerLimit = min(values);\n        }\n        else if (mode[0] === \"extent\") d.lowerLimit = min(values);\n        else if (typeof mode[0] === \"number\") d.lowerLimit = quantile(values, mode[0]);\n\n        if (mode[1] === \"tukey\") {\n          d.upperLimit = d.third + (d.third - d.first) * 1.5;\n          if (d.upperLimit > max(values)) d.upperLimit = max(values);\n        }\n        else if (mode[1] === \"extent\") d.upperLimit = max(values);\n        else if (typeof mode[1] === \"number\") d.upperLimit = quantile(values, mode[1]);\n\n        const rectLength = d.third - d.first;\n\n        // Compute values for vertical orientation.\n        if (d.orient === \"vertical\") {\n          d.height = rectLength;\n          d.width = this._rectWidth(d.data, d.i);\n          d.x = this._x(d.data, d.i);\n          d.y = d.first + rectLength / 2;\n        }\n        else if (d.orient === \"horizontal\") {\n        // Compute values for horizontal orientation.\n          d.height = this._rectWidth(d.data, d.i);\n          d.width = rectLength;\n          d.x = d.first + rectLength / 2;\n          d.y = this._y(d.data, d.i);\n        }\n\n        // Compute data for outliers.\n        d.values.forEach((eachValue, index) => {\n          const value = d.orient === \"vertical\" ? this._y(eachValue, index) : this._x(eachValue, index);\n\n          if (value < d.lowerLimit || value > d.upperLimit) {\n            const dataObj = {};\n            dataObj.__d3plus__ = true;\n            dataObj.data = eachValue;\n            dataObj.i = index;\n            dataObj.outlier = this._outlier(eachValue, index);\n\n            if (d.orient === \"vertical\") {\n              dataObj.x = d.x;\n              dataObj.y = value;\n              outlierData.push(dataObj);\n            }\n            else if (d.orient === \"horizontal\") {\n              dataObj.y = d.y;\n              dataObj.x = value;\n              outlierData.push(dataObj);\n            }\n          }\n\n        });\n\n        d.__d3plus__ = true;\n\n        return d;\n      });\n\n    // Draw box.\n    this._box = new Rect()\n      .data(filteredData)\n      .x(d => d.x)\n      .y(d => d.y)\n      .select(elem(\"g.d3plus-Box\", {parent: this._select}).node())\n      .config(configPrep.bind(this)(this._rectConfig, \"shape\"))\n      .render();\n\n    // Draw median.\n    this._median = new Rect()\n      .data(filteredData)\n      .x(d => d.orient === \"vertical\" ? d.x : d.median)\n      .y(d => d.orient === \"vertical\" ? d.median : d.y)\n      .height(d => d.orient === \"vertical\" ? 1 : d.height)\n      .width(d => d.orient === \"vertical\" ? d.width : 1)\n      .select(elem(\"g.d3plus-Box-Median\", {parent: this._select}).node())\n      .config(configPrep.bind(this)(this._medianConfig, \"shape\"))\n      .render();\n\n    // Draw 2 lines using Whisker class.\n    // Construct coordinates for whisker startpoints and push it to the whiskerData.\n    const whiskerData = [];\n    filteredData.forEach((d, i) => {\n      const x = d.x;\n      const y = d.y;\n      const topLength = d.first - d.lowerLimit;\n      const bottomLength = d.upperLimit - d.third;\n\n      if (d.orient === \"vertical\") {\n        const topY = y - d.height / 2;\n        const bottomY = y + d.height / 2;\n        whiskerData.push(\n          {__d3plus__: true, data: d, i, x, y: topY, length: topLength, orient: \"top\"},\n          {__d3plus__: true, data: d, i, x, y: bottomY, length: bottomLength, orient: \"bottom\"}\n        );\n      }\n      else if (d.orient === \"horizontal\") {\n        const topX = x + d.width / 2;\n        const bottomX = x - d.width / 2;\n        whiskerData.push(\n          {__d3plus__: true, data: d, i, x: topX, y, length: bottomLength, orient: \"right\"},\n          {__d3plus__: true, data: d, i, x: bottomX, y, length: topLength, orient: \"left\"}\n        );\n      }\n\n    });\n\n    // Draw whiskers.\n    this._whisker = new Whisker()\n      .data(whiskerData)\n      .select(elem(\"g.d3plus-Box-Whisker\", {parent: this._select}).node())\n      .config(configPrep.bind(this)(this._whiskerConfig, \"shape\"))\n      .render();\n\n    // Draw outliers.\n    this._whiskerEndpoint = [];\n    nest()\n      .key(d => d.outlier)\n      .entries(outlierData)\n      .forEach(shapeData => {\n        const shapeName = shapeData.key;\n        this._whiskerEndpoint.push(new shapes[shapeName]()\n          .data(shapeData.values)\n          .select(elem(`g.d3plus-Box-Outlier-${shapeName}`, {parent: this._select}).node())\n          .config(configPrep.bind(this)(this._outlierConfig, \"shape\", shapeName))\n          .render());\n      });\n\n    return this;\n  }\n\n  /**\n      @memberof Box\n      @desc Sets the highlight accessor to the Shape class's active function.\n      @param {Function} [*value*]\n      @chainable\n  */\n  active(_) {\n    if (this._box) this._box.active(_);\n    if (this._median) this._median.active(_);\n    if (this._whisker) this._whisker.active(_);\n    if (this._whiskerEndpoint) this._whiskerEndpoint.forEach(endPoint => endPoint.active(_));\n  }\n\n  /**\n      @memberof Box\n      @desc If *data* is specified, sets the data array to the specified array and returns the current class instance. If *data* is not specified, returns the current data array.\n      @param {Array} [*data* = []]\n      @chainable\n  */\n  data(_) {\n    return arguments.length ? (this._data = _, this) : this._data;\n  }\n\n  /**\n      @memberof Box\n      @desc Sets the highlight accessor to the Shape class's hover function.\n      @param {Function} [*value*]\n      @chainable\n  */\n  hover(_) {\n    if (this._box) this._box.hover(_);\n    if (this._median) this._median.hover(_);\n    if (this._whisker) this._whisker.hover(_);\n    if (this._whiskerEndpoint) this._whiskerEndpoint.forEach(endPoint => endPoint.hover(_));\n  }\n\n  /**\n      @memberof Box\n      @desc If *value* is specified, sets the config method for median and returns the current class instance.\n      @param {Object} [*value*]\n      @chainable\n  */\n  medianConfig(_) {\n    return arguments.length ? (this._medianConfig = assign(this._medianConfig, _), this) : this._medianConfig;\n  }\n\n  /**\n      @memberof Box\n      @desc If *value* is specified, sets the orientation to the specified value. If *value* is not specified, returns the current orientation.\n      @param {Function|String} [*value* = \"vertical\"] Accepts \"vertical\" or \"horizontal\"\n      @chainable\n  */\n  orient(_) {\n    return arguments.length ? (this._orient = typeof _ === \"function\" ? _ : constant(_), this) : this._orient;\n  }\n\n  /**\n      @memberof Box\n      @desc If *value* is specified, sets the outlier accessor to the specified function or string and returns the current class instance.\n      @param {Function|String}\n      @chainable\n  */\n  outlier(_) {\n    return arguments.length ? (this._outlier = typeof _ === \"function\" ? _ : constant(_), this) : this._outlier;\n  }\n\n  /**\n      @memberof Box\n      @desc If *value* is specified, sets the config method for each outlier point and returns the current class instance.\n      @param {Object} [*value*]\n      @chainable\n  */\n  outlierConfig(_) {\n    return arguments.length ? (this._outlierConfig = assign(this._outlierConfig, _), this) : this._outlierConfig;\n  }\n\n  /**\n      @memberof Box\n      @desc If *value* is specified, sets the config method for rect shape and returns the current class instance.\n      @param {Object} [*value*]\n      @chainable\n  */\n  rectConfig(_) {\n    return arguments.length ? (this._rectConfig = assign(this._rectConfig, _), this) : this._rectConfig;\n  }\n\n  /**\n      @memberof Box\n      @desc If *value* is specified, sets the width accessor to the specified function or number and returns the current class instance.\n      @param {Function|Number} [*value*]\n      @chainable\n      @example\nfunction(d) {\n  return d.width;\n}\n  */\n  rectWidth(_) {\n    return arguments.length ? (this._rectWidth = typeof _ === \"function\" ? _ : constant(_), this) : this._rectWidth;\n  }\n\n  /**\n      @memberof Box\n      @desc If *selector* is specified, sets the SVG container element to the specified d3 selector or DOM element and returns the current class instance. If *selector* is not specified, returns the current SVG container element.\n      @param {String|HTMLElement} [*selector* = d3.select(\"body\").append(\"svg\")]\n      @chainable\n  */\n  select(_) {\n    return arguments.length ? (this._select = select(_), this) : this._select;\n  }\n\n  /**\n      @memberof Box\n      @desc If *value* is specified, sets the config method for whisker and returns the current class instance.\n      @param {Object} [*value*]\n      @chainable\n  */\n  whiskerConfig(_) {\n    return arguments.length ? (this._whiskerConfig = assign(this._whiskerConfig, _), this) : this._whiskerConfig;\n  }\n\n  /**\n      @memberof Box\n      @desc Determines the value used for each whisker. Can be passed a single value to apply for both whiskers, or an Array of 2 values for the lower and upper whiskers (in that order). Accepted values are `\"tukey\"`, `\"extent\"`, or a Number representing a quantile.\n      @param {String|Number|String[]|Number[]} [*value* = \"tukey\"]\n      @chainable\n  */\n  whiskerMode(_) {\n    return arguments.length ? (this._whiskerMode = _ instanceof Array ? _ : [_, _], this) : this._whiskerMode;\n  }\n\n  /**\n      @memberof Box\n      @desc If *value* is specified, sets the x axis to the specified function or number and returns the current class instance.\n      @param {Function|Number} [*value*]\n      @chainable\n      @example\nfunction(d) {\n  return d.x;\n}\n  */\n  x(_) {\n    return arguments.length ? (this._x = typeof _ === \"function\" ? _ : accessor(_), this) : this._x;\n  }\n\n  /**\n      @memberof Box\n      @desc If *value* is specified, sets the y axis to the specified function or number and returns the current class instance.\n      @param {Function|Number} [*value*]\n      @chainable\n      @example\nfunction(d) {\n  return d.y;\n}\n  */\n  y(_) {\n    return arguments.length ? (this._y = typeof _ === \"function\" ? _ : accessor(_), this) : this._y;\n  }\n\n}\n","const pi = Math.PI;\n\n/**\n    @function shapeEdgePoint\n    @desc Calculates the x/y position of a point at the edge of a shape, from the center of the shape, given a specified pixel distance and radian angle.\n    @param {Number} angle The angle, in radians, of the offset point.\n    @param {Number} distance The pixel distance away from the origin.\n    @returns {String} [shape = \"circle\"] The type of shape, which can be either \"circle\" or \"square\".\n*/\nexport default (angle, distance, shape = \"circle\") => {\n\n  if (angle < 0) angle = pi * 2 + angle;\n\n  if (shape === \"square\") {\n\n    const diagonal = 45 * (pi / 180);\n    let x = 0, y = 0;\n\n    if (angle < pi / 2) {\n      const tan = Math.tan(angle);\n      x += angle < diagonal ? distance : distance / tan;\n      y += angle < diagonal ? tan * distance : distance;\n    }\n    else if (angle <= pi) {\n      const tan = Math.tan(pi - angle);\n      x -= angle < pi - diagonal ? distance / tan : distance;\n      y += angle < pi - diagonal ? distance : tan * distance;\n    }\n    else if (angle < diagonal + pi) {\n      x -= distance;\n      y -= Math.tan(angle - pi) * distance;\n    }\n    else if (angle < 3 * pi / 2) {\n      x -= distance / Math.tan(angle - pi);\n      y -= distance;\n    }\n    else if (angle < 2 * pi - diagonal) {\n      x += distance / Math.tan(2 * pi - angle);\n      y -= distance;\n    }\n    else {\n      x += distance;\n      y -= Math.tan(2 * pi - angle) * distance;\n    }\n\n    return [x, y];\n\n  }\n  else if (shape === \"circle\") {\n    return [distance * Math.cos(angle), distance * Math.sin(angle)];\n  }\n  else return null;\n\n};\n","import pointDistance from \"./pointDistance\";\nimport shapeEdgePoint from \"./shapeEdgePoint\";\n\nconst pi = Math.PI;\n\n/**\n    @function path2polygon\n    @desc Transforms a path string into an Array of points.\n    @param {String} path An SVG string path, commonly the \"d\" property of a <path> element.\n    @param {Number} [segmentLength = 20] The lenght of line segments when converting curves line segments. Higher values lower computation time, but will result in curves that are more rigid.\n    @returns {Array}\n*/\nexport default (path, segmentLength = 20) => {\n\n  const poly = [],\n        regex = /([MLA])([^MLAZ]+)/ig;\n\n  let match = regex.exec(path);\n  while (match !== null) {\n\n    if ([\"M\", \"L\"].includes(match[1])) poly.push(match[2].split(\",\").map(Number));\n    else if (match[1] === \"A\") {\n\n      const points = match[2].split(\",\").map(Number);\n\n      const last = points.slice(points.length - 2, points.length),\n            prev = poly[poly.length - 1],\n            radius = points[0],\n            width = pointDistance(prev, last);\n\n      let angle = Math.acos((radius * radius + radius * radius - width * width) / (2 * radius * radius));\n      if (points[2]) angle = pi * 2 - angle;\n\n      const step = angle / (angle / (pi * 2) * (radius * pi * 2) / segmentLength);\n      const start = Math.atan2(-prev[1], -prev[0]) - pi;\n      let i = step;\n      while (i < angle) {\n        poly.push(shapeEdgePoint(points[4] ? start + i : start - i, radius));\n        i += step;\n      }\n      poly.push(last);\n\n    }\n    match = regex.exec(path);\n\n  }\n\n  return poly;\n\n};\n","import {accessor, constant} from \"d3plus-common\";\n\nimport Shape from \"./Shape\";\nimport largestRect from \"../geom/largestRect\";\nimport path2polygon from \"../geom/path2polygon\";\n\n/**\n    @class Path\n    @extends Shape\n    @desc Creates SVG Paths based on an array of data.\n*/\nexport default class Path extends Shape {\n\n  /**\n      @memberof Path\n      @desc Invoked when creating a new class instance, and overrides any default parameters inherited from Shape.\n      @private\n  */\n  constructor() {\n    super(\"path\");\n    this._d = accessor(\"path\");\n    this._labelBounds = (d, i, aes) => {\n      const r = largestRect(aes.points, {angle: this._labelConfig.rotate ? this._labelConfig.rotate(d, i) : 0});\n      return r ? {angle: r.angle, width: r.width, height: r.height, x: r.cx - r.width / 2, y: r.cy - r.height / 2} : false;\n    };\n    this._name = \"Path\";\n    this._labelConfig = Object.assign(this._labelConfig, {\n      textAnchor: \"middle\",\n      verticalAlign: \"middle\"\n    });\n  }\n\n  /**\n      @memberof Path\n      @desc Given a specific data point and index, returns the aesthetic properties of the shape.\n      @param {Object} *data point*\n      @param {Number} *index*\n      @private\n  */\n  _aes(d, i) {\n    return {points: path2polygon(this._d(d, i))};\n  }\n\n  /**\n      @memberof Path\n      @desc Draws the paths.\n      @param {Function} [*callback*]\n      @chainable\n  */\n  render(callback) {\n\n    super.render(callback);\n\n    const enter = this._enter\n      .attr(\"d\", this._d)\n      .call(this._applyStyle.bind(this));\n\n    let update = this._update;\n\n    if (this._duration) {\n      enter\n        .attr(\"opacity\", 0)\n        .transition(this._transition)\n          .attr(\"opacity\", 1);\n      update = update.transition(this._transition);\n      this._exit.transition(this._transition)\n        .attr(\"opacity\", 0);\n    }\n\n    update\n      .call(this._applyStyle.bind(this))\n      .attr(\"d\", this._d);\n\n    return this;\n\n  }\n\n  /**\n      @memberof Path\n      @desc If *value* is specified, sets the \"d\" attribute accessor to the specified function or number and returns the current class instance.\n      @param {Function|String} [*value*]\n      @chainable\n      @example\nfunction(d) {\n  return d.path;\n}\n  */\n  d(_) {\n    return arguments.length ? (this._d = typeof _ === \"function\" ? _ : constant(_), this) : this._d;\n  }\n\n}\n"],"names":["Image","_duration","_height","accessor","_id","_opacity","constant","_pointerEvents","_select","_url","_width","_x","_y","callback","select","append","style","window","innerWidth","innerHeight","node","images","selectAll","data","_data","enter","attr","d","i","t","transition","duration","that","update","merge","each","image","link","fullAddress","indexOf","location","hostname","img","src","crossOrigin","onload","canvas","document","createElement","width","height","context","getContext","drawImage","toDataURL","exit","remove","setTimeout","_","arguments","length","p1","p2","dx","dy","Math","sqrt","pointDistanceSquared","Shape","tagName","_activeOpacity","_activeStyle","c","_fill","includes","_stroke","color","darker","s","_strokeWidth","_ariaLabel","_backgroundImage","_backgroundImageClass","_fillOpacity","_hoverOpacity","_hoverStyle","id","_label","_labelClass","TextBox","_labelConfig","fontColor","colorContrast","fontSize","padding","_name","_role","_rotate","_rx","_ry","_scale","_shapeRendering","_strokeDasharray","_strokeLinecap","_strokeOpacity","_tagName","_textAnchor","_vectorEffect","_verticalAlign","handler","events","Object","keys","_on","e","on","nested","values","cursor","mouse","map","pointDistance","min","bind","elem","size","styleLogic","key","styleObject","hasOwnProperty","call","attrize","__d3plusShape__","translate","scale","rotate","method","_group","parentNode","parent","classed","__d3plus__","group","_active","_activeGroup","appendChild","className","baseVal","_applyStyle","_updateStyle","_hover","_hoverGroup","imageData","_update","_enter","forEach","datum","aes","_aes","r","url","x","y","push","opacity","_nestWrapper","pointerEvents","render","labelData","labels","_labelBounds","undefined","bounds","constructor","Array","l","b","assign","labelConfig","angle","rotateAnchor","text","fontOpacity","config","configPrep","_transition","_dataFilter","_sort","sort","a","removeChild","order","_applyTransform","strip","enterUpdate","enterUpdateRender","delay","_exit","_renderImage","_renderLabels","hitAreas","_hitArea","isLine","_path","curve","paths","_curve","charAt","toUpperCase","slice","defined","_defined","hitEnter","hitUpdates","h","parseFloat","_applyEvents","_renderActive","_renderHover","BaseClass","q1","q2","eps","dx1","dx2","dy1","dy2","denom","abs","cross1","cross2","px","py","s1","s2","p","max","lineIntersection","segmentBoxContains","polyA","polyB","iA","nA","nB","bA","aA","iB","bB","aB","segmentsIntersect","polygonContains","poly","origin","alpha","cos","sin","x0","y0","shiftedOrigin","idx","n","minSqDistLeft","Number","MAX_VALUE","minSqDistRight","closestPointLeft","closestPointRight","sqDist","cosAlpha","sinAlpha","xshifted","yshifted","pointRotate","getSqSegDist","simplifyRadialDist","sqTolerance","point","prevPoint","newPoints","len","simplifyDPStep","first","last","simplified","index","maxSqDist","simplifyDouglasPeucker","tolerance","highestQuality","aspectRatioStep","angleStep","polyCache","options","verbose","console","error","range","cache","maxAspectRatio","minAspectRatio","minHeight","minWidth","nTries","angles","isNaN","aspectRatios","aspectRatio","origins","cacheString","join","area","polygonArea","extent","minx","maxx","miny","maxy","simplify","type","boxWidth","boxHeight","widthStep","centroid","polygonCentroid","isFinite","rndX","random","rndY","rndPoint","points","maxArea","maxRect","ai","angleRad","PI","origOrigin","polygonRayCast","p1W","p2W","p1H","p2H","modifOrigins","cx","cy","minSqDistW","maxWidth","minSqDistH","maxHeight","aRatios","aRatio","left","right","rectPoly","polygonRotate","insidePoly","polygonInside","areaFraction","Area","largestRect","textAnchor","verticalAlign","_x0","_x1","_y0","_y1","points1","v","z","points2","reverse","concat","areas","nest","entries","xR","yR","path","x1","y1","exitPath","attrTween","interpolatePath","Bar","_getX","_getY","_getWidth","_getHeight","_applyPosition","w","Circle","_r","Rect","Line","lines","calculateStrokeDashArray","initialLength","getTotalLength","strokeArray","split","newStrokeArray","strokeLength","num","pop","sum","initialStrokeArray","shapes","Whisker","_endpoint","_endpointConfig","_length","_lineConfig","_orient","lineData","orient","endpointX","endpointY","_line","whiskerData","dataObj","endpoint","_whiskerEndpoint","shapeData","shapeName","active","endPoint","hover","Box","_medianConfig","fill","_outlier","_outlierConfig","_rectConfig","stroke","strokeWidth","_rectWidth","_whiskerConfig","_whiskerMode","outlierData","filteredData","quantile","median","third","mode","lowerLimit","upperLimit","rectLength","eachValue","value","outlier","_box","_median","topLength","bottomLength","topY","bottomY","topX","bottomX","_whisker","pi","distance","shape","diagonal","tan","segmentLength","regex","match","exec","prev","radius","acos","step","start","atan2","shapeEdgePoint","Path","_d","path2polygon"],"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"}