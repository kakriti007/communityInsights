{"version":3,"file":"d3plus-plot.js","sources":["../src/buffers/discreteBuffer.js","../src/buffers/Bar.js","../src/buffers/Box.js","../src/buffers/numericBuffer.js","../src/buffers/Circle.js","../src/buffers/Line.js","../src/buffers/Rect.js","../src/Plot.js","../src/AreaPlot.js","../src/BarChart.js","../src/BoxWhisker.js","../src/BumpChart.js","../src/LinePlot.js","../src/Radar.js","../src/StackedArea.js"],"sourcesContent":["/**\n * Adds left/right padding to a point or time scale.\n * @private\n */\nexport default (scale, data, discrete) => {\n\n  if (scale.padding) scale.padding(0.5);\n  else {\n    const closest = data.map(d => d[discrete]).reduce((acc, curr, i, arr) => {\n      if (!i) return acc;\n      const prev = arr[i - 1];\n      if (!acc || curr - prev < acc) return curr - prev;\n      else return acc;\n    }, 0);\n    const domain = scale.domain().slice();\n    if (discrete === \"y\") domain.reverse();\n    domain[0] = new Date(+domain[0] - closest / 2);\n    domain[1] = new Date(+domain[1] + closest / 2);\n    if (discrete === \"y\") domain.reverse();\n    scale.domain(domain);\n  }\n\n};\n","import {max, min, sum} from \"d3-array\";\nimport {nest} from \"d3-collection\";\nimport discreteBuffer from \"./discreteBuffer\";\n\n/**\n    Adds a buffer to either side of the non-discrete axis.\n    @param {Array} data\n    @param {D3Scale} x\n    @param {D3Scale} y\n    @param {Object} [config]\n    @param {Number} [buffer = 10]\n    @private\n*/\nexport default function({data, x, y, x2, y2, buffer = 10}) {\n  const xKey = x2 ? \"x2\" : \"x\";\n  const yKey = y2 ? \"y2\" : \"y\";\n\n  const oppScale = this._discrete === \"x\" ? y : x;\n\n  const oppDomain = oppScale.domain().slice();\n\n  const isDiscreteX = this._discrete === \"x\";\n\n  if (isDiscreteX) oppDomain.reverse();\n\n  let negVals, posVals;\n  if (this._stacked) {\n    const groupedData = nest()\n      .key(d => `${d[this._discrete]}_${d.group}`)\n      .entries(data)\n      .map(d => d.values.map(x => x[isDiscreteX ? yKey : xKey]));\n    posVals = groupedData.map(arr => sum(arr.filter(d => d > 0)));\n    negVals = groupedData.map(arr => sum(arr.filter(d => d < 0)));\n  }\n  else {\n    posVals = data.map(d => d[isDiscreteX ? yKey : xKey]);\n    negVals = posVals;\n  }\n\n  let bMax = oppScale(max(posVals));\n  if (isDiscreteX ? bMax < oppScale(0) : bMax > oppScale(0)) bMax += isDiscreteX ? -buffer : buffer;\n  bMax = oppScale.invert(bMax);\n\n  let bMin = oppScale(min(negVals));\n  if (isDiscreteX ? bMin > oppScale(0) : bMin < oppScale(0)) bMin += isDiscreteX ? buffer : -buffer;\n  bMin = oppScale.invert(bMin);\n\n  if (bMax > oppDomain[1]) oppDomain[1] = bMax;\n  if (bMin < oppDomain[0]) oppDomain[0] = bMin;\n\n  if (isDiscreteX) oppDomain.reverse();\n\n  oppScale.domain(oppDomain);\n\n  discreteBuffer(isDiscreteX ? x : y, data, this._discrete);\n\n  return [x, y];\n\n}\n","import {max, min, sum} from \"d3-array\";\nimport {nest} from \"d3-collection\";\nimport discreteBuffer from \"./discreteBuffer\";\n\n/**\n    Adds a buffer to either side of the non-discrete axis.\n    @param {Array} data\n    @param {D3Scale} x\n    @param {D3Scale} y\n    @param {Object} [config]\n    @param {Number} [buffer = 10]\n    @private\n*/\nexport default function({data, x, y, x2, y2, buffer = 10}) {\n  const xKey = x2 ? \"x2\" : \"x\";\n  const yKey = y2 ? \"y2\" : \"y\";\n\n  const oppScale = this._discrete === \"x\" ? y : x;\n\n  const oppDomain = oppScale.domain().slice();\n\n  const isDiscreteX = this._discrete === \"x\";\n\n  if (isDiscreteX) oppDomain.reverse();\n\n  let negVals, posVals;\n  if (this._stacked) {\n    const groupedData = nest()\n      .key(d => d[this._discrete])\n      .entries(data)\n      .map(d => d.values.map(x => x[isDiscreteX ? yKey : xKey]));\n    posVals = groupedData.map(arr => sum(arr.filter(d => d > 0)));\n    negVals = groupedData.map(arr => sum(arr.filter(d => d < 0)));\n  }\n  else {\n    posVals = data.map(d => d[isDiscreteX ? yKey : xKey]);\n    negVals = posVals;\n  }\n\n  let bMax = oppScale(max(posVals));\n  bMax += isDiscreteX ? -buffer : buffer;\n  bMax = oppScale.invert(bMax);\n\n  let bMin = oppScale(min(negVals));\n  bMin += isDiscreteX ? buffer : -buffer;\n  bMin = oppScale.invert(bMin);\n\n  if (bMax > oppDomain[1]) oppDomain[1] = bMax;\n  if (bMin < oppDomain[0]) oppDomain[0] = bMin;\n\n  if (isDiscreteX) oppDomain.reverse();\n\n  oppScale.domain(oppDomain);\n\n  discreteBuffer(isDiscreteX ? x : y, data, this._discrete);\n\n  return [x, y];\n\n}\n","import {scaleLog} from \"d3-scale\";\n\n/** */\nexport default function(axis, scale, value, size, range, domain, index, invert) {\n  // console.log(\"\\n\");\n  // console.log(invert ? \"Y Axis\" : \"X Axis\");\n  // console.log(\"Index:\", index);\n  // console.log(\"Range\", range);\n  if (invert) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  const needsBuffer = () => {\n    let tempAxis = axis.copy();\n    let diverging = false;\n    if (scale === \"log\") {\n      let d = axis.domain().slice(),\n          r = axis.range().slice();\n      if (invert) {\n        d = d.reverse();\n        r = r.reverse();\n      }\n      diverging = d[0] * d[1] < 0;\n      if (diverging) {\n        const percentScale = scaleLog().domain([1, Math.abs(d[index])]).range([0, 1]);\n        const leftPercentage = percentScale(Math.abs(d[index ? 0 : 1]));\n        const zero = leftPercentage / (leftPercentage + 1) * (r[1] - r[0]);\n        d = (index === 0 ? [d[0], 1] : [1, d[1]]).map(Math.abs);\n        r = index === 0 ? [r[0], r[0] + zero] : [r[0] + zero, r[1]];\n      }\n      tempAxis = scaleLog()\n        .domain(d)\n        .range(r);\n    }\n\n    let outside = false;\n    const tempRange = tempAxis.range();\n    let pixelValue;\n    if (scale === \"log\") {\n      pixelValue = !diverging || value < 0 && !index || value > 0 && index ? tempAxis(Math.abs(value)) : tempRange[value < 0 ? 0 : 1];\n    }\n    else pixelValue = tempAxis(value);\n\n    if (invert) {\n      if (index === 0) outside = pixelValue + size > tempRange[index];\n      else if (index === 1) outside = pixelValue - size < tempRange[index];\n    }\n    else {\n      if (index === 0) outside = pixelValue - size < tempRange[index];\n      else if (index === 1) outside = pixelValue + size > tempRange[index];\n    }\n    // console.log(\"temp\", pixelValue, size, tempAxis.domain(), tempRange);\n    return outside;\n\n  };\n\n  if (axis.invert && needsBuffer()) {\n    if (scale === \"log\") {\n      let decrease = index === 0 && domain[0] > 0 || index === 1 && domain[1] < 0;\n      let log = Math[decrease ? \"ceil\" : \"floor\"](Math.log10(Math.abs(domain[index])));\n      // console.log(\"Log start:\", log, decrease);\n      while (needsBuffer() && log < 20) {\n        log = decrease ? log - 1 : log + 1;\n        let mod = domain[index] < 0 ? -1 : 1;\n        if (log < 0) {\n          log = 1;\n          decrease = !decrease;\n          mod = !mod;\n        }\n        domain[index] = Math.pow(10, log) * mod;\n        axis.domain(invert ? domain.slice().reverse() : domain);\n        // console.log(\"change!\", domain);\n      }\n    }\n    else if (index === 0) {\n      const v = axis.invert(axis(value) + size * (invert ? 1 : -1));\n      // console.log(\"value\", v, domain);\n      if (v < domain[index]) {\n        domain[index] = v;\n        axis.domain(invert ? domain.slice().reverse() : domain);\n      }\n    }\n    else if (index === 1) {\n      const v = axis.invert(axis(value) + size * (invert ? -1 : 1));\n      if (v > domain[index]) {\n        domain[index] = v;\n        axis.domain(invert ? domain.slice().reverse() : domain);\n      }\n    }\n  }\n  return invert ? domain.reverse() : domain;\n}\n","import discreteBuffer from \"./discreteBuffer\";\nimport numericBuffer from \"./numericBuffer\";\n\n/**\n    Adds a buffer to either side of the non-discrete axis.\n    @param {Array} data\n    @param {D3Scale} x\n    @param {D3Scale} y\n    @param {Object} [config]\n    @param {Number} [buffer] Defaults to the radius of the largest Circle.\n    @private\n*/\nexport default function({data, x, y, x2, y2, yScale, xScale, config, buffer}) {\n\n  x = x.copy();\n  y = y.copy();\n\n  const xKey = x2 ? \"x2\" : \"x\";\n  const yKey = y2 ? \"y2\" : \"y\";\n\n  let xD = x.domain().slice(),\n      yD = y.domain().slice();\n\n  const xR = x.range(),\n        yR = y.range();\n\n  if (!x.invert && x.padding) discreteBuffer(x, data, this._discrete);\n  if (!y.invert && y.padding) discreteBuffer(y, data, this._discrete);\n\n  if (x.invert || y.invert) {\n\n    data.forEach(d => {\n\n      const s = buffer ? buffer : config.r(d.data, d.i) * 2;\n\n      if (x.invert) {\n        xD = numericBuffer(x, xScale, d[xKey], s, xR, xD, 0, false);\n        xD = numericBuffer(x, xScale, d[xKey], s, xR, xD, 1, false);\n      }\n\n      if (y.invert) {\n        yD = numericBuffer(y, yScale, d[yKey], s, yR, yD, 0, true);\n        yD = numericBuffer(y, yScale, d[yKey], s, yR, yD, 1, true);\n      }\n\n    });\n\n  }\n\n  return [x, y];\n\n}\n","import {max} from \"d3-array\";\n\n/**\n    Adds a buffer to either side of the non-discrete axis.\n    @param {Array} data\n    @param {D3Scale} x\n    @param {D3Scale} y\n    @param {Object} [config]\n    @param {Number} [buffer] Defaults to the radius of the largest Circle.\n    @private\n*/\nexport default function({data, x, y, x2, y2}) {\n  const xKey = x2 ? \"x2\" : \"x\";\n  const yKey = y2 ? \"y2\" : \"y\";\n\n  const s = this._discrete === \"x\" ? y : x;\n\n  const d = s.domain().slice();\n\n  if (this._discrete === \"x\") d.reverse();\n\n  const vals = data.map(d => d[this._discrete === \"x\" ? yKey : xKey]);\n  const b = s.invert(s(max(vals)) + (this._discrete === \"x\" ? -10 : 10));\n\n  if (b > d[1]) d[1] = b;\n\n  if (this._discrete === \"x\") d.reverse();\n\n  s.domain(d);\n\n  return [x, y];\n\n}\n","import discreteBuffer from \"./discreteBuffer\";\nimport numericBuffer from \"./numericBuffer\";\n\n/**\n    Adds a buffer to either side of the non-discrete axis.\n    @param {Array} data\n    @param {D3Scale} x\n    @param {D3Scale} y\n    @param {Object} [config]\n    @param {Number} [buffer] Defaults to the width/height of the largest Rect.\n    @private\n*/\nexport default function({data, x, y, x2, y2, yScale, xScale, config}) {\n\n  x = x.copy();\n  y = y.copy();\n\n  const xKey = x2 ? \"x2\" : \"x\";\n  const yKey = y2 ? \"y2\" : \"y\";\n\n  let xD = x.domain().slice(),\n      yD = y.domain().slice();\n\n  const xR = x.range(),\n        yR = y.range();\n\n  if (!x.invert && x.padding) discreteBuffer(x, data, this._discrete);\n  if (!y.invert && y.padding) discreteBuffer(y, data, this._discrete);\n\n  if (x.invert || y.invert) {\n\n    data.forEach(d => {\n\n      if (x.invert) {\n        const w = config.width(d.data, d.i);\n        xD = numericBuffer(x, xScale, d[xKey], w, xR, xD, 0, false);\n        xD = numericBuffer(x, xScale, d[xKey], w, xR, xD, 1, false);\n      }\n\n      if (y.invert) {\n        const h = config.height(d.data, d.i);\n        yD = numericBuffer(y, yScale, d[yKey], h, yR, yD, 0, true);\n        yD = numericBuffer(y, yScale, d[yKey], h, yR, yD, 1, true);\n      }\n\n    });\n\n  }\n\n  return [x, y];\n\n}\n\n","/* eslint no-cond-assign: 0 */\n\nimport {deviation, extent, max, mean, merge, min, range, sum} from \"d3-array\";\nimport {nest} from \"d3-collection\";\nimport * as scales from \"d3-scale\";\nimport * as d3Shape from \"d3-shape\";\n\nimport {AxisBottom, AxisLeft, AxisRight, AxisTop, date} from \"d3plus-axis\";\nimport {colorAssign} from \"d3plus-color\";\nimport {accessor, assign, configPrep, constant, elem} from \"d3plus-common\";\nimport * as shapes from \"d3plus-shape\";\nimport {Viz} from \"d3plus-viz\";\n\nimport {default as BarBuffer} from \"./buffers/Bar.js\";\nimport {default as BoxBuffer} from \"./buffers/Box.js\";\nimport {default as CircleBuffer} from \"./buffers/Circle.js\";\nimport {default as LineBuffer} from \"./buffers/Line.js\";\nimport {default as RectBuffer} from \"./buffers/Rect.js\";\n\n/**\n    @desc Logic for determining default sizes of shapes using the sizeScaleD3 internal function.\n    @private\n*/\nfunction defaultSize(d) {\n  return this._sizeScaleD3(this._size ? this._size(d) : null);\n}\n\n/**\n    @desc Logic for determining stackOrder ascending using groups.\n    @private\n*/\nfunction stackOrderAscending(series) {\n  const sums = series.map(stackSum);\n  const keys = series.map(d => d.key.split(\"_\")[0]);\n  return d3Shape.stackOrderNone(series).sort((a, b) => keys[b].localeCompare(keys[a]) || sums[a] - sums[b]);\n}\n\n/**\n    @desc Logic for determining stackOrder descending using groups.\n    @private\n*/\nfunction stackOrderDescending(series) {\n  return stackOrderAscending(series).reverse();\n}\n\n/**\n    @desc Logic for determining default sum of shapes using the stackSum function used in d3Shape.\n    @private\n*/\nfunction stackSum(series) {\n  let i = -1, s = 0, v;\n  const n = series.length;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n\n/**\n    @desc Logic for determining default sum of shapes using the stackSum function used in d3Shape.\n    @private\n*/\nfunction stackOffsetDiverging(series, order) {\n  let n;\n  if (!((n = series.length) > 0)) return;\n  let d, dy, i, yn, yp;\n  const m = series[order[0]].length;\n  for (let j = 0; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      }\n      else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      }\n      else {\n        d[0] = yp;\n      }\n    }\n  }\n}\n\n/**\n    @class Plot\n    @extends Viz\n    @desc Creates an x/y plot based on an array of data.\n*/\nexport default class Plot extends Viz {\n\n  /**\n      @memberof Plot\n      @desc Invoked when creating a new class instance, and sets any default parameters.\n      @private\n  */\n  constructor() {\n\n    super();\n    this._annotations = [];\n    this._backgroundConfig = {\n      duration: 0,\n      fill: \"transparent\"\n    };\n    this._barPadding = 0;\n    this._buffer = {\n      Bar: BarBuffer,\n      Box: BoxBuffer,\n      Circle: CircleBuffer,\n      Line: LineBuffer,\n      Rect: RectBuffer\n    };\n    this._confidenceConfig = {\n      fillOpacity: constant(0.5)\n    };\n    this._discreteCutoff = 100;\n    this._groupPadding = 5;\n    this._previousShapes = [];\n    this._shape = constant(\"Circle\");\n    this._shapeConfig = assign(this._shapeConfig, {\n      Area: {\n        label: (d, i) => this._stacked ? this._drawLabel(d, i) : false,\n        labelConfig: {\n          fontResize: true\n        }\n      },\n      ariaLabel: (d, i) => {\n        let ariaLabelStr = \"\";\n        if (d.nested) ariaLabelStr = `${this._drawLabel(d.data, d.i)}`;\n        else {\n          ariaLabelStr = `${this._drawLabel(d, i)}`;\n          if (this._x(d, i) !== undefined) ariaLabelStr += `, x: ${this._x(d, i)}`;\n          if (this._y(d, i) !== undefined) ariaLabelStr += `, y: ${this._y(d, i)}`;\n          if (this._x2(d, i) !== undefined) ariaLabelStr += `, x2: ${this._x2(d, i)}`;\n          if (this._y2(d, i) !== undefined) ariaLabelStr += `, y2: ${this._y2(d, i)}`;\n        }\n        return `${ariaLabelStr}.`;\n      },\n      Bar: {\n        labelConfig: {\n          textAnchor: () => this._discrete === \"x\" ? \"middle\" : \"end\",\n          verticalAlign: () => this._discrete === \"x\" ? \"top\" : \"middle\"\n        }\n      },\n      Circle: {\n        r: defaultSize.bind(this)\n      },\n      Line: {\n        fill: constant(\"none\"),\n        label: false,\n        stroke: (d, i) => colorAssign(this._id(d, i)),\n        strokeWidth: constant(1)\n      },\n      Rect: {\n        height: d => defaultSize.bind(this)(d) * 2,\n        width: d => defaultSize.bind(this)(d) * 2\n      }\n    });\n    this._shapeOrder = [\"Area\", \"Path\", \"Bar\", \"Box\", \"Line\", \"Rect\", \"Circle\"];\n    this._shapeSort = (a, b) => this._shapeOrder.indexOf(a) - this._shapeOrder.indexOf(b);\n    this._sizeMax = 20;\n    this._sizeMin = 5;\n    this._sizeScale = \"sqrt\";\n    this._stackOffset = stackOffsetDiverging;\n    this._stackOrder = stackOrderDescending;\n    this._timelineConfig = assign(this._timelineConfig, {brushing: true});\n\n    this._x = accessor(\"x\");\n    this._xAxis = new AxisBottom().align(\"end\");\n    this._xTest = new AxisBottom().align(\"end\").gridSize(0);\n    this._xConfig = {};\n    this._xCutoff = 150;\n\n    this._x2 = accessor(\"x2\");\n    this._x2Axis = new AxisTop().align(\"start\");\n    this._x2Test = new AxisTop().align(\"start\").gridSize(0);\n    this._x2Config = {\n      padding: 0\n    };\n\n    this._y = accessor(\"y\");\n    this._yAxis = new AxisLeft().align(\"start\");\n    this._yTest = new AxisLeft().align(\"start\").gridSize(0);\n    this._yConfig = {\n      gridConfig: {\n        stroke: d => {\n          const domain = this._yAxis.domain();\n          return domain[domain.length - 1] === d.id ? \"transparent\" : \"#ccc\";\n        }\n      }\n    };\n    this._yCutoff = 150;\n\n    this._y2 = accessor(\"y2\");\n    this._y2Axis = new AxisRight().align(\"end\");\n    this._y2Test = new AxisLeft().align(\"end\").gridSize(0);\n    this._y2Config = {};\n\n  }\n\n  /**\n      Extends the draw behavior of the abstract Viz class.\n      @private\n  */\n  _draw(callback) {\n\n    if (!this._filteredData.length) return this;\n\n    const stackGroup = (d, i) => this._stacked\n      ? `${this._groupBy.length > 1 ? this._ids(d, i).slice(0, -1).join(\"_\") : \"group\"}`\n      : `${this._ids(d, i).join(\"_\")}`;\n\n    let data = this._filteredData.map((d, i) => ({\n      __d3plus__: true,\n      data: d,\n      group: stackGroup(d, i),\n      i,\n      hci: this._confidence && this._confidence[1] && this._confidence[1](d, i),\n      id: this._ids(d, i).slice(0, this._drawDepth + 1).join(\"_\"),\n      lci: this._confidence && this._confidence[0] && this._confidence[0](d, i),\n      shape: this._shape(d, i),\n      x: this._x(d, i),\n      x2: this._x2(d, i),\n      y: this._y(d, i),\n      y2: this._y2(d, i)\n    }));\n\n    this._formattedData = data;\n\n    if (this._size) {\n      const rExtent = extent(data, d => this._size(d.data));\n      this._sizeScaleD3 = () => this._sizeMin;\n      this._sizeScaleD3 = scales[`scale${this._sizeScale.charAt(0).toUpperCase()}${this._sizeScale.slice(1)}`]()\n        .domain(rExtent)\n        .range([rExtent[0] === rExtent[1] ? this._sizeMax : min([this._sizeMax / 2, this._sizeMin]), this._sizeMax]);\n    }\n    else {\n      this._sizeScaleD3 = () => this._sizeMin;\n    }\n\n    const x2Exists = data.some(d => d.x2 !== undefined),\n          y2Exists = data.some(d => d.y2 !== undefined);\n\n    const height = this._height - this._margin.top - this._margin.bottom,\n          opp = this._discrete ? this._discrete === \"x\" ? \"y\" : \"x\" : undefined,\n          opp2 = this._discrete ? this._discrete === \"x\" ? \"y2\" : \"x2\" : undefined,\n          opps = [opp, opp2].filter(d => d),\n          parent = this._select,\n          transition = this._transition,\n          width = this._width - this._margin.left - this._margin.right;\n\n    const x2Time = this._time && data[0].x2 === this._time(data[0].data, data[0].i),\n          xTime = this._time && data[0].x === this._time(data[0].data, data[0].i),\n          y2Time = this._time && data[0].y2 === this._time(data[0].data, data[0].i),\n          yTime = this._time && data[0].y === this._time(data[0].data, data[0].i);\n\n    for (let i = 0; i < data.length; i++) {\n      const d = data[i];\n      if (xTime) d.x = date(d.x);\n      if (x2Time) d.x2 = date(d.x2);\n      if (yTime) d.y = date(d.y);\n      if (y2Time) d.y2 = date(d.y2);\n      d.discrete = d.shape === \"Bar\" ? `${d[this._discrete]}_${d.group}` : `${d[this._discrete]}`;\n    }\n\n    let discreteKeys, domains, stackData, stackKeys;\n    if (this._stacked) {\n\n      const groupValues = nest()\n        .key(d => d.group)\n        .entries(data)\n        .reduce((obj, d) => {\n          if (!obj[d.key]) obj[d.key] = 0;\n          obj[d.key] += sum(d.values, dd => dd[opp]);\n          return obj;\n        }, {});\n\n      data = data.sort((a, b) => {\n        if (this[`_${this._discrete}Sort`]) return this[`_${this._discrete}Sort`](a.data, b.data);\n        const a1 = a[this._discrete], b1 = b[this._discrete];\n        if (a1 - b1 !== 0) return a1 - b1;\n        if (a.group !== b.group) return groupValues[b.group] - groupValues[a.group];\n        return b[opp] - a[opp];\n      });\n\n      discreteKeys = Array.from(new Set(data.map(d => d.discrete)));\n      stackKeys = Array.from(new Set(data.map(d => d.id)));\n\n      stackData = nest()\n        .key(d => d.discrete)\n        .entries(data)\n        .map(d => d.values);\n\n      stackData.forEach(g => {\n        const ids = Array.from(new Set(g.map(d => d.id)));\n        if (ids.length < stackKeys.length) {\n          stackKeys.forEach(k => {\n            if (!ids.includes(k)) {\n              const d = data.filter(d => d.id === k)[0];\n              if (d.shape === \"Area\") {\n                const group = stackGroup(d.data, d.i);\n                const fillerPoint = {\n                  __d3plus__: true,\n                  data: d.data,\n                  discrete: d.shape === \"Bar\" ? `${g[0][this._discrete]}_${group}` : `${g[0][this._discrete]}`,\n                  group,\n                  id: k,\n                  shape: d.shape,\n                  [this._discrete]: g[0][this._discrete],\n                  [opp]: 0\n                };\n                data.push(fillerPoint);\n              }\n            }\n          });\n        }\n      });\n\n      if (this[`_${this._discrete}Sort`]) {\n        data.sort((a, b) => this[`_${this._discrete}Sort`](a.data, b.data));\n      }\n      else {\n        data.sort((a, b) => a[this._discrete] - b[this._discrete]);\n      }\n\n      const order = this._stackOrder;\n\n      if (order instanceof Array) stackKeys.sort((a, b) => order.indexOf(a) - order.indexOf(b));\n      else if (order === d3Shape.stackOrderNone) stackKeys.sort((a, b) => a.localeCompare(b));\n\n      stackData = d3Shape.stack()\n        .keys(stackKeys)\n        .offset(this._stackOffset)\n        .order(order instanceof Array ? d3Shape.stackOrderNone : order)\n        .value((group, key) => {\n          const d = group.filter(g => g.id === key);\n          return d.length ? d[0][opp] : 0;\n        })(stackData);\n\n      domains = {\n        [this._discrete]: extent(data, d => d[this._discrete]),\n        [opp]: [min(stackData.map(g => min(g.map(p => p[0])))), max(stackData.map(g => max(g.map(p => p[1]))))]\n      };\n\n    }\n    else {\n\n      const discrete = this._discrete || \"x\";\n\n      if (this[`_${this._discrete}Sort`]) {\n        data.sort((a, b) => this[`_${this._discrete}Sort`](a.data, b.data));\n      }\n      else {\n        data.sort((a, b) => a[discrete] - b[discrete]);\n      }\n\n      const xData = discrete === \"x\" ? data.map(d => d.x) : data.map(d => d.x)\n        .concat(this._confidence && this._confidence[0] ? data.map(d => d.lci) : [])\n        .concat(this._confidence && this._confidence[1] ? data.map(d => d.hci) : []);\n\n      const x2Data = discrete === \"x\" ? data.map(d => d.x2) : data.map(d => d.x2)\n        .concat(this._confidence && this._confidence[0] ? data.map(d => d.lci) : [])\n        .concat(this._confidence && this._confidence[1] ? data.map(d => d.hci) : []);\n\n      const yData = discrete === \"y\" ? data.map(d => d.y) : data.map(d => d.y)\n        .concat(this._confidence && this._confidence[0] ? data.map(d => d.lci) : [])\n        .concat(this._confidence && this._confidence[1] ? data.map(d => d.hci) : []);\n\n      const y2Data = discrete === \"y\" ? data.map(d => d.y2) : data.map(d => d.y2)\n        .concat(this._confidence && this._confidence[0] ? data.map(d => d.lci) : [])\n        .concat(this._confidence && this._confidence[1] ? data.map(d => d.hci) : []);\n\n      domains = {\n        x: this._xSort ? Array.from(new Set(data.filter(d => d.x).sort((a, b) => this._xSort(a.data, b.data)).map(d => d.x))) : extent(xData, d => d),\n        x2: this._x2Sort ? Array.from(new Set(data.filter(d => d.x2).sort((a, b) => this._x2Sort(a.data, b.data)).map(d => d.x2))) : extent(x2Data, d => d),\n        y: this._ySort ? Array.from(new Set(data.filter(d => d.y).sort((a, b) => this._ySort(a.data, b.data)).map(d => d.y))) : extent(yData, d => d),\n        y2: this._y2Sort ? Array.from(new Set(data.filter(d => d.y2).sort((a, b) => this._y2Sort(a.data, b.data)).map(d => d.y2))) : extent(y2Data, d => d)\n      };\n    }\n\n    let xDomain = this._xDomain ? this._xDomain.slice() : domains.x,\n        xScale = this._xSort ? \"Point\" : \"Linear\";\n\n    if (xDomain[0] === void 0) xDomain[0] = domains.x[0];\n    if (xDomain[1] === void 0) xDomain[1] = domains.x[1];\n\n    if (xTime) {\n      xDomain = xDomain.map(date);\n      xScale = \"Time\";\n    }\n    else if (this._discrete === \"x\") {\n      xDomain = Array.from(new Set(data.filter(d => [\"number\", \"string\"].includes(typeof d.x)).sort((a, b) => this._xSort ? this._xSort(a.data, b.data) : a.x - b.x).map(d => d.x)));\n      xScale = \"Point\";\n    }\n\n    let x2Domain = this._x2Domain ? this._x2Domain.slice() : domains.x2,\n        x2Scale = this._x2Sort ? \"Point\" : \"Linear\";\n\n    if (x2Domain && x2Domain[0] === void 0) x2Domain[0] = domains.x2[0];\n    if (x2Domain && x2Domain[1] === void 0) x2Domain[1] = domains.x2[1];\n\n    if (x2Time) {\n      x2Domain = x2Domain.map(date);\n      x2Scale = \"Time\";\n    }\n    else if (this._discrete === \"x\") {\n      x2Domain = Array.from(new Set(data.filter(d => [\"number\", \"string\"].includes(typeof d.x2)).sort((a, b) => this._x2Sort ? this._x2Sort(a.data, b.data) : a.x2 - b.x2).map(d => d.x2)));\n      x2Scale = \"Point\";\n    }\n\n    let yDomain = this._yDomain ? this._yDomain.slice() : domains.y,\n        yScale = this._ySort ? \"Point\" : \"Linear\";\n\n    if (yDomain[0] === void 0) yDomain[0] = domains.y[0];\n    if (yDomain[1] === void 0) yDomain[1] = domains.y[1];\n\n    let y2Domain = this._y2Domain ? this._y2Domain.slice() : domains.y2,\n        y2Scale = this._y2Sort ? \"Point\" : \"Linear\";\n\n    if (y2Domain && y2Domain[0] === void 0) y2Domain[0] = domains.y2[0];\n    if (y2Domain && y2Domain[1] === void 0) y2Domain[1] = domains.y2[1];\n\n    if (yTime) {\n      yDomain = yDomain.map(date);\n      yScale = \"Time\";\n    }\n    else if (this._discrete === \"y\") {\n      yDomain = Array.from(new Set(data.filter(d => [\"number\", \"string\"].includes(typeof d.y)).sort((a, b) => this._ySort ? this._ySort(a.data, b.data) : a.y - b.y).map(d => d.y)));\n      yScale = \"Point\";\n\n      y2Domain = Array.from(new Set(data.filter(d => [\"number\", \"string\"].includes(typeof d.y2)).sort((a, b) => this._y2Sort ? this._y2Sort(a.data, b.data) : a.y2 - b.y2).map(d => d.y2)));\n      y2Scale = \"Point\";\n    }\n\n    if (y2Time) {\n      y2Domain = y2Domain.map(date);\n      y2Scale = \"Time\";\n    }\n\n    domains = {x: xDomain, x2: x2Domain || xDomain, y: yDomain, y2: y2Domain || yDomain};\n\n    opps.forEach(opp => {\n      if (this[`_${opp}Config`].domain) {\n        const d = this[`_${opp}Config`].domain;\n        if (this._discrete === \"x\") d.reverse();\n        domains[opp] = d;\n      }\n      else if (opp && this._baseline !== void 0) {\n        const b = this._baseline;\n        if (domains[opp] && domains[opp][0] > b) domains[opp][0] = b;\n        else if (domains[opp] && domains[opp][1] < b) domains[opp][1] = b;\n      }\n    });\n\n    let x = scales[`scale${xScale}`]().domain(domains.x).range(range(0, width + 1, width / (domains.x.length - 1))),\n        x2 = scales[`scale${x2Scale}`]().domain(domains.x2).range(range(0, width + 1, width / (domains.x2.length - 1))),\n        y = scales[`scale${yScale}`]().domain(domains.y.reverse()).range(range(0, height + 1, height / (domains.y.length - 1))),\n        y2 = scales[`scale${y2Scale}`]().domain(domains.y2.reverse()).range(range(0, height + 1, height / (domains.y2.length - 1)));\n\n    const shapeData = nest()\n      .key(d => d.shape)\n      .entries(data)\n      .sort((a, b) => this._shapeSort(a.key, b.key));\n\n    const autoScale = (axis, fallback) => {\n      const userScale = this[`_${axis}Config`].scale;\n      if (userScale === \"auto\") {\n        if (this._discrete === axis) return fallback;\n        const values = data.map(d => d[axis]);\n        return deviation(values) / mean(values) > 3 ? \"log\" : \"linear\";\n      }\n      return userScale || fallback;\n    };\n\n    const yConfigScale = autoScale(\"y\", yScale).toLowerCase();\n    const y2ConfigScale = autoScale(\"y2\", y2Scale).toLowerCase();\n    const xConfigScale = autoScale(\"x\", xScale).toLowerCase();\n    const x2ConfigScale = autoScale(\"x2\", x2Scale).toLowerCase();\n\n    const oppScale = this._discrete === \"x\" ? yScale : xScale;\n    if (oppScale !== \"Point\") {\n      shapeData.forEach(d => {\n        if (this._buffer[d.key]) {\n          const res = this._buffer[d.key].bind(this)({data: d.values, x, y, yScale: yConfigScale, xScale: xConfigScale, config: this._shapeConfig[d.key]});\n          x = res[0];\n          y = res[1];\n          const res2 = this._buffer[d.key].bind(this)({data: d.values, x: x2, y: y2, yScale: y2ConfigScale, xScale: x2ConfigScale, x2: true, y2: true, config: this._shapeConfig[d.key]});\n          x2 = res2[0];\n          y2 = res2[1];\n        }\n      });\n    }\n\n    xDomain = x.domain();\n    x2Domain = x2.domain();\n    yDomain = y.domain();\n    y2Domain = y2.domain();\n\n    const defaultConfig = {\n      barConfig: {\"stroke-width\": 0},\n      gridSize: 0,\n      labels: [],\n      title: false,\n      tickSize: 0\n    };\n\n    const defaultX2Config = x2Exists ? {} : defaultConfig;\n    const defaultY2Config = y2Exists ? {} : defaultConfig;\n    const showX = this._discrete === \"x\" && this._width > this._discreteCutoff || this._width > this._xCutoff;\n    const showY = this._discrete === \"y\" && this._height > this._discreteCutoff || this._height > this._yCutoff;\n\n    const yC = {\n      gridConfig: {stroke: !this._discrete || this._discrete === \"x\" ? this._yTest.gridConfig().stroke : \"transparent\"},\n      locale: this._locale,\n      scalePadding: y.padding ? y.padding() : 0\n    };\n    if (!showX) {\n      yC.barConfig = {stroke: \"transparent\"};\n      yC.tickSize = 0;\n      yC.shapeConfig = {\n        labelBounds: (d, i) => {\n          const {width, y} = d.labelBounds;\n          const height = this._height / 2;\n          const x = i ? -height : 0;\n          return {x, y, width, height};\n        },\n        labelConfig: {\n          padding: 0,\n          rotate: 0,\n          verticalAlign: d => d.id === yTicks[0] ? \"top\" : \"bottom\"\n        },\n        labelRotation: false\n      };\n    }\n\n    const testGroup = elem(\"g.d3plus-plot-test\", {enter: {opacity: 0}, parent: this._select}),\n          x2Ticks = this._discrete === \"x\" && !x2Time ? domains.x2 : undefined,\n          xTicks = !showY ? extent(domains.x) : this._discrete === \"x\" && !xTime ? domains.x : undefined,\n          y2Ticks = this._discrete === \"y\" && !y2Time ? domains.y2 : undefined,\n          yTicks = !showX ? extent(domains.y) : this._discrete === \"y\" && !yTime ? domains.y : undefined;\n\n    if (showY) {\n      this._yTest\n        .domain(yDomain)\n        .height(height)\n        .maxSize(width / 2)\n        .range([undefined, undefined])\n        .select(testGroup.node())\n        .ticks(yTicks)\n        .width(width)\n        .config(yC)\n        .config(this._yConfig)\n        .scale(yConfigScale)\n        .render();\n    }\n\n    let yBounds = this._yTest.outerBounds();\n    let yWidth = yBounds.width ? yBounds.width + this._yTest.padding() : undefined;\n\n    if (y2Exists) {\n      this._y2Test\n        .domain(y2Domain)\n        .height(height)\n        .range([undefined, undefined])\n        .select(testGroup.node())\n        .ticks(y2Ticks)\n        .width(width)\n        .config(yC)\n        .config(defaultY2Config)\n        .config(this._y2Config)\n        .scale(y2ConfigScale)\n        .render();\n    }\n\n    let y2Bounds = this._y2Test.outerBounds();\n    let y2Width = y2Bounds.width ? y2Bounds.width + this._y2Test.padding() : undefined;\n\n    const xC = {\n      gridConfig: {stroke: !this._discrete || this._discrete === \"y\" ? this._xTest.gridConfig().stroke : \"transparent\"},\n      locale: this._locale,\n      scalePadding: x.padding ? x.padding() : 0\n    };\n    if (!showY) {\n      xC.barConfig = {stroke: \"transparent\"};\n      xC.tickSize = 0;\n      xC.shapeConfig = {\n        labelBounds: (d, i) => {\n          const {height, y} = d.labelBounds;\n          const width = this._width / 2;\n          const x = i ? -width : 0;\n          return {x, y, width, height};\n        },\n        labelConfig: {\n          padding: 0,\n          rotate: 0,\n          textAnchor: d => d.id === xTicks[0] ? \"start\" : \"end\"\n        },\n        labelRotation: false\n      };\n    }\n\n    if (showX) {\n      this._xTest\n        .domain(xDomain)\n        .height(height)\n        .maxSize(height / 2)\n        .range([undefined, undefined])\n        .select(testGroup.node())\n        .ticks(xTicks)\n        .width(width)\n        .config(xC)\n        .config(this._xConfig)\n        .scale(xConfigScale)\n        .render();\n    }\n\n    if (x2Exists) {\n      this._x2Test\n        .domain(x2Domain)\n        .height(height)\n        .range([undefined, undefined])\n        .select(testGroup.node())\n        .ticks(x2Ticks)\n        .width(width)\n        .config(xC)\n        .tickSize(0)\n        .config(defaultX2Config)\n        .config(this._x2Config)\n        .scale(x2ConfigScale)\n        .render();\n    }\n\n    const xTestRange = this._xTest._getRange();\n    const x2TestRange = this._x2Test._getRange();\n\n    const x2Bounds = this._x2Test.outerBounds();\n    const x2Height = x2Exists ? x2Bounds.height + this._x2Test.padding() : 0;\n\n    let xOffsetLeft = max([yWidth, xTestRange[0], x2TestRange[0]]);\n\n    if (showX) {\n      this._xTest\n        .range([xOffsetLeft, undefined])\n        .render();\n    }\n\n    const topOffset = showY ? this._yTest.shapeConfig().labelConfig.fontSize() / 2 : 0;\n\n    let xOffsetRight = max([y2Width, width - xTestRange[1], width - x2TestRange[1]]);\n    const xBounds = this._xTest.outerBounds();\n    const xHeight = xBounds.height + (showY ? this._xTest.padding() : 0);\n\n    this._padding.left += xOffsetLeft;\n    this._padding.right += xOffsetRight;\n    this._padding.bottom += xHeight;\n    this._padding.top += x2Height + topOffset;\n\n    super._draw(callback);\n\n    const horizontalMargin = this._margin.left + this._margin.right;\n    const verticalMargin = this._margin.top + this._margin.bottom;\n    let yRange = [x2Height, height - (xHeight + topOffset + verticalMargin)];\n\n    if (showY) {\n      this._yTest\n        .domain(yDomain)\n        .height(height)\n        .maxSize(width / 2)\n        .range(yRange)\n        .select(testGroup.node())\n        .ticks(yTicks)\n        .width(width)\n        .config(yC)\n        .config(this._yConfig)\n        .scale(yConfigScale)\n        .render();\n    }\n\n    yBounds = this._yTest.outerBounds();\n    yWidth = yBounds.width ? yBounds.width + this._yTest.padding() : undefined;\n    xOffsetLeft = max([yWidth, xTestRange[0], x2TestRange[0]]);\n\n    if (y2Exists) {\n      this._y2Test\n        .config(yC)\n        .domain(y2Domain)\n        .gridSize(0)\n        .height(height)\n        .range(yRange)\n        .select(testGroup.node())\n        .width(width - max([0, xOffsetRight - y2Width]))\n        .title(false)\n        .config(this._y2Config)\n        .config(defaultY2Config)\n        .scale(y2ConfigScale)\n        .render();\n    }\n\n    y2Bounds = this._y2Test.outerBounds();\n    y2Width = y2Bounds.width ? y2Bounds.width + this._y2Test.padding() : undefined;\n    xOffsetRight = max([0, y2Width, width - xTestRange[1], width - x2TestRange[1]]);\n    const xRange = [xOffsetLeft, width - (xOffsetRight + horizontalMargin)];\n\n    const rectGroup = elem(\"g.d3plus-plot-background\", {parent, transition});\n\n    const transform = `translate(${this._margin.left}, ${this._margin.top + x2Height + topOffset})`;\n    const x2Transform = `translate(${this._margin.left}, ${this._margin.top + topOffset})`;\n\n    const xGroup = showX && elem(\"g.d3plus-plot-x-axis\", {parent, transition, enter: {transform}, update: {transform}});\n    const x2Group = x2Exists && elem(\"g.d3plus-plot-x2-axis\", {parent, transition, enter: {transform: x2Transform}, update: {transform: x2Transform}});\n\n    const xTrans = xOffsetLeft > yWidth ? xOffsetLeft - yWidth : 0;\n    const yTransform = `translate(${this._margin.left + xTrans}, ${this._margin.top + topOffset})`;\n    const yGroup = showY && elem(\"g.d3plus-plot-y-axis\", {parent, transition, enter: {transform: yTransform}, update: {transform: yTransform}});\n\n    const y2Transform = `translate(-${this._margin.right}, ${this._margin.top + topOffset})`;\n    const y2Group = y2Exists && elem(\"g.d3plus-plot-y2-axis\", {parent, transition, enter: {transform: y2Transform}, update: {transform: y2Transform}});\n\n    this._xAxis\n      .domain(xDomain)\n      .height(height - (x2Height + topOffset + verticalMargin))\n      .maxSize(height / 2)\n      .range(xRange)\n      .select(showX ? xGroup.node() : undefined)\n      .ticks(xTicks)\n      .width(width)\n      .config(xC)\n      .config(this._xConfig)\n      .scale(xConfigScale)\n      .render();\n\n    if (x2Exists) {\n      this._x2Axis\n        .domain(x2Domain)\n        .height(height - (xHeight + topOffset + verticalMargin))\n        .range(xRange)\n        .select(x2Group.node())\n        .ticks(x2Ticks)\n        .width(width)\n        .config(xC)\n        .config(defaultX2Config)\n        .config(this._x2Config)\n        .scale(x2ConfigScale)\n        .render();\n    }\n\n    x = (d, x) => {\n      if (x === \"x2\") {\n        if (this._x2Config.scale === \"log\" && d === 0) d = x2Domain[0] < 0 ? -1 : 1;\n        return this._x2Axis._getPosition.bind(this._x2Axis)(d);\n      }\n      else {\n        if (this._xConfig.scale === \"log\" && d === 0) d = xDomain[0] < 0 ? -1 : 1;\n        return this._xAxis._getPosition.bind(this._xAxis)(d);\n      }\n    };\n\n    yRange = [this._xAxis.outerBounds().y + x2Height, height - (xHeight + topOffset + verticalMargin)];\n\n    this._yAxis\n      .domain(yDomain)\n      .height(height)\n      .maxSize(width / 2)\n      .range(yRange)\n      .select(showY ? yGroup.node() : undefined)\n      .ticks(yTicks)\n      .width(xRange[xRange.length - 1])\n      .config(yC)\n      .config(this._yConfig)\n      .scale(yConfigScale)\n      .render();\n\n    if (y2Exists) {\n      this._y2Axis\n        .config(yC)\n        .domain(y2Exists ? y2Domain : yDomain)\n        .gridSize(0)\n        .height(height)\n        .range(yRange)\n        .select(y2Group.node())\n        .width(width - max([0, xOffsetRight - y2Width]))\n        .title(false)\n        .config(this._y2Config)\n        .config(defaultY2Config)\n        .scale(y2ConfigScale)\n        .render();\n    }\n\n    y = (d, y) => {\n      if (y === \"y2\") {\n        if (this._y2Config.scale === \"log\" && d === 0) d = y2Domain[0] < 0 ? -1 : 1;\n        return this._y2Axis._getPosition.bind(this._y2Axis)(d) - x2Height;\n      }\n      else {\n        if (this._yConfig.scale === \"log\" && d === 0) d = yDomain[0] < 0 ? -1 : 1;\n        return this._yAxis._getPosition.bind(this._yAxis)(d) - x2Height;\n      }\n    };\n\n    new shapes.Rect()\n      .data([{}])\n      .select(rectGroup.node())\n      .x(xRange[0] + (xRange[1] - xRange[0]) / 2)\n      .width(xRange[1] - xRange[0])\n      .y(this._margin.top + topOffset + yRange[0] + (yRange[1] - yRange[0]) / 2)\n      .height(yRange[1] - yRange[0])\n      .config(this._backgroundConfig)\n      .render();\n\n    const annotationGroup = elem(\"g.d3plus-plot-annotations\", {parent, transition, enter: {transform}, update: {transform}}).node();\n    this._annotations.forEach(annotation => {\n      new shapes[annotation.shape]()\n        .config(annotation)\n        .config({\n          x: d => d.x2 ? x(d.x2, \"x2\") : x(d.x),\n          x0: this._discrete === \"x\" ? d => d.x2 ? x(d.x2, \"x2\") : x(d.x) : x(domains.x[0]),\n          x1: this._discrete === \"x\" ? null : d => d.x2 ? x(d.x2, \"x2\") : x(d.x),\n          y: d => d.y2 ? y(d.y2, \"y2\") : y(d.y),\n          y0: this._discrete === \"y\" ? d => d.y2 ? y(d.y2, \"y2\") : y(d.y) : y(domains.y[1]) - yOffset,\n          y1: this._discrete === \"y\" ? null : d => d.y2 ? y(d.y2, \"y2\") : y(d.y) - yOffset\n        })\n        .select(annotationGroup)\n        .render();\n    });\n\n    let yOffset = this._xAxis.barConfig()[\"stroke-width\"];\n    if (yOffset) yOffset /= 2;\n\n    const discrete = this._discrete || \"x\";\n\n    const shapeConfig = {\n      duration: this._duration,\n      label: d => this._drawLabel(d.data, d.i),\n      select: elem(\"g.d3plus-plot-shapes\", {parent, transition, enter: {transform}, update: {transform}}).node(),\n      x: d => d.x2 ? x(d.x2, \"x2\") : x(d.x),\n      x0: discrete === \"x\" ? d => d.x2 ? x(d.x2, \"x2\") : x(d.x) : x(typeof this._baseline === \"number\" ? this._baseline : domains.x[0]),\n      x1: discrete === \"x\" ? null : d => d.x2 ? x(d.x2, \"x2\") : x(d.x),\n      y: d => d.y2 ? y(d.y2, \"y2\") : y(d.y),\n      y0: discrete === \"y\" ? d => d.y2 ? y(d.y2, \"y2\") : y(d.y) : y(typeof this._baseline === \"number\" ? this._baseline : domains.y[1]) - yOffset,\n      y1: discrete === \"y\" ? null : d => d.y2 ? y(d.y2, \"y2\") : y(d.y) - yOffset\n    };\n\n    if (this._stacked) {\n      const scale = opp === \"x\" ? x : y;\n      shapeConfig[`${opp}`] = shapeConfig[`${opp}0`] = d => {\n        const dataIndex = stackKeys.indexOf(d.id),\n              discreteIndex = discreteKeys.indexOf(d.discrete);\n        return dataIndex >= 0 ? scale(stackData[dataIndex][discreteIndex][0]) : scale(domains[opp][opp === \"x\" ? 0 : 1]);\n      };\n      shapeConfig[`${opp}1`] = d => {\n        const dataIndex = stackKeys.indexOf(d.id),\n              discreteIndex = discreteKeys.indexOf(d.discrete);\n        return dataIndex >= 0 ? scale(stackData[dataIndex][discreteIndex][1]) : scale(domains[opp][opp === \"x\" ? 0 : 1]);\n      };\n    }\n\n    const events = Object.keys(this._on);\n    shapeData.forEach(d => {\n\n      const s = new shapes[d.key]().config(shapeConfig).data(d.values);\n\n      if (d.key === \"Bar\") {\n\n        let space;\n        const scale = this._discrete === \"x\" ? x : y;\n        const scaleType = this._discrete === \"x\" ? xScale : yScale;\n        const vals = this._discrete === \"x\" ? xDomain : yDomain;\n        const range = this._discrete === \"x\" ? xRange : yRange;\n        if (scaleType !== \"Point\" && vals.length === 2) {\n          space = (scale(d.values[this._discrete === \"x\" ? 0 : d.values.length - 1][this._discrete]) - scale(vals[0])) * 2;\n        }\n        else if (vals.length > 1) space = scale(vals[1]) - scale(vals[0]);\n        else space = range[range.length - 1] - range[0];\n        if (this._groupPadding < space) space -= this._groupPadding;\n\n        let barSize = space || 1;\n\n        const groups = nest()\n          .key(d => d[this._discrete])\n          .key(d => d.group)\n          .entries(d.values);\n\n        const ids = merge(groups.map(d => d.values.map(v => v.key)));\n        const uniqueIds = Array.from(new Set(ids));\n\n        if (max(groups.map(d => d.values.length)) === 1) {\n          s[this._discrete]((d, i) => shapeConfig[this._discrete](d, i));\n        }\n        else {\n\n          barSize = (barSize - this._barPadding * uniqueIds.length - 1) / uniqueIds.length;\n\n          const offset = space / 2 - barSize / 2;\n\n          const xMod = scales.scaleLinear()\n            .domain([0, uniqueIds.length - 1])\n            .range([-offset, offset]);\n\n          s[this._discrete]((d, i) => shapeConfig[this._discrete](d, i) + xMod(uniqueIds.indexOf(d.group)));\n\n        }\n\n        s.width(barSize);\n        s.height(barSize);\n\n      }\n      else if (d.key === \"Line\") {\n\n        s.duration(width * 1.5);\n\n        if (this._confidence) {\n          const areaConfig = Object.assign({}, shapeConfig);\n          const discrete = this._discrete || \"x\";\n          const key = discrete === \"x\" ? \"y\" : \"x\";\n          const scaleFunction = discrete === \"x\" ? y : x;\n          areaConfig[`${key}0`] = d => scaleFunction(this._confidence[0] ? d.lci : d[key]);\n          areaConfig[`${key}1`] = d => scaleFunction(this._confidence[1] ? d.hci : d[key]);\n\n          const area = new shapes.Area().config(areaConfig).data(d.values);\n          const confidenceConfig = Object.assign(this._shapeConfig, this._confidenceConfig);\n          area.config(configPrep.bind(this)(confidenceConfig, \"shape\", \"Area\")).render();\n          this._shapes.push(area);\n        }\n\n      }\n\n      const classEvents = events.filter(e => e.includes(`.${d.key}`)),\n            globalEvents = events.filter(e => !e.includes(\".\")),\n            shapeEvents = events.filter(e => e.includes(\".shape\"));\n      for (let e = 0; e < globalEvents.length; e++) s.on(globalEvents[e], d => this._on[globalEvents[e]](d.data, d.i));\n      for (let e = 0; e < shapeEvents.length; e++) s.on(shapeEvents[e], d => this._on[shapeEvents[e]](d.data, d.i));\n      for (let e = 0; e < classEvents.length; e++) s.on(classEvents[e], d => this._on[classEvents[e]](d.data, d.i));\n\n      const userConfig = configPrep.bind(this)(this._shapeConfig, \"shape\", d.key);\n      if (this._shapeConfig.duration === undefined) delete userConfig.duration;\n      s.config(userConfig).render();\n\n      this._shapes.push(s);\n\n    });\n\n    const dataShapes = shapeData.map(d => d.key);\n    if (this._confidence && dataShapes.includes(\"Line\")) dataShapes.push(\"Area\");\n    const exitShapes = this._previousShapes.filter(d => !dataShapes.includes(d));\n\n    exitShapes.forEach(shape => {\n      new shapes[shape]()\n        .config(shapeConfig)\n        .data([])\n        .render();\n    });\n\n    this._previousShapes = dataShapes;\n\n    return this;\n\n  }\n\n  /**\n      @memberof Plot\n      @desc Allows drawing custom shapes to be used as annotations in the provided x/y plot. This method accepts custom config objects for the [Shape](http://d3plus.org/docs/#Shape) class, either a single config object or an array of config objects. Each config object requires an additional parameter, the \"shape\", which denotes which [Shape](http://d3plus.org/docs/#Shape) sub-class to use ([Rect](http://d3plus.org/docs/#Rect), [Line](http://d3plus.org/docs/#Line), etc). Annotations will be drawn underneath the data to be displayed.\n      @param {Array|Object} *annotations* = []\n      @chainable\n  */\n  annotations(_) {\n    return arguments.length ? (this._annotations = _ instanceof Array ? _ : [_], this) : this._annotations;\n  }\n\n  /**\n       @memberof Plot\n       @desc A d3plus-shape configuration Object used for styling the background rectangle of the inner x/y plot (behind all of the shapes and gridlines).\n       @param {Object} [*value*]\n       @chainable\n   */\n  backgroundConfig(_) {\n    return arguments.length ? (this._backgroundConfig = assign(this._backgroundConfig, _), this) : this._backgroundConfig;\n  }\n\n  /**\n      @memberof Plot\n      @desc Sets the pixel space between each bar in a group of bars.\n      @param {Number} *value* = 0\n      @chainable\n  */\n  barPadding(_) {\n    return arguments.length ? (this._barPadding = _, this) : this._barPadding;\n  }\n\n  /**\n      @memberof Plot\n      @desc Sets the baseline for the x/y plot. If *value* is not specified, returns the current baseline.\n      @param {Number} *value*\n      @chainable\n  */\n  baseline(_) {\n    return arguments.length ? (this._baseline = _, this) : this._baseline;\n  }\n\n  /**\n       @memberof Plot\n       @desc Sets the confidence to the specified array of lower and upper bounds.\n       @param {String[]|Function[]} *value*\n       @chainable\n       @example <caption>Can be called with accessor functions or static keys:</caption>\n       var data = {id: \"alpha\", value: 10, lci: 9, hci: 11};\n       ...\n       // Accessor functions\n       .confidence([function(d) { return d.lci }, function(d) { return d.hci }])\n\n       // Or static keys\n       .confidence([\"lci\", \"hci\"])\n   */\n  confidence(_) {\n    if (arguments.length && _ instanceof Array) {\n      this._confidence = [];\n      const lower = _[0];\n      this._confidence[0] = typeof lower === \"function\" || !lower ? lower : accessor(lower);\n      const upper = _[1];\n      this._confidence[1] = typeof upper === \"function\" || !upper ? upper : accessor(upper);\n\n      return this;\n    }\n    else return this._confidence;\n  }\n\n  /**\n       @memberof Plot\n       @desc If *value* is specified, sets the config method for each shape rendered as a confidence interval and returns the current class instance.\n       @param {Object} [*value*]\n       @chainable\n   */\n  confidenceConfig(_) {\n    return arguments.length ? (this._confidenceConfig = assign(this._confidenceConfig, _), this) : this._confidenceConfig;\n  }\n\n  /**\n      @memberof Plot\n      @desc Sets the discrete axis to the specified string. If *value* is not specified, returns the current discrete axis.\n      @param {String} *value*\n      @chainable\n  */\n  discrete(_) {\n    return arguments.length ? (this._discrete = _, this) : this._discrete;\n  }\n\n  /**\n      @memberof Plot\n      @desc When the width or height of the chart is less than or equal to this pixel value, the discrete axis will not be shown. This helps produce slick sparklines. Set this value to `0` to disable the behavior entirely.\n      @param {Number} *value*\n      @chainable\n  */\n  discreteCutoff(_) {\n    return arguments.length ? (this._discreteCutoff = _, this) : this._discreteCutoff;\n  }\n\n  /**\n      @memberof Plot\n      @desc Sets the pixel space between groups of bars.\n      @param {Number} [*value* = 5]\n      @chainable\n  */\n  groupPadding(_) {\n    return arguments.length ? (this._groupPadding = _, this) : this._groupPadding;\n  }\n\n  /**\n      @memberof Plot\n      @desc A JavaScript [sort comparator function](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort) that receives each shape Class (ie. \"Circle\", \"Line\", etc) as it's comparator arguments. Shapes are drawn in groups based on their type, so you are defining the layering order for all shapes of said type.\n      @param {Function} *value*\n      @chainable\n  */\n  shapeSort(_) {\n    return arguments.length ? (this._shapeSort = _, this) : this._shapeSort;\n  }\n\n  /**\n      @memberof Plot\n      @desc Sets the size of bubbles to the given Number, data key, or function.\n      @param {Function|Number|String} *value* = 10\n      @chainable\n  */\n  size(_) {\n    return arguments.length ? (this._size = typeof _ === \"function\" || !_ ? _ : accessor(_), this) : this._size;\n  }\n\n  /**\n      @memberof Plot\n      @desc Sets the size scale maximum to the specified number.\n      @param {Number} *value* = 20\n      @chainable\n  */\n  sizeMax(_) {\n    return arguments.length ? (this._sizeMax = _, this) : this._sizeMax;\n  }\n\n  /**\n      @memberof Plot\n      @desc Sets the size scale minimum to the specified number.\n      @param {Number} *value* = 5\n      @chainable\n  */\n  sizeMin(_) {\n    return arguments.length ? (this._sizeMin = _, this) : this._sizeMin;\n  }\n\n  /**\n      @memberof Plot\n      @desc Sets the size scale to the specified string.\n      @param {String} *value* = \"sqrt\"\n      @chainable\n  */\n  sizeScale(_) {\n    return arguments.length ? (this._sizeScale = _, this) : this._sizeScale;\n  }\n\n  /**\n      @memberof Plot\n      @desc If *value* is specified, toggles shape stacking. If *value* is not specified, returns the current stack value.\n      @param {Boolean} *value* = false\n      @chainable\n  */\n  stacked(_) {\n    return arguments.length ? (this._stacked = _, this) : this._stacked;\n  }\n\n  /**\n      @memberof Plot\n      @desc Sets the stack offset. If *value* is not specified, returns the current stack offset function.\n      @param {Function|String} *value* = \"descending\"\n      @chainable\n  */\n  stackOffset(_) {\n    return arguments.length ? (this._stackOffset = typeof _ === \"function\" ? _ : d3Shape[`stackOffset${_.charAt(0).toUpperCase() + _.slice(1)}`], this) : this._stackOffset;\n  }\n\n  /**\n      @memberof Plot\n      @desc Sets the stack order. If *value* is not specified, returns the current stack order function.\n      @param {Function|String|Array} *value* = \"none\"\n      @chainable\n  */\n  stackOrder(_) {\n    if (arguments.length) {\n      if (typeof _ === \"string\") this._stackOrder = _ === \"ascending\" ? stackOrderAscending : _ === \"descending\" ? stackOrderDescending : d3Shape[`stackOrder${_.charAt(0).toUpperCase() + _.slice(1)}`];\n      else this._stackOrder = _;\n      return this;\n    }\n    else return this._stackOrder;\n  }\n\n  /**\n      @memberof Plot\n      @desc Sets the x accessor to the specified function or number. If *value* is not specified, returns the current x accessor.\n      @param {Function|Number} *value*\n      @chainable\n  */\n  x(_) {\n    if (arguments.length) {\n      if (typeof _ === \"function\") this._x = _;\n      else {\n        this._x = accessor(_);\n        if (!this._aggs[_] && this._discrete === \"x\") {\n          this._aggs[_] = a => {\n            const v = Array.from(new Set(a));\n            return v.length === 1 ? v[0] : v;\n          };\n        }\n      }\n      return this;\n    }\n    else return this._x;\n  }\n\n  /**\n       @memberof Plot\n       @desc Sets the x2 accessor to the specified function or number. If *value* is not specified, returns the current x2 accessor.\n       @param {Function|Number} *value*\n       @chainable\n   */\n  x2(_) {\n    if (arguments.length) {\n      if (typeof _ === \"function\") this._x2 = _;\n      else {\n        this._x2 = accessor(_);\n        if (!this._aggs[_] && this._discrete === \"x\") {\n          this._aggs[_] = a => {\n            const v = Array.from(new Set(a));\n            return v.length === 1 ? v[0] : v;\n          };\n        }\n      }\n      return this;\n    }\n    else return this._x2;\n  }\n\n  /**\n      @memberof Plot\n      @desc A pass-through to the underlying [Axis](http://d3plus.org/docs/#Axis) config used for the x-axis. Includes additional functionality where passing \"auto\" as the value for the [scale](http://d3plus.org/docs/#Axis.scale) method will determine if the scale should be \"linear\" or \"log\" based on the provided data.\n      @param {Object} *value*\n      @chainable\n  */\n  xConfig(_) {\n    return arguments.length ? (this._xConfig = assign(this._xConfig, _), this) : this._xConfig;\n  }\n\n  /**\n      @memberof Plot\n      @desc When the width of the chart is less than or equal to this pixel value, and the x-axis is not the discrete axis, it will not be shown. This helps produce slick sparklines. Set this value to `0` to disable the behavior entirely.\n      @param {Number} *value*\n      @chainable\n  */\n  xCutoff(_) {\n    return arguments.length ? (this._xCutoff = _, this) : this._xCutoff;\n  }\n\n  /**\n      @memberof Plot\n      @desc A pass-through to the underlying [Axis](http://d3plus.org/docs/#Axis) config used for the secondary x-axis. Includes additional functionality where passing \"auto\" as the value for the [scale](http://d3plus.org/docs/#Axis.scale) method will determine if the scale should be \"linear\" or \"log\" based on the provided data.\n      @param {Object} *value*\n      @chainable\n  */\n  x2Config(_) {\n    return arguments.length ? (this._x2Config = assign(this._x2Config, _), this) : this._x2Config;\n  }\n\n  /**\n      @memberof Plot\n      @desc Sets the x domain to the specified array. If *value* is not specified, returns the current x domain. Additionally, if either value of the array is undefined, it will be calculated from the data.\n      @param {Array} *value*\n      @chainable\n  */\n  xDomain(_) {\n    return arguments.length ? (this._xDomain = _, this) : this._xDomain;\n  }\n\n  /**\n       @memberof Plot\n       @desc Sets the x2 domain to the specified array. If *value* is not specified, returns the current x2 domain. Additionally, if either value of the array is undefined, it will be calculated from the data.\n       @param {Array} *value*\n       @chainable\n   */\n  x2Domain(_) {\n    return arguments.length ? (this._x2Domain = _, this) : this._x2Domain;\n  }\n\n  /**\n      @memberof Plot\n      @desc Defines a custom sorting comparitor function to be used for discrete x axes.\n      @param {Function} *value*\n      @chainable\n  */\n  xSort(_) {\n    return arguments.length ? (this._xSort = _, this) : this._xSort;\n  }\n\n  /**\n       @memberof Plot\n       @desc Defines a custom sorting comparitor function to be used for discrete x2 axes.\n       @param {Function} *value*\n       @chainable\n   */\n  x2Sort(_) {\n    return arguments.length ? (this._x2Sort = _, this) : this._x2Sort;\n  }\n\n  /**\n      @memberof Plot\n      @desc Sets the y accessor to the specified function or number. If *value* is not specified, returns the current y accessor.\n      @param {Function|Number} *value*\n      @chainable\n  */\n  y(_) {\n    if (arguments.length) {\n      if (typeof _ === \"function\") this._y = _;\n      else {\n        this._y = accessor(_);\n        if (!this._aggs[_] && this._discrete === \"y\") {\n          this._aggs[_] = a => {\n            const v = Array.from(new Set(a));\n            return v.length === 1 ? v[0] : v;\n          };\n        }\n      }\n      return this;\n    }\n    else return this._y;\n  }\n\n  /**\n       @memberof Plot\n       @desc Sets the y2 accessor to the specified function or number. If *value* is not specified, returns the current y2 accessor.\n       @param {Function|Number} *value*\n       @chainable\n   */\n  y2(_) {\n    if (arguments.length) {\n      if (typeof _ === \"function\") this._y2 = _;\n      else {\n        this._y2 = accessor(_);\n        if (!this._aggs[_] && this._discrete === \"y2\") {\n          this._aggs[_] = a => {\n            const v = Array.from(new Set(a));\n            return v.length === 1 ? v[0] : v;\n          };\n        }\n      }\n      return this;\n    }\n    else return this._y2;\n  }\n\n  /**\n      @memberof Plot\n      @desc A pass-through to the underlying [Axis](http://d3plus.org/docs/#Axis) config used for the y-axis. Includes additional functionality where passing \"auto\" as the value for the [scale](http://d3plus.org/docs/#Axis.scale) method will determine if the scale should be \"linear\" or \"log\" based on the provided data.\n\n*Note:* If a \"domain\" array is passed to the y-axis config, it will be reversed.\n      @param {Object} *value*\n      @chainable\n  */\n  yConfig(_) {\n    if (arguments.length) {\n      if (_.domain) _.domain = _.domain.slice().reverse();\n      this._yConfig = assign(this._yConfig, _);\n      return this;\n    }\n    return this._yConfig;\n  }\n\n  /**\n      @memberof Plot\n      @desc When the height of the chart is less than or equal to this pixel value, and the y-axis is not the discrete axis, it will not be shown. This helps produce slick sparklines. Set this value to `0` to disable the behavior entirely.\n      @param {Number} *value*\n      @chainable\n  */\n  yCutoff(_) {\n    return arguments.length ? (this._yCutoff = _, this) : this._yCutoff;\n  }\n\n  /**\n      @memberof Plot\n      @desc A pass-through to the underlying [Axis](http://d3plus.org/docs/#Axis) config used for the secondary y-axis. Includes additional functionality where passing \"auto\" as the value for the [scale](http://d3plus.org/docs/#Axis.scale) method will determine if the scale should be \"linear\" or \"log\" based on the provided data.\n      @param {Object} *value*\n      @chainable\n  */\n  y2Config(_) {\n    return arguments.length ? (this._y2Config = assign(this._y2Config, _), this) : this._y2Config;\n  }\n\n  /**\n      @memberof Plot\n      @desc Sets the y domain to the specified array. If *value* is not specified, returns the current y domain. Additionally, if either value of the array is undefined, it will be calculated from the data.\n      @param {Array} *value*\n      @chainable\n  */\n  yDomain(_) {\n    return arguments.length ? (this._yDomain = _, this) : this._yDomain;\n  }\n\n  /**\n       @memberof Plot\n       @desc Sets the y2 domain to the specified array. If *value* is not specified, returns the current y2 domain. Additionally, if either value of the array is undefined, it will be calculated from the data.\n       @param {Array} *value*\n       @chainable\n   */\n  y2Domain(_) {\n    return arguments.length ? (this._y2Domain = _, this) : this._y2Domain;\n  }\n\n  /**\n      @memberof Plot\n      @desc Defines a custom sorting comparitor function to be used for discrete y axes.\n      @param {Function} *value*\n      @chainable\n  */\n  ySort(_) {\n    return arguments.length ? (this._ySort = _, this) : this._ySort;\n  }\n\n  /**\n       @memberof Plot\n       @desc Defines a custom sorting comparitor function to be used for discrete y2 axes.\n       @param {Function} *value*\n       @chainable\n   */\n  y2Sort(_) {\n    return arguments.length ? (this._y2Sort = _, this) : this._y2Sort;\n  }\n\n}\n","import {constant} from \"d3plus-common\";\n\nimport {default as Plot} from \"./Plot\";\n\n/**\n    @class AreaPlot\n    @extends Plot\n    @desc Creates an area plot based on an array of data.\n    @example <caption>the equivalent of calling:</caption>\nnew d3plus.Plot()\n  .baseline(0)\n  .discrete(\"x\")\n  .shape(\"Area\")\n*/\nexport default class AreaPlot extends Plot {\n\n  /**\n      @memberof AreaPlot\n      @desc Invoked when creating a new class instance, and overrides any default parameters inherited from Plot.\n      @private\n  */\n  constructor() {\n\n    super();\n    this._baseline = 0;\n    this._discrete = \"x\";\n    this._shape = constant(\"Area\");\n    this.x(\"x\");\n\n  }\n\n}\n","import {constant} from \"d3plus-common\";\n\nimport {default as Plot} from \"./Plot\";\n\n/**\n    @class BarChart\n    @extends Plot\n    @desc Creates a bar chart based on an array of data.\n    @example <caption>the equivalent of calling:</caption>\nnew d3plus.Plot()\n  .baseline(0)\n  .discrete(\"x\")\n  .shape(\"Bar\")\n*/\nexport default class BarChart extends Plot {\n\n  /**\n      @memberof BarChart\n      @desc Invoked when creating a new class instance, and overrides any default parameters inherited from Plot.\n      @private\n  */\n  constructor() {\n\n    super();\n    this._baseline = 0;\n    this._discrete = \"x\";\n    this._shape = constant(\"Bar\");\n    this.x(\"x\");\n\n  }\n\n}\n","import {assign, constant} from \"d3plus-common\";\n\nimport {default as Plot} from \"./Plot\";\n\n/**\n    @class BoxWhisker\n    @extends Plot\n    @desc Creates a simple box and whisker based on an array of data.\n    @example <caption>the equivalent of calling:</caption>\nnew d3plus.Plot()\n  .discrete(\"x\")\n  .shape(\"Box\")\n*/\nexport default class BoxWhisker extends Plot {\n\n  /**\n      @memberof BoxWhisker\n      @desc Invoked when creating a new class instance, and overrides any default parameters inherited from Plot.\n      @private\n  */\n  constructor() {\n\n    super();\n    this._discrete = \"x\";\n    this._shape = constant(\"Box\");\n    this.x(\"x\");\n\n    this._tooltipConfig = assign(this._tooltipConfig, {\n      title: (d, i) => {\n        if (!d) return \"\";\n        while (d.__d3plus__ && d.data) {\n          d = d.data;\n          i = d.i;\n        }\n        if (this._label) return this._label(d, i);\n        const l = this._ids(d, i).slice(0, this._drawDepth);\n        return l[l.length - 1];\n      }\n    });\n\n  }\n\n}\n","import {constant} from \"d3plus-common\";\n\nimport {default as Plot} from \"./Plot\";\n\n/**\n    @class BumpChart\n    @extends Plot\n    @desc Creates a bump chart based on an array of data.\n    @example <caption>the equivalent of calling:</caption>\nnew d3plus.Plot()\n  .discrete(\"x\")\n  .shape(\"Line\")\n  .x(\"x\")\n  .y2(d => this._y(d))\n  .yConfig({\n    tickFormat: val => {\n      const data = this._formattedData;\n      const xDomain = this._xDomain;\n      const startData = data.filter(d => d.x === xDomain[0]);\n      const d = startData.find(d => d.y === val);\n      return this._drawLabel(d, d.i);\n     }\n   })\n  .y2Config({\n    tickFormat: val => {\n      const data = this._formattedData;\n      const xDomain = this._xDomain;\n      const endData = data.filter(d => d.x === xDomain[xDomain.length - 1]);\n      const d = endData.find(d => d.y === val);\n      return this._drawLabel(d, d.i);\n     }\n   })\n  .ySort((a, b) => b.y - a.y)\n  .y2Sort((a, b) => b.y - a.y)\n*/\nexport default class BumpChart extends Plot {\n\n  /**\n      @memberof BumpChart\n      @desc Invoked when creating a new class instance, and overrides any default parameters inherited from Plot.\n      @private\n  */\n  constructor() {\n\n    super();\n    this._discrete = \"x\";\n    this._shape = constant(\"Line\");\n    this.x(\"x\");\n    this.y2(d => this._y(d));\n\n    this.yConfig({\n      tickFormat: val => {\n        const data = this._formattedData;\n        const xMin = data[0].x instanceof Date ? data[0].x.getTime() : data[0].x;\n        const startData = data.filter(d => (d.x instanceof Date ? d.x.getTime() : d.x) === xMin);\n        const d = startData.find(d => d.y === val);\n        return d ? this._drawLabel(d, d.i) : \"\";\n      }\n    });\n    this.y2Config({\n      tickFormat: val => {\n        const data = this._formattedData;\n        const xMax = data[data.length - 1].x instanceof Date ? data[data.length - 1].x.getTime() : data[data.length - 1].x;\n        const endData = data.filter(d => (d.x instanceof Date ? d.x.getTime() : d.x) === xMax);\n        const d = endData.find(d => d.y === val);\n        return d ? this._drawLabel(d, d.i) : \"\";\n      }\n    });\n    this.ySort((a, b) => this._y(b) - this._y(a));\n    this.y2Sort((a, b) => this._y(b) - this._y(a));\n  }\n\n}\n","import {constant} from \"d3plus-common\";\n\nimport {default as Plot} from \"./Plot\";\n\n/**\n    @class LinePlot\n    @extends Plot\n    @desc Creates a line plot based on an array of data.\n    @example <caption>the equivalent of calling:</caption>\nnew d3plus.Plot()\n  .discrete(\"x\")\n  .shape(\"Line\")\n*/\nexport default class LinePlot extends Plot {\n\n  /**\n      @memberof LinePlot\n      @desc Invoked when creating a new class instance, and overrides any default parameters inherited from Plot.\n      @private\n  */\n  constructor() {\n\n    super();\n    this._shape = constant(\"Line\");\n\n  }\n\n}\n","/**\n    @external Viz\n    @see https://github.com/d3plus/d3plus-viz#Viz\n*/\n\nimport {min, max, sum} from \"d3-array\";\nimport {nest} from \"d3-collection\";\nimport {mouse} from \"d3-selection\";\nimport {accessor, assign, configPrep, constant, elem, merge} from \"d3plus-common\";\nimport {Circle, Path, Rect} from \"d3plus-shape\";\nimport {Viz} from \"d3plus-viz\";\n\nconst tau = Math.PI * 2;\n\n/**\n    @class Radar\n    @extends Viz\n    @desc Creates a radar visualization based on an array of data.\n*/\nexport default class Radar extends Viz {\n\n  /**\n      @memberof Radar\n      @desc Invoked when creating a new class instance, and overrides any default parameters inherited from Viz.\n      @private\n  */\n  constructor() {\n    super();\n\n    this._axisConfig = {\n      shapeConfig: {\n        fill: constant(\"none\"),\n        labelConfig: {\n          fontColor: \"#000\",\n          padding: 0,\n          textAnchor: (d, i, x) => x.textAnchor,\n          verticalAlign: \"middle\"\n        },\n        stroke: \"#ccc\",\n        strokeWidth: constant(1)\n      }\n    };\n    this._discrete = \"metric\";\n    this._levels = 6;\n    this._metric = accessor(\"metric\");\n    this._outerPadding = 100;\n    this._shape = constant(\"Path\");\n    this._value = accessor(\"value\");\n  }\n\n  /**\n      Extends the draw behavior of the abstract Viz class.\n      @private\n  */\n  _draw(callback) {\n    super._draw(callback);\n    const height = this._height - this._margin.top - this._margin.bottom,\n          width = this._width - this._margin.left - this._margin.right;\n\n    const radius = min([height, width]) / 2 - this._outerPadding,\n          transform = `translate(${width / 2}, ${height / 2})`;\n\n    const nestedAxisData = nest()\n        .key(this._metric)\n        .entries(this._filteredData),\n          nestedGroupData = nest()\n        .key(this._id)\n        .key(this._metric)\n        .entries(this._filteredData);\n\n    const maxValue = max(nestedGroupData.map(h => h.values.map(d => sum(d.values, (x, i) => this._value(x, i)))).flat());\n\n    const circularAxis = Array.from(Array(this._levels).keys()).map(d => ({\n      id: d,\n      r: radius * ((d + 1) / this._levels)\n    }));\n\n    const circleConfig = configPrep.bind(this)(this._axisConfig.shapeConfig, \"shape\", \"Circle\");\n    delete circleConfig.label;\n\n    new Circle()\n      .data(circularAxis)\n      .select(\n        elem(\"g.d3plus-Radar-radial-circles\", {\n          parent: this._select,\n          enter: {transform},\n          update: {transform}\n        }).node()\n      )\n      .config(circleConfig)\n      .render();\n\n    const totalAxis = nestedAxisData.length;\n    const polarAxis = nestedAxisData\n      .map((d, i) => {\n        const width = this._outerPadding;\n        const fontSize =\n          this._shapeConfig.labelConfig.fontSize &&\n            this._shapeConfig.labelConfig.fontSize(d, i) ||\n          11;\n\n        const lineHeight = fontSize * 1.4;\n        const height = lineHeight * 2;\n        const padding = 10,\n              quadrant = parseInt(360 - 360 / totalAxis * i / 90, 10) % 4 + 1,\n              radians = tau / totalAxis * i;\n\n        let angle = 360 / totalAxis * i;\n\n        let textAnchor = \"start\";\n        let x = padding;\n\n        if (quadrant === 2 || quadrant === 3) {\n          x = -width - padding;\n          textAnchor = \"end\";\n          angle += 180;\n        }\n\n        const labelBounds = {\n          x,\n          y: -height / 2,\n          width,\n          height\n        };\n\n        return {\n          __d3plus__: true,\n          data: merge(d.values),\n          i,\n          id: d.key,\n          angle,\n          textAnchor,\n          labelBounds,\n          rotateAnchor: [-x, height / 2],\n          x: radius * Math.cos(radians),\n          y: radius * Math.sin(radians)\n        };\n      })\n      .sort((a, b) => a.key - b.key);\n\n    new Rect()\n      .data(polarAxis)\n      .rotate(d => d.angle || 0)\n      .width(0)\n      .height(0)\n      .x(d => d.x)\n      .y(d => d.y)\n      .label(d => d.id)\n      .labelBounds(d => d.labelBounds)\n      .labelConfig(this._axisConfig.shapeConfig.labelConfig)\n      .select(\n        elem(\"g.d3plus-Radar-text\", {\n          parent: this._select,\n          enter: {transform},\n          update: {transform}\n        }).node()\n      )\n      .render();\n\n    new Path()\n      .data(polarAxis)\n      .d(d => `M${0},${0} ${-d.x},${-d.y}`)\n      .select(\n        elem(\"g.d3plus-Radar-axis\", {\n          parent: this._select,\n          enter: {transform},\n          update: {transform}\n        }).node()\n      )\n      .config(configPrep.bind(this)(this._axisConfig.shapeConfig, \"shape\", \"Path\"))\n      .render();\n\n    const groupData = nestedGroupData.map(h => {\n\n      const q = h.values.map((d, i) => {\n        const value = sum(d.values, (x, i) => this._value(x, i));\n        const r = value / maxValue * radius,\n              radians = tau / totalAxis * i;\n        return {\n          x: r * Math.cos(radians),\n          y: r * Math.sin(radians)\n        };\n      });\n\n      const d = `M ${q[0].x} ${q[0].y} ${q\n        .map(l => `L ${l.x} ${l.y}`)\n        .join(\" \")} L ${q[0].x} ${q[0].y}`;\n\n      return {\n        arr: h.values.map(d => merge(d.values)),\n        id: h.key,\n        points: q,\n        d,\n        __d3plus__: true,\n        data: merge(h.values.map(d => merge(d.values)))\n      };\n\n    });\n\n    const pathConfig = configPrep.bind(this)(this._shapeConfig, \"shape\", \"Path\");\n    const events = Object.keys(pathConfig.on);\n    pathConfig.on = {};\n    for (let e = 0; e < events.length; e++) {\n      const event = events[e];\n      pathConfig.on[event] = (d, i) => {\n        const x = d.points.map(p => p.x + width / 2);\n        const y = d.points.map(p => p.y + height / 2);\n        const cursor = mouse(this._select.node());\n        const xDist = x.map(p => Math.abs(p - cursor[0]));\n        const yDist = y.map(p => Math.abs(p - cursor[1]));\n        const dists = xDist.map((d, i) => d + yDist[i]);\n        this._on[event].bind(this)(d.arr[dists.indexOf(min(dists))], i);\n      };\n    }\n\n    this._shapes.push(\n      new Path()\n        .data(groupData)\n        .d(d => d.d)\n        .select(\n          elem(\"g.d3plus-Radar-items\", {\n            parent: this._select,\n            enter: {transform},\n            update: {transform}\n          }).node()\n        )\n        .config(pathConfig)\n        .render()\n    );\n\n    return this;\n  }\n\n  /**\n      @memberof Radar\n      @desc Sets the config method used for the radial spokes, circles, and labels.\n      @param {Object} *value*\n      @chainable\n  */\n  axisConfig(_) {\n    return arguments.length ? (this._axisConfig = assign(this._axisConfig, _), this) : this._axisConfig;\n  }\n\n  /**\n      @memberof Radar\n      @desc Defines the value used as axis. If *value* is specified, sets the accessor to the specified metric function. If *value* is not specified, returns the current metric accessor.\n      @param {Function|String} *value*\n      @chainable\n  */\n  metric(_) {\n    return arguments.length ? (this._metric = typeof _ === \"function\" ? _ : accessor(_), this) : this._metric;\n  }\n\n  /**\n      @memberof Radar\n      @desc Determines how much pixel spaces to give the outer labels.\n      @param {Number} [*value* = 100]\n      @chainable\n  */\n  outerPadding(_) {\n    return arguments.length ? (this._outerPadding = _, this) : this._outerPadding;\n  }\n\n  /**\n      @memberof Radar\n      @desc If *value* is specified, sets the value accessor to the specified function or number and returns the current class instance. If *value* is not specified, returns the current value accessor.\n      @param {Function|String} *value*\n      @example\nfunction value(d) {\n  return d.value;\n}\n  */\n  value(_) {\n    return arguments.length ? (this._value = typeof _ === \"function\" ? _ : accessor(_), this) : this._value;\n  }\n\n}\n","import {default as AreaPlot} from \"./AreaPlot\";\n\n/**\n    @class StackedArea\n    @extends Area\n    @desc Creates a stacked area plot based on an array of data.\n    @example <caption>the equivalent of calling:</caption>\nnew d3plus.AreaPlot()\n  .stacked(true)\n*/\nexport default class StackedArea extends AreaPlot {\n\n  /**\n      @memberof StackedArea\n      @desc Invoked when creating a new class instance, and overrides any default parameters inherited from Plot.\n      @private\n  */\n  constructor() {\n\n    super();\n    this._stacked = true;\n\n  }\n\n}\n"],"names":["scale","data","discrete","padding","closest","map","d","reduce","acc","curr","i","arr","prev","domain","slice","reverse","Date","x","y","x2","y2","buffer","xKey","yKey","oppScale","_discrete","oppDomain","isDiscreteX","negVals","posVals","_stacked","groupedData","nest","key","group","entries","values","sum","filter","bMax","max","invert","bMin","min","discreteBuffer","axis","value","size","range","index","needsBuffer","tempAxis","copy","diverging","r","percentScale","scaleLog","Math","abs","leftPercentage","zero","outside","tempRange","pixelValue","decrease","log","log10","mod","pow","v","yScale","xScale","config","xD","yD","xR","yR","forEach","s","numericBuffer","vals","b","w","width","h","height","defaultSize","_sizeScaleD3","_size","stackOrderAscending","series","sums","stackSum","keys","split","d3Shape","sort","a","localeCompare","stackOrderDescending","n","length","stackOffsetDiverging","order","dy","yn","yp","m","j","Plot","_annotations","_backgroundConfig","duration","fill","_barPadding","_buffer","Bar","BarBuffer","Box","BoxBuffer","Circle","CircleBuffer","Line","LineBuffer","Rect","RectBuffer","_confidenceConfig","fillOpacity","constant","_discreteCutoff","_groupPadding","_previousShapes","_shape","_shapeConfig","assign","Area","label","_drawLabel","labelConfig","fontResize","ariaLabel","ariaLabelStr","nested","_x","undefined","_y","_x2","_y2","textAnchor","verticalAlign","bind","stroke","colorAssign","_id","strokeWidth","_shapeOrder","_shapeSort","indexOf","_sizeMax","_sizeMin","_sizeScale","_stackOffset","_stackOrder","_timelineConfig","brushing","accessor","_xAxis","AxisBottom","align","_xTest","gridSize","_xConfig","_xCutoff","_x2Axis","AxisTop","_x2Test","_x2Config","_yAxis","AxisLeft","_yTest","_yConfig","gridConfig","id","_yCutoff","_y2Axis","AxisRight","_y2Test","_y2Config","callback","_filteredData","stackGroup","_groupBy","_ids","join","__d3plus__","hci","_confidence","_drawDepth","lci","shape","_formattedData","rExtent","extent","scales","charAt","toUpperCase","x2Exists","some","y2Exists","_height","_margin","top","bottom","opp","opp2","opps","parent","_select","transition","_transition","_width","left","right","x2Time","_time","xTime","y2Time","yTime","date","discreteKeys","domains","stackData","stackKeys","groupValues","obj","dd","a1","b1","Array","from","Set","g","ids","k","includes","fillerPoint","push","offset","p","xData","concat","x2Data","yData","y2Data","_xSort","_x2Sort","_ySort","_y2Sort","xDomain","_xDomain","x2Domain","_x2Domain","x2Scale","yDomain","_yDomain","y2Domain","_y2Domain","y2Scale","_baseline","shapeData","autoScale","fallback","userScale","deviation","mean","yConfigScale","toLowerCase","y2ConfigScale","xConfigScale","x2ConfigScale","res","res2","defaultConfig","barConfig","labels","title","tickSize","defaultX2Config","defaultY2Config","showX","showY","yC","locale","_locale","scalePadding","shapeConfig","labelBounds","rotate","yTicks","labelRotation","testGroup","elem","enter","opacity","x2Ticks","xTicks","y2Ticks","maxSize","select","node","ticks","render","yBounds","outerBounds","yWidth","y2Bounds","y2Width","xC","xTestRange","_getRange","x2TestRange","x2Bounds","x2Height","xOffsetLeft","topOffset","fontSize","xOffsetRight","xBounds","xHeight","_padding","horizontalMargin","verticalMargin","yRange","xRange","rectGroup","transform","x2Transform","xGroup","update","x2Group","xTrans","yTransform","yGroup","y2Transform","y2Group","_getPosition","shapes","annotationGroup","annotation","x0","x1","y0","yOffset","y1","_duration","dataIndex","discreteIndex","events","Object","_on","space","scaleType","barSize","groups","merge","uniqueIds","xMod","areaConfig","scaleFunction","area","confidenceConfig","configPrep","_shapes","classEvents","e","globalEvents","shapeEvents","on","userConfig","dataShapes","exitShapes","_","arguments","lower","upper","_aggs","Viz","AreaPlot","BarChart","BoxWhisker","_tooltipConfig","_label","l","BumpChart","yConfig","tickFormat","val","xMin","getTime","startData","find","y2Config","xMax","endData","ySort","y2Sort","LinePlot","tau","PI","Radar","_axisConfig","fontColor","_levels","_metric","_outerPadding","_value","radius","nestedAxisData","nestedGroupData","maxValue","flat","circularAxis","circleConfig","totalAxis","polarAxis","lineHeight","quadrant","parseInt","radians","angle","rotateAnchor","cos","sin","Path","groupData","q","points","pathConfig","event","cursor","mouse","xDist","yDist","dists","StackedArea"],"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"}