{"version":3,"file":"d3plus-plot.js","sources":["../src/buffers/discreteBuffer.js","../src/buffers/Bar.js","../src/buffers/Box.js","../src/buffers/numericBuffer.js","../src/buffers/Circle.js","../src/buffers/Line.js","../src/buffers/Rect.js","../src/Plot.js","../src/AreaPlot.js","../src/BarChart.js","../src/BoxWhisker.js","../src/BumpChart.js","../src/LinePlot.js","../src/Radar.js","../src/StackedArea.js"],"sourcesContent":["/**\n * Adds left/right padding to a point or time scale.\n * @private\n */\nexport default (scale, data, discrete) => {\n\n  if (scale.padding) scale.padding(0.5);\n  else {\n    const closest = data.map(d => d[discrete]).reduce((acc, curr, i, arr) => {\n      if (!i) return acc;\n      const prev = arr[i - 1];\n      if (!acc || curr - prev < acc) return curr - prev;\n      else return acc;\n    }, 0);\n    const domain = scale.domain().slice();\n    if (discrete === \"y\") domain.reverse();\n    domain[0] = new Date(+domain[0] - closest / 2);\n    domain[1] = new Date(+domain[1] + closest / 2);\n    if (discrete === \"y\") domain.reverse();\n    scale.domain(domain);\n  }\n\n};\n","import {max, min, sum} from \"d3-array\";\nimport {nest} from \"d3-collection\";\nimport discreteBuffer from \"./discreteBuffer\";\n\n/**\n    Adds a buffer to either side of the non-discrete axis.\n    @param {Array} data\n    @param {D3Scale} x\n    @param {D3Scale} y\n    @param {Object} [config]\n    @param {Number} [buffer = 10]\n    @private\n*/\nexport default function({data, x, y, x2, y2, buffer = 10}) {\n  const xKey = x2 ? \"x2\" : \"x\";\n  const yKey = y2 ? \"y2\" : \"y\";\n\n  const oppScale = this._discrete === \"x\" ? y : x;\n\n  const oppDomain = oppScale.domain().slice();\n\n  const isDiscreteX = this._discrete === \"x\";\n\n  if (isDiscreteX) oppDomain.reverse();\n\n  let negVals, posVals;\n  if (this._stacked) {\n    const groupedData = nest()\n      .key(d => `${d[this._discrete]}_${d.group}`)\n      .entries(data)\n      .map(d => d.values.map(x => x[isDiscreteX ? yKey : xKey]));\n    posVals = groupedData.map(arr => sum(arr.filter(d => d > 0)));\n    negVals = groupedData.map(arr => sum(arr.filter(d => d < 0)));\n  }\n  else {\n    posVals = data.map(d => d[isDiscreteX ? yKey : xKey]);\n    negVals = posVals;\n  }\n\n  let bMax = oppScale(max(posVals));\n  if (isDiscreteX ? bMax < oppScale(0) : bMax > oppScale(0)) bMax += isDiscreteX ? -buffer : buffer;\n  bMax = oppScale.invert(bMax);\n\n  let bMin = oppScale(min(negVals));\n  if (isDiscreteX ? bMin > oppScale(0) : bMin < oppScale(0)) bMin += isDiscreteX ? buffer : -buffer;\n  bMin = oppScale.invert(bMin);\n\n  if (bMax > oppDomain[1]) oppDomain[1] = bMax;\n  if (bMin < oppDomain[0]) oppDomain[0] = bMin;\n\n  if (isDiscreteX) oppDomain.reverse();\n\n  oppScale.domain(oppDomain);\n\n  discreteBuffer(isDiscreteX ? x : y, data, this._discrete);\n\n  return [x, y];\n\n}\n","import {max, min, sum} from \"d3-array\";\nimport {nest} from \"d3-collection\";\nimport discreteBuffer from \"./discreteBuffer\";\n\n/**\n    Adds a buffer to either side of the non-discrete axis.\n    @param {Array} data\n    @param {D3Scale} x\n    @param {D3Scale} y\n    @param {Object} [config]\n    @param {Number} [buffer = 10]\n    @private\n*/\nexport default function({data, x, y, x2, y2, buffer = 10}) {\n  const xKey = x2 ? \"x2\" : \"x\";\n  const yKey = y2 ? \"y2\" : \"y\";\n\n  const oppScale = this._discrete === \"x\" ? y : x;\n\n  const oppDomain = oppScale.domain().slice();\n\n  const isDiscreteX = this._discrete === \"x\";\n\n  if (isDiscreteX) oppDomain.reverse();\n\n  let negVals, posVals;\n  if (this._stacked) {\n    const groupedData = nest()\n      .key(d => d[this._discrete])\n      .entries(data)\n      .map(d => d.values.map(x => x[isDiscreteX ? yKey : xKey]));\n    posVals = groupedData.map(arr => sum(arr.filter(d => d > 0)));\n    negVals = groupedData.map(arr => sum(arr.filter(d => d < 0)));\n  }\n  else {\n    posVals = data.map(d => d[isDiscreteX ? yKey : xKey]);\n    negVals = posVals;\n  }\n\n  let bMax = oppScale(max(posVals));\n  bMax += isDiscreteX ? -buffer : buffer;\n  bMax = oppScale.invert(bMax);\n\n  let bMin = oppScale(min(negVals));\n  bMin += isDiscreteX ? buffer : -buffer;\n  bMin = oppScale.invert(bMin);\n\n  if (bMax > oppDomain[1]) oppDomain[1] = bMax;\n  if (bMin < oppDomain[0]) oppDomain[0] = bMin;\n\n  if (isDiscreteX) oppDomain.reverse();\n\n  oppScale.domain(oppDomain);\n\n  discreteBuffer(isDiscreteX ? x : y, data, this._discrete);\n\n  return [x, y];\n\n}\n","import {scaleLog} from \"d3-scale\";\n\n/** */\nexport default function(axis, scale, value, size, range, domain, index, invert) {\n  // console.log(\"\\n\");\n  // console.log(invert ? \"Y Axis\" : \"X Axis\");\n  // console.log(\"Index:\", index);\n  // console.log(\"Range\", range);\n  if (invert) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  const needsBuffer = () => {\n    let tempAxis = axis.copy();\n    let diverging = false;\n    if (scale === \"log\") {\n      let d = axis.domain().slice(),\n          r = axis.range().slice();\n      if (invert) {\n        d = d.reverse();\n        r = r.reverse();\n      }\n      diverging = d[0] * d[1] < 0;\n      if (diverging) {\n        const percentScale = scaleLog().domain([1, Math.abs(d[index])]).range([0, 1]);\n        const leftPercentage = percentScale(Math.abs(d[index ? 0 : 1]));\n        const zero = leftPercentage / (leftPercentage + 1) * (r[1] - r[0]);\n        d = (index === 0 ? [d[0], 1] : [1, d[1]]).map(Math.abs);\n        r = index === 0 ? [r[0], r[0] + zero] : [r[0] + zero, r[1]];\n      }\n      tempAxis = scaleLog()\n        .domain(d)\n        .range(r);\n    }\n\n    let outside = false;\n    const tempRange = tempAxis.range();\n    let pixelValue;\n    if (scale === \"log\") {\n      pixelValue = !diverging || value < 0 && !index || value > 0 && index ? tempAxis(Math.abs(value)) : tempRange[value < 0 ? 0 : 1];\n    }\n    else pixelValue = tempAxis(value);\n\n    if (invert) {\n      if (index === 0) outside = pixelValue + size > tempRange[index];\n      else if (index === 1) outside = pixelValue - size < tempRange[index];\n    }\n    else {\n      if (index === 0) outside = pixelValue - size < tempRange[index];\n      else if (index === 1) outside = pixelValue + size > tempRange[index];\n    }\n    // console.log(\"temp\", pixelValue, size, tempAxis.domain(), tempRange);\n    return outside;\n\n  };\n\n  if (axis.invert && needsBuffer()) {\n    if (scale === \"log\") {\n      let decrease = index === 0 && domain[0] > 0 || index === 1 && domain[1] < 0;\n      let log = Math[decrease ? \"ceil\" : \"floor\"](Math.log10(Math.abs(domain[index])));\n      // console.log(\"Log start:\", log, decrease);\n      while (needsBuffer() && log < 20) {\n        log = decrease ? log - 1 : log + 1;\n        let mod = domain[index] < 0 ? -1 : 1;\n        if (log < 0) {\n          log = 1;\n          decrease = !decrease;\n          mod = !mod;\n        }\n        domain[index] = Math.pow(10, log) * mod;\n        axis.domain(invert ? domain.slice().reverse() : domain);\n        // console.log(\"change!\", domain);\n      }\n    }\n    else if (index === 0) {\n      const v = axis.invert(axis(value) + size * (invert ? 1 : -1));\n      // console.log(\"value\", v, domain);\n      if (v < domain[index]) {\n        domain[index] = v;\n        axis.domain(invert ? domain.slice().reverse() : domain);\n      }\n    }\n    else if (index === 1) {\n      const v = axis.invert(axis(value) + size * (invert ? -1 : 1));\n      if (v > domain[index]) {\n        domain[index] = v;\n        axis.domain(invert ? domain.slice().reverse() : domain);\n      }\n    }\n  }\n  return invert ? domain.reverse() : domain;\n}\n","import discreteBuffer from \"./discreteBuffer\";\nimport numericBuffer from \"./numericBuffer\";\n\n/**\n    Adds a buffer to either side of the non-discrete axis.\n    @param {Array} data\n    @param {D3Scale} x\n    @param {D3Scale} y\n    @param {Object} [config]\n    @param {Number} [buffer] Defaults to the radius of the largest Circle.\n    @private\n*/\nexport default function({data, x, y, x2, y2, yScale, xScale, config, buffer}) {\n\n  x = x.copy();\n  y = y.copy();\n\n  const xKey = x2 ? \"x2\" : \"x\";\n  const yKey = y2 ? \"y2\" : \"y\";\n\n  let xD = x.domain().slice(),\n      yD = y.domain().slice();\n\n  const xR = x.range(),\n        yR = y.range();\n\n  if (!x.invert && x.padding) discreteBuffer(x, data, this._discrete);\n  if (!y.invert && y.padding) discreteBuffer(y, data, this._discrete);\n\n  if (x.invert || y.invert) {\n\n    data.forEach(d => {\n\n      const s = buffer ? buffer : config.r(d.data, d.i) * 2;\n\n      if (x.invert) {\n        xD = numericBuffer(x, xScale, d[xKey], s, xR, xD, 0, false);\n        xD = numericBuffer(x, xScale, d[xKey], s, xR, xD, 1, false);\n      }\n\n      if (y.invert) {\n        yD = numericBuffer(y, yScale, d[yKey], s, yR, yD, 0, true);\n        yD = numericBuffer(y, yScale, d[yKey], s, yR, yD, 1, true);\n      }\n\n    });\n\n  }\n\n  return [x, y];\n\n}\n","import {max} from \"d3-array\";\n\n/**\n    Adds a buffer to either side of the non-discrete axis.\n    @param {Array} data\n    @param {D3Scale} x\n    @param {D3Scale} y\n    @param {Object} [config]\n    @param {Number} [buffer] Defaults to the radius of the largest Circle.\n    @private\n*/\nexport default function({data, x, y, x2, y2}) {\n  const xKey = x2 ? \"x2\" : \"x\";\n  const yKey = y2 ? \"y2\" : \"y\";\n\n  const s = this._discrete === \"x\" ? y : x;\n\n  const d = s.domain().slice();\n\n  if (this._discrete === \"x\") d.reverse();\n\n  const vals = data.map(d => d[this._discrete === \"x\" ? yKey : xKey]);\n  const b = s.invert(s(max(vals)) + (this._discrete === \"x\" ? -10 : 10));\n\n  if (b > d[1]) d[1] = b;\n\n  if (this._discrete === \"x\") d.reverse();\n\n  s.domain(d);\n\n  return [x, y];\n\n}\n","import discreteBuffer from \"./discreteBuffer\";\nimport numericBuffer from \"./numericBuffer\";\n\n/**\n    Adds a buffer to either side of the non-discrete axis.\n    @param {Array} data\n    @param {D3Scale} x\n    @param {D3Scale} y\n    @param {Object} [config]\n    @param {Number} [buffer] Defaults to the width/height of the largest Rect.\n    @private\n*/\nexport default function({data, x, y, x2, y2, yScale, xScale, config}) {\n\n  x = x.copy();\n  y = y.copy();\n\n  const xKey = x2 ? \"x2\" : \"x\";\n  const yKey = y2 ? \"y2\" : \"y\";\n\n  let xD = x.domain().slice(),\n      yD = y.domain().slice();\n\n  const xR = x.range(),\n        yR = y.range();\n\n  if (!x.invert && x.padding) discreteBuffer(x, data, this._discrete);\n  if (!y.invert && y.padding) discreteBuffer(y, data, this._discrete);\n\n  if (x.invert || y.invert) {\n\n    data.forEach(d => {\n\n      if (x.invert) {\n        const w = config.width(d.data, d.i);\n        xD = numericBuffer(x, xScale, d[xKey], w, xR, xD, 0, false);\n        xD = numericBuffer(x, xScale, d[xKey], w, xR, xD, 1, false);\n      }\n\n      if (y.invert) {\n        const h = config.height(d.data, d.i);\n        yD = numericBuffer(y, yScale, d[yKey], h, yR, yD, 0, true);\n        yD = numericBuffer(y, yScale, d[yKey], h, yR, yD, 1, true);\n      }\n\n    });\n\n  }\n\n  return [x, y];\n\n}\n\n","/* eslint no-cond-assign: 0 */\n\nimport {deviation, extent, max, mean, merge, min, range, sum} from \"d3-array\";\nimport {nest} from \"d3-collection\";\nimport * as scales from \"d3-scale\";\nimport * as d3Shape from \"d3-shape\";\n\nimport {AxisBottom, AxisLeft, AxisRight, AxisTop, date} from \"d3plus-axis\";\nimport {colorAssign, colorLegible} from \"d3plus-color\";\nimport {accessor, assign, configPrep, constant, elem} from \"d3plus-common\";\nimport * as shapes from \"d3plus-shape\";\nimport {textWidth, TextBox} from \"d3plus-text\";\nconst testLineShape = new shapes.Line();\nconst testTextBox = new TextBox();\nimport {Viz} from \"d3plus-viz\";\n\nimport {default as BarBuffer} from \"./buffers/Bar.js\";\nimport {default as BoxBuffer} from \"./buffers/Box.js\";\nimport {default as CircleBuffer} from \"./buffers/Circle.js\";\nimport {default as LineBuffer} from \"./buffers/Line.js\";\nimport {default as RectBuffer} from \"./buffers/Rect.js\";\n\n/**\n    @desc Logic for determining default sizes of shapes using the sizeScaleD3 internal function.\n    @private\n*/\nfunction defaultSize(d) {\n  return this._sizeScaleD3(this._size ? this._size(d) : null);\n}\n\n/**\n    @desc Logic for determining stackOrder ascending using groups.\n    @private\n*/\nfunction stackOrderAscending(series) {\n  const sums = series.map(stackSum);\n  const keys = series.map(d => d.key.split(\"_\")[0]);\n  return d3Shape.stackOrderNone(series).sort((a, b) => keys[b].localeCompare(keys[a]) || sums[a] - sums[b]);\n}\n\n/**\n    @desc Logic for determining stackOrder descending using groups.\n    @private\n*/\nfunction stackOrderDescending(series) {\n  return stackOrderAscending(series).reverse();\n}\n\n/**\n    @desc Logic for determining default sum of shapes using the stackSum function used in d3Shape.\n    @private\n*/\nfunction stackSum(series) {\n  let i = -1, s = 0, v;\n  const n = series.length;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n\n/**\n    @desc Logic for determining default sum of shapes using the stackSum function used in d3Shape.\n    @private\n*/\nfunction stackOffsetDiverging(series, order) {\n  let n;\n  if (!((n = series.length) > 0)) return;\n  let d, dy, i, yn, yp;\n  const m = series[order[0]].length;\n  for (let j = 0; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      }\n      else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      }\n      else {\n        d[0] = yp;\n      }\n    }\n  }\n}\n\n/**\n    @class Plot\n    @extends Viz\n    @desc Creates an x/y plot based on an array of data.\n*/\nexport default class Plot extends Viz {\n\n  /**\n      @memberof Plot\n      @desc Invoked when creating a new class instance, and sets any default parameters.\n      @private\n  */\n  constructor() {\n\n    super();\n    this._annotations = [];\n    this._backgroundConfig = {\n      duration: 0,\n      fill: \"transparent\"\n    };\n    this._barPadding = 0;\n    this._buffer = {\n      Bar: BarBuffer,\n      Box: BoxBuffer,\n      Circle: CircleBuffer,\n      Line: LineBuffer,\n      Rect: RectBuffer\n    };\n    this._confidenceConfig = {\n      fill: (d, i) => {\n        const c = typeof this._shapeConfig.Line.stroke === \"function\"\n          ? this._shapeConfig.Line.stroke(d, i)\n          : this._shapeConfig.Line.stroke;\n        return c;\n      },\n      fillOpacity: constant(0.5)\n    };\n    this._discreteCutoff = 100;\n    this._groupPadding = 5;\n    this._lineMarkerConfig = {\n      fill: (d, i) => colorAssign(this._id(d, i)),\n      r: constant(3)\n    };\n    this._lineMarkers = false;\n    this._previousShapes = [];\n    this._shape = constant(\"Circle\");\n    this._shapeConfig = assign(this._shapeConfig, {\n      Area: {\n        label: (d, i) => this._stacked ? this._drawLabel(d, i) : false,\n        labelConfig: {\n          fontResize: true\n        }\n      },\n      ariaLabel: (d, i) => {\n        let ariaLabelStr = \"\";\n        if (d.nested) ariaLabelStr = `${this._drawLabel(d.data, d.i)}`;\n        else {\n          ariaLabelStr = `${this._drawLabel(d, i)}`;\n          if (this._x(d, i) !== undefined) ariaLabelStr += `, x: ${this._x(d, i)}`;\n          if (this._y(d, i) !== undefined) ariaLabelStr += `, y: ${this._y(d, i)}`;\n          if (this._x2(d, i) !== undefined) ariaLabelStr += `, x2: ${this._x2(d, i)}`;\n          if (this._y2(d, i) !== undefined) ariaLabelStr += `, y2: ${this._y2(d, i)}`;\n        }\n        return `${ariaLabelStr}.`;\n      },\n      Bar: {\n        labelConfig: {\n          textAnchor: () => this._discrete === \"x\" ? \"middle\" : \"end\",\n          verticalAlign: () => this._discrete === \"x\" ? \"top\" : \"middle\"\n        }\n      },\n      Circle: {\n        r: defaultSize.bind(this)\n      },\n      Line: {\n        fill: constant(\"none\"),\n        labelConfig: {\n          fontColor: (d, i) => {\n            const c = typeof this._shapeConfig.Line.stroke === \"function\"\n              ? this._shapeConfig.Line.stroke(d, i)\n              : this._shapeConfig.Line.stroke;\n            return colorLegible(c);\n          },\n          fontResize: false,\n          padding: 5,\n          textAnchor: \"start\",\n          verticalAlign: \"middle\"\n        },\n        stroke: (d, i) => colorAssign(this._id(d, i)),\n        strokeWidth: constant(2)\n      },\n      Rect: {\n        height: d => defaultSize.bind(this)(d) * 2,\n        width: d => defaultSize.bind(this)(d) * 2\n      }\n    });\n    this._shapeOrder = [\"Area\", \"Path\", \"Bar\", \"Box\", \"Line\", \"Rect\", \"Circle\"];\n    this._shapeSort = (a, b) => this._shapeOrder.indexOf(a) - this._shapeOrder.indexOf(b);\n    this._sizeMax = 20;\n    this._sizeMin = 5;\n    this._sizeScale = \"sqrt\";\n    this._stackOffset = stackOffsetDiverging;\n    this._stackOrder = stackOrderDescending;\n    this._timelineConfig = assign(this._timelineConfig, {brushing: true});\n\n    this._x = accessor(\"x\");\n    this._xAxis = new AxisBottom().align(\"end\");\n    this._xTest = new AxisBottom().align(\"end\").gridSize(0);\n    this._xConfig = {};\n    this._xCutoff = 150;\n\n    this._x2 = accessor(\"x2\");\n    this._x2Axis = new AxisTop().align(\"start\");\n    this._x2Test = new AxisTop().align(\"start\").gridSize(0);\n    this._x2Config = {\n      padding: 0\n    };\n\n    this._y = accessor(\"y\");\n    this._yAxis = new AxisLeft().align(\"start\");\n    this._yTest = new AxisLeft().align(\"start\").gridSize(0);\n    this._yConfig = {\n      gridConfig: {\n        stroke: d => {\n          const range = this._yAxis.range();\n          // hides bottom-most y gridline so it doesn't overlap with the x axis\n          return range[range.length - 1] === this._yAxis._getPosition.bind(this._yAxis)(d.id) ? \"transparent\" : \"#ccc\";\n        }\n      }\n    };\n    this._yCutoff = 150;\n\n    this._y2 = accessor(\"y2\");\n    this._y2Axis = new AxisRight().align(\"end\");\n    this._y2Test = new AxisLeft().align(\"end\").gridSize(0);\n    this._y2Config = {};\n\n  }\n\n  /**\n      Extends the draw behavior of the abstract Viz class.\n      @private\n  */\n  _draw(callback) {\n\n    if (!this._filteredData.length) return this;\n\n    const stackGroup = (d, i) => this._stacked\n      ? `${this._groupBy.length > 1 ? this._ids(d, i).slice(0, -1).join(\"_\") : \"group\"}`\n      : `${this._ids(d, i).join(\"_\")}`;\n\n    let data = this._filteredData.map((d, i) => ({\n      __d3plus__: true,\n      data: d,\n      group: stackGroup(d, i),\n      i,\n      hci: this._confidence && this._confidence[1] && this._confidence[1](d, i),\n      id: this._ids(d, i).slice(0, this._drawDepth + 1).join(\"_\"),\n      lci: this._confidence && this._confidence[0] && this._confidence[0](d, i),\n      shape: this._shape(d, i),\n      x: this._x(d, i),\n      x2: this._x2(d, i),\n      y: this._y(d, i),\n      y2: this._y2(d, i)\n    }));\n\n    this._formattedData = data;\n\n    if (this._size) {\n      const rExtent = extent(data, d => this._size(d.data));\n      this._sizeScaleD3 = () => this._sizeMin;\n      this._sizeScaleD3 = scales[`scale${this._sizeScale.charAt(0).toUpperCase()}${this._sizeScale.slice(1)}`]()\n        .domain(rExtent)\n        .range([rExtent[0] === rExtent[1] ? this._sizeMax : min([this._sizeMax / 2, this._sizeMin]), this._sizeMax]);\n    }\n    else {\n      this._sizeScaleD3 = () => this._sizeMin;\n    }\n\n    const x2Exists = data.some(d => d.x2 !== undefined),\n          y2Exists = data.some(d => d.y2 !== undefined);\n\n    const height = this._height - this._margin.top - this._margin.bottom,\n          opp = this._discrete ? this._discrete === \"x\" ? \"y\" : \"x\" : undefined,\n          opp2 = this._discrete ? this._discrete === \"x\" ? \"y2\" : \"x2\" : undefined,\n          opps = [opp, opp2].filter(d => d),\n          parent = this._select,\n          transition = this._transition,\n          width = this._width - this._margin.left - this._margin.right;\n\n    const x2Time = this._time && data[0].x2 === this._time(data[0].data, data[0].i),\n          xTime = this._time && data[0].x === this._time(data[0].data, data[0].i),\n          y2Time = this._time && data[0].y2 === this._time(data[0].data, data[0].i),\n          yTime = this._time && data[0].y === this._time(data[0].data, data[0].i);\n\n    for (let i = 0; i < data.length; i++) {\n      const d = data[i];\n      if (xTime) d.x = date(d.x);\n      if (x2Time) d.x2 = date(d.x2);\n      if (yTime) d.y = date(d.y);\n      if (y2Time) d.y2 = date(d.y2);\n      d.discrete = d.shape === \"Bar\" ? `${d[this._discrete]}_${d.group}` : `${d[this._discrete]}`;\n    }\n\n    let discreteKeys, domains, stackData, stackKeys;\n    if (this._stacked) {\n\n      const groupValues = nest()\n        .key(d => d.group)\n        .entries(data)\n        .reduce((obj, d) => {\n          if (!obj[d.key]) obj[d.key] = 0;\n          obj[d.key] += sum(d.values, dd => dd[opp]);\n          return obj;\n        }, {});\n\n      data = data.sort((a, b) => {\n        if (this[`_${this._discrete}Sort`]) return this[`_${this._discrete}Sort`](a.data, b.data);\n        const a1 = a[this._discrete], b1 = b[this._discrete];\n        if (a1 - b1 !== 0) return a1 - b1;\n        if (a.group !== b.group) return groupValues[b.group] - groupValues[a.group];\n        return b[opp] - a[opp];\n      });\n\n      discreteKeys = Array.from(new Set(data.map(d => d.discrete)));\n      stackKeys = Array.from(new Set(data.map(d => d.id)));\n\n      stackData = nest()\n        .key(d => d.discrete)\n        .entries(data)\n        .map(d => d.values);\n\n      stackData.forEach(g => {\n        const ids = Array.from(new Set(g.map(d => d.id)));\n        if (ids.length < stackKeys.length) {\n          stackKeys.forEach(k => {\n            if (!ids.includes(k)) {\n              const d = data.filter(d => d.id === k)[0];\n              if (d.shape === \"Area\") {\n                const group = stackGroup(d.data, d.i);\n                const fillerPoint = {\n                  __d3plus__: true,\n                  data: d.data,\n                  discrete: d.shape === \"Bar\" ? `${g[0][this._discrete]}_${group}` : `${g[0][this._discrete]}`,\n                  group,\n                  id: k,\n                  shape: d.shape,\n                  [this._discrete]: g[0][this._discrete],\n                  [opp]: 0\n                };\n                data.push(fillerPoint);\n              }\n            }\n          });\n        }\n      });\n\n      if (this[`_${this._discrete}Sort`]) {\n        data.sort((a, b) => this[`_${this._discrete}Sort`](a.data, b.data));\n      }\n      else {\n        data.sort((a, b) => a[this._discrete] - b[this._discrete]);\n      }\n\n      const order = this._stackOrder;\n\n      if (order instanceof Array) stackKeys.sort((a, b) => order.indexOf(a) - order.indexOf(b));\n      else if (order === d3Shape.stackOrderNone) stackKeys.sort((a, b) => a.localeCompare(b));\n\n      stackData = d3Shape.stack()\n        .keys(stackKeys)\n        .offset(this._stackOffset)\n        .order(order instanceof Array ? d3Shape.stackOrderNone : order)\n        .value((group, key) => {\n          const d = group.filter(g => g.id === key);\n          return d.length ? d[0][opp] : 0;\n        })(stackData);\n\n      domains = {\n        [this._discrete]: extent(data, d => d[this._discrete]),\n        [opp]: [min(stackData.map(g => min(g.map(p => p[0])))), max(stackData.map(g => max(g.map(p => p[1]))))]\n      };\n\n    }\n    else {\n\n      const discrete = this._discrete || \"x\";\n\n      if (this[`_${this._discrete}Sort`]) {\n        data.sort((a, b) => this[`_${this._discrete}Sort`](a.data, b.data));\n      }\n      else {\n        data.sort((a, b) => a[discrete] - b[discrete]);\n      }\n\n      const xData = discrete === \"x\" ? data.map(d => d.x) : data.map(d => d.x)\n        .concat(this._confidence && this._confidence[0] ? data.map(d => d.lci) : [])\n        .concat(this._confidence && this._confidence[1] ? data.map(d => d.hci) : []);\n\n      const x2Data = discrete === \"x\" ? data.map(d => d.x2) : data.map(d => d.x2)\n        .concat(this._confidence && this._confidence[0] ? data.map(d => d.lci) : [])\n        .concat(this._confidence && this._confidence[1] ? data.map(d => d.hci) : []);\n\n      const yData = discrete === \"y\" ? data.map(d => d.y) : data.map(d => d.y)\n        .concat(this._confidence && this._confidence[0] ? data.map(d => d.lci) : [])\n        .concat(this._confidence && this._confidence[1] ? data.map(d => d.hci) : []);\n\n      const y2Data = discrete === \"y\" ? data.map(d => d.y2) : data.map(d => d.y2)\n        .concat(this._confidence && this._confidence[0] ? data.map(d => d.lci) : [])\n        .concat(this._confidence && this._confidence[1] ? data.map(d => d.hci) : []);\n\n      domains = {\n        x: this._xSort ? Array.from(new Set(data.filter(d => d.x).sort((a, b) => this._xSort(a.data, b.data)).map(d => d.x))) : extent(xData, d => d),\n        x2: this._x2Sort ? Array.from(new Set(data.filter(d => d.x2).sort((a, b) => this._x2Sort(a.data, b.data)).map(d => d.x2))) : extent(x2Data, d => d),\n        y: this._ySort ? Array.from(new Set(data.filter(d => d.y).sort((a, b) => this._ySort(a.data, b.data)).map(d => d.y))) : extent(yData, d => d),\n        y2: this._y2Sort ? Array.from(new Set(data.filter(d => d.y2).sort((a, b) => this._y2Sort(a.data, b.data)).map(d => d.y2))) : extent(y2Data, d => d)\n      };\n    }\n\n    let xDomain = this._xDomain ? this._xDomain.slice() : domains.x,\n        xScale = this._xSort ? \"Point\" : \"Linear\";\n\n    if (xDomain[0] === void 0) xDomain[0] = domains.x[0];\n    if (xDomain[1] === void 0) xDomain[1] = domains.x[1];\n\n    if (xTime) {\n      xDomain = xDomain.map(date);\n      xScale = \"Time\";\n    }\n    else if (this._discrete === \"x\") {\n      if (!this._xDomain) xDomain = Array.from(new Set(data.filter(d => [\"number\", \"string\"].includes(typeof d.x)).sort((a, b) => this._xSort ? this._xSort(a.data, b.data) : a.x - b.x).map(d => d.x)));\n      xScale = \"Point\";\n    }\n\n    let x2Domain = this._x2Domain ? this._x2Domain.slice() : domains.x2,\n        x2Scale = this._x2Sort ? \"Point\" : \"Linear\";\n\n    if (x2Domain && x2Domain[0] === void 0) x2Domain[0] = domains.x2[0];\n    if (x2Domain && x2Domain[1] === void 0) x2Domain[1] = domains.x2[1];\n\n    if (x2Time) {\n      x2Domain = x2Domain.map(date);\n      x2Scale = \"Time\";\n    }\n    else if (this._discrete === \"x\") {\n      if (!this._x2Domain) x2Domain = Array.from(new Set(data.filter(d => [\"number\", \"string\"].includes(typeof d.x2)).sort((a, b) => this._x2Sort ? this._x2Sort(a.data, b.data) : a.x2 - b.x2).map(d => d.x2)));\n      x2Scale = \"Point\";\n    }\n\n    let yDomain = this._yDomain ? this._yDomain.slice() : domains.y,\n        yScale = this._ySort ? \"Point\" : \"Linear\";\n\n    if (yDomain[0] === void 0) yDomain[0] = domains.y[0];\n    if (yDomain[1] === void 0) yDomain[1] = domains.y[1];\n\n    let y2Domain = this._y2Domain ? this._y2Domain.slice() : domains.y2,\n        y2Scale = this._y2Sort ? \"Point\" : \"Linear\";\n\n    if (y2Domain && y2Domain[0] === void 0) y2Domain[0] = domains.y2[0];\n    if (y2Domain && y2Domain[1] === void 0) y2Domain[1] = domains.y2[1];\n\n    if (yTime) {\n      yDomain = yDomain.map(date);\n      yScale = \"Time\";\n    }\n    else if (this._discrete === \"y\") {\n      if (!this._yDomain) yDomain = Array.from(new Set(data.filter(d => [\"number\", \"string\"].includes(typeof d.y)).sort((a, b) => this._ySort ? this._ySort(a.data, b.data) : a.y - b.y).map(d => d.y)));\n      yScale = \"Point\";\n\n      if (!this._y2Domain) y2Domain = Array.from(new Set(data.filter(d => [\"number\", \"string\"].includes(typeof d.y2)).sort((a, b) => this._y2Sort ? this._y2Sort(a.data, b.data) : a.y2 - b.y2).map(d => d.y2)));\n      y2Scale = \"Point\";\n    }\n\n    if (y2Time) {\n      y2Domain = y2Domain.map(date);\n      y2Scale = \"Time\";\n    }\n\n    domains = {x: xDomain, x2: x2Domain || xDomain, y: yDomain, y2: y2Domain || yDomain};\n\n    opps.forEach(opp => {\n      if (this[`_${opp}Config`].domain) {\n        const d = this[`_${opp}Config`].domain;\n        if (this._discrete === \"x\") d.reverse();\n        domains[opp] = d;\n      }\n      else if (opp && this._baseline !== void 0) {\n        const b = this._baseline;\n        if (domains[opp] && domains[opp][0] > b) domains[opp][0] = b;\n        else if (domains[opp] && domains[opp][1] < b) domains[opp][1] = b;\n      }\n    });\n\n    let x = scales[`scale${xScale}`]().domain(domains.x).range(range(0, width + 1, width / (domains.x.length - 1))),\n        x2 = scales[`scale${x2Scale}`]().domain(domains.x2).range(range(0, width + 1, width / (domains.x2.length - 1))),\n        y = scales[`scale${yScale}`]().domain(domains.y.reverse()).range(range(0, height + 1, height / (domains.y.length - 1))),\n        y2 = scales[`scale${y2Scale}`]().domain(domains.y2.reverse()).range(range(0, height + 1, height / (domains.y2.length - 1)));\n\n    const shapeData = nest()\n      .key(d => d.shape)\n      .entries(data)\n      .sort((a, b) => this._shapeSort(a.key, b.key));\n\n    const autoScale = (axis, fallback) => {\n      const userScale = this[`_${axis}Config`].scale;\n      if (userScale === \"auto\") {\n        if (this._discrete === axis) return fallback;\n        const values = data.map(d => d[axis]);\n        return deviation(values) / mean(values) > 3 ? \"log\" : \"linear\";\n      }\n      return userScale || fallback;\n    };\n\n    const yConfigScale = autoScale(\"y\", yScale).toLowerCase();\n    const y2ConfigScale = autoScale(\"y2\", y2Scale).toLowerCase();\n    const xConfigScale = autoScale(\"x\", xScale).toLowerCase();\n    const x2ConfigScale = autoScale(\"x2\", x2Scale).toLowerCase();\n\n    const oppScale = this._discrete === \"x\" ? yScale : xScale;\n    if (oppScale !== \"Point\") {\n      shapeData.forEach(d => {\n        if (this._buffer[d.key]) {\n          const res = this._buffer[d.key].bind(this)({data: d.values, x, y, yScale: yConfigScale, xScale: xConfigScale, config: this._shapeConfig[d.key]});\n          x = res[0];\n          y = res[1];\n          const res2 = this._buffer[d.key].bind(this)({data: d.values, x: x2, y: y2, yScale: y2ConfigScale, xScale: x2ConfigScale, x2: true, y2: true, config: this._shapeConfig[d.key]});\n          x2 = res2[0];\n          y2 = res2[1];\n        }\n      });\n    }\n\n    xDomain = x.domain();\n    x2Domain = x2.domain();\n    yDomain = y.domain();\n    y2Domain = y2.domain();\n\n    const defaultConfig = {\n      barConfig: {\"stroke-width\": 0},\n      gridSize: 0,\n      labels: [],\n      title: false,\n      tickSize: 0\n    };\n\n    const defaultX2Config = x2Exists ? {} : defaultConfig;\n    const defaultY2Config = y2Exists ? {} : defaultConfig;\n    const showX = this._discrete === \"x\" && this._width > this._discreteCutoff || this._width > this._xCutoff;\n    const showY = this._discrete === \"y\" && this._height > this._discreteCutoff || this._height > this._yCutoff;\n\n    const yC = {\n      gridConfig: {stroke: !this._discrete || this._discrete === \"x\" ? this._yTest.gridConfig().stroke : \"transparent\"},\n      locale: this._locale,\n      scalePadding: y.padding ? y.padding() : 0\n    };\n    if (!showX) {\n      yC.barConfig = {stroke: \"transparent\"};\n      yC.tickSize = 0;\n      yC.shapeConfig = {\n        labelBounds: (d, i) => {\n          const {width, y} = d.labelBounds;\n          const height = this._height / 2;\n          const x = i ? -height : 0;\n          return {x, y, width, height};\n        },\n        labelConfig: {\n          padding: 0,\n          rotate: 0,\n          verticalAlign: d => d.id === yTicks[0] ? \"top\" : \"bottom\"\n        },\n        labelRotation: false\n      };\n    }\n\n    const testGroup = elem(\"g.d3plus-plot-test\", {enter: {opacity: 0}, parent: this._select}),\n          x2Ticks = this._discrete === \"x\" && !x2Time ? domains.x2 : undefined,\n          xTicks = !showY ? extent(domains.x) : this._discrete === \"x\" && !xTime ? domains.x : undefined,\n          y2Ticks = this._discrete === \"y\" && !y2Time ? domains.y2 : undefined,\n          yTicks = !showX ? extent(domains.y) : this._discrete === \"y\" && !yTime ? domains.y : undefined;\n\n    if (showY) {\n      this._yTest\n        .domain(yDomain)\n        .height(height)\n        .maxSize(width / 2)\n        .range([undefined, undefined])\n        .select(testGroup.node())\n        .ticks(yTicks)\n        .width(width)\n        .config(yC)\n        .config(this._yConfig)\n        .scale(yConfigScale)\n        .render();\n    }\n\n    let yBounds = this._yTest.outerBounds();\n    let yWidth = yBounds.width ? yBounds.width + this._yTest.padding() : undefined;\n\n    if (y2Exists) {\n      this._y2Test\n        .domain(y2Domain)\n        .height(height)\n        .range([undefined, undefined])\n        .select(testGroup.node())\n        .ticks(y2Ticks)\n        .width(width)\n        .config(yC)\n        .config(defaultY2Config)\n        .config(this._y2Config)\n        .scale(y2ConfigScale)\n        .render();\n    }\n\n    let y2Bounds = this._y2Test.outerBounds();\n    let y2Width = y2Bounds.width ? y2Bounds.width + this._y2Test.padding() : undefined;\n\n    const xC = {\n      gridConfig: {stroke: !this._discrete || this._discrete === \"y\" ? this._xTest.gridConfig().stroke : \"transparent\"},\n      locale: this._locale,\n      scalePadding: x.padding ? x.padding() : 0\n    };\n    if (!showY) {\n      xC.barConfig = {stroke: \"transparent\"};\n      xC.tickSize = 0;\n      xC.shapeConfig = {\n        labelBounds: (d, i) => {\n          const {height, y} = d.labelBounds;\n          const width = this._width / 2;\n          const x = i ? -width : 0;\n          return {x, y, width, height};\n        },\n        labelConfig: {\n          padding: 0,\n          rotate: 0,\n          textAnchor: d => d.id === xTicks[0] ? \"start\" : \"end\"\n        },\n        labelRotation: false\n      };\n    }\n\n    let xRangeMax = undefined;\n\n    if (this._lineLabels) {\n      const lineData = nest()\n        .key(d => d.id)\n        .entries(data.filter(d => d.shape === \"Line\"));\n\n      if (lineData.length && lineData.length < this._dataCutoff) {\n\n        const userConfig = configPrep.bind(this)(this._shapeConfig, \"shape\", \"Line\");\n        testLineShape.config(userConfig);\n        const lineLabelConfig = testLineShape.labelConfig();\n        const fontSizeAccessor = lineLabelConfig.fontSize !== undefined ? lineLabelConfig.fontSize : testTextBox.fontSize();\n        const fontWeightAccessor = lineLabelConfig.fontWeight !== undefined ? lineLabelConfig.fontWeight : testTextBox.fontWeight();\n        const fontFamilyAccessor = lineLabelConfig.fontFamily !== undefined ? lineLabelConfig.fontFamily : testTextBox.fontFamily();\n        const paddingAccessor = lineLabelConfig.padding !== undefined ? lineLabelConfig.padding : testTextBox.padding();\n\n        const labelWidths = lineData.map(d => {\n\n          const datum = d.values[0];\n          const label = this._drawLabel(datum);\n\n          const fontSize = typeof fontSizeAccessor === \"function\" ? fontSizeAccessor(datum) : fontSizeAccessor;\n          const fontWeight = typeof fontWeightAccessor === \"function\" ? fontWeightAccessor(datum) : fontWeightAccessor;\n          let fontFamily = typeof fontFamilyAccessor === \"function\" ? fontFamilyAccessor(datum) : fontFamilyAccessor;\n          if (fontFamily instanceof Array) fontFamily = fontFamily.map(f => `'${f}'`).join(\", \");\n          const labelPadding = typeof paddingAccessor === \"function\" ? paddingAccessor(datum) : paddingAccessor;\n\n          const labelWidth = textWidth(label, {\n            \"font-size\": fontSize,\n            \"font-family\": fontFamily,\n            \"font-weight\": fontWeight\n          });\n\n          return labelWidth + labelPadding * 2;\n\n        });\n        const largestLabel = max(labelWidths);\n        const labelSpace = min([largestLabel, width / 4]);\n        xRangeMax = width - labelSpace - this._margin.right;\n      }\n    }\n\n    if (showX) {\n      this._xTest\n        .domain(xDomain)\n        .height(height)\n        .maxSize(height / 2)\n        .range([undefined, xRangeMax])\n        .select(testGroup.node())\n        .ticks(xTicks)\n        .width(width)\n        .config(xC)\n        .config(this._xConfig)\n        .scale(xConfigScale)\n        .render();\n    }\n\n    if (x2Exists) {\n      this._x2Test\n        .domain(x2Domain)\n        .height(height)\n        .range([undefined, xRangeMax])\n        .select(testGroup.node())\n        .ticks(x2Ticks)\n        .width(width)\n        .config(xC)\n        .tickSize(0)\n        .config(defaultX2Config)\n        .config(this._x2Config)\n        .scale(x2ConfigScale)\n        .render();\n    }\n\n    const xTestRange = this._xTest._getRange();\n    const x2TestRange = this._x2Test._getRange();\n\n    const x2Bounds = this._x2Test.outerBounds();\n    const x2Height = x2Exists ? x2Bounds.height + this._x2Test.padding() : 0;\n\n    let xOffsetLeft = max([yWidth, xTestRange[0], x2TestRange[0]]);\n\n    if (showX) {\n      this._xTest\n        .range([xOffsetLeft, undefined])\n        .render();\n    }\n\n    const topOffset = showY ? this._yTest.shapeConfig().labelConfig.fontSize() / 2 : 0;\n\n    let xOffsetRight = max([y2Width, width - xTestRange[1], width - x2TestRange[1]]);\n    const xBounds = this._xTest.outerBounds();\n    const xHeight = xBounds.height + (showY ? this._xTest.padding() : 0);\n\n    this._padding.left += xOffsetLeft;\n    this._padding.right += xOffsetRight;\n    this._padding.bottom += xHeight;\n    this._padding.top += x2Height + topOffset;\n\n    super._draw(callback);\n\n    const horizontalMargin = this._margin.left + this._margin.right;\n    const verticalMargin = this._margin.top + this._margin.bottom;\n    let yRange = [x2Height, height - (xHeight + topOffset + verticalMargin)];\n\n    if (showY) {\n      this._yTest\n        .domain(yDomain)\n        .height(height)\n        .maxSize(width / 2)\n        .range(yRange)\n        .select(testGroup.node())\n        .ticks(yTicks)\n        .width(width)\n        .config(yC)\n        .config(this._yConfig)\n        .scale(yConfigScale)\n        .render();\n    }\n\n    yBounds = this._yTest.outerBounds();\n    yWidth = yBounds.width ? yBounds.width + this._yTest.padding() : undefined;\n    xOffsetLeft = max([yWidth, xTestRange[0], x2TestRange[0]]);\n\n    if (y2Exists) {\n      this._y2Test\n        .config(yC)\n        .domain(y2Domain)\n        .gridSize(0)\n        .height(height)\n        .range(yRange)\n        .select(testGroup.node())\n        .width(width - max([0, xOffsetRight - y2Width]))\n        .title(false)\n        .config(this._y2Config)\n        .config(defaultY2Config)\n        .scale(y2ConfigScale)\n        .render();\n    }\n\n    y2Bounds = this._y2Test.outerBounds();\n    y2Width = y2Bounds.width ? y2Bounds.width + this._y2Test.padding() : undefined;\n    xOffsetRight = max([0, y2Width, width - xTestRange[1], width - x2TestRange[1]]);\n    const xRange = [xOffsetLeft, width - (xOffsetRight + horizontalMargin)];\n\n    const rectGroup = elem(\"g.d3plus-plot-background\", {parent, transition});\n\n    const transform = `translate(${this._margin.left}, ${this._margin.top + x2Height + topOffset})`;\n    const x2Transform = `translate(${this._margin.left}, ${this._margin.top + topOffset})`;\n\n    const xGroup = showX && elem(\"g.d3plus-plot-x-axis\", {parent, transition, enter: {transform}, update: {transform}});\n    const x2Group = x2Exists && elem(\"g.d3plus-plot-x2-axis\", {parent, transition, enter: {transform: x2Transform}, update: {transform: x2Transform}});\n\n    const xTrans = xOffsetLeft > yWidth ? xOffsetLeft - yWidth : 0;\n    const yTransform = `translate(${this._margin.left + xTrans}, ${this._margin.top + topOffset})`;\n    const yGroup = showY && elem(\"g.d3plus-plot-y-axis\", {parent, transition, enter: {transform: yTransform}, update: {transform: yTransform}});\n\n    const y2Transform = `translate(-${this._margin.right}, ${this._margin.top + topOffset})`;\n    const y2Group = y2Exists && elem(\"g.d3plus-plot-y2-axis\", {parent, transition, enter: {transform: y2Transform}, update: {transform: y2Transform}});\n\n    this._xAxis\n      .domain(xDomain)\n      .height(height - (x2Height + topOffset + verticalMargin))\n      .maxSize(height / 2)\n      .range(xRange)\n      .select(showX ? xGroup.node() : undefined)\n      .ticks(xTicks)\n      .width(width)\n      .config(xC)\n      .config(this._xConfig)\n      .scale(xConfigScale)\n      .render();\n\n    if (x2Exists) {\n      this._x2Axis\n        .domain(x2Domain)\n        .height(height - (xHeight + topOffset + verticalMargin))\n        .range(xRange)\n        .select(x2Group.node())\n        .ticks(x2Ticks)\n        .width(width)\n        .config(xC)\n        .config(defaultX2Config)\n        .config(this._x2Config)\n        .scale(x2ConfigScale)\n        .render();\n    }\n\n    x = (d, x) => {\n      if (x === \"x2\") {\n        if (this._x2Config.scale === \"log\" && d === 0) d = x2Domain[0] < 0 ? -1 : 1;\n        return this._x2Axis._getPosition.bind(this._x2Axis)(d);\n      }\n      else {\n        if (this._xConfig.scale === \"log\" && d === 0) d = xDomain[0] < 0 ? -1 : 1;\n        return this._xAxis._getPosition.bind(this._xAxis)(d);\n      }\n    };\n\n    yRange = [this._xAxis.outerBounds().y + x2Height, height - (xHeight + topOffset + verticalMargin)];\n\n    this._yAxis\n      .domain(yDomain)\n      .height(height)\n      .maxSize(width / 2)\n      .range(yRange)\n      .select(showY ? yGroup.node() : undefined)\n      .ticks(yTicks)\n      .width(xRange[xRange.length - 1])\n      .config(yC)\n      .config(this._yConfig)\n      .scale(yConfigScale)\n      .render();\n\n    if (y2Exists) {\n      this._y2Axis\n        .config(yC)\n        .domain(y2Exists ? y2Domain : yDomain)\n        .gridSize(0)\n        .height(height)\n        .range(yRange)\n        .select(y2Group.node())\n        .width(width - max([0, xOffsetRight - y2Width]))\n        .title(false)\n        .config(this._y2Config)\n        .config(defaultY2Config)\n        .scale(y2ConfigScale)\n        .render();\n    }\n\n    y = (d, y) => {\n      if (y === \"y2\") {\n        if (this._y2Config.scale === \"log\" && d === 0) d = y2Domain[0] < 0 ? -1 : 1;\n        return this._y2Axis._getPosition.bind(this._y2Axis)(d) - x2Height;\n      }\n      else {\n        if (this._yConfig.scale === \"log\" && d === 0) d = yDomain[0] < 0 ? -1 : 1;\n        return this._yAxis._getPosition.bind(this._yAxis)(d) - x2Height;\n      }\n    };\n\n    new shapes.Rect()\n      .data([{}])\n      .select(rectGroup.node())\n      .x(xRange[0] + (xRange[1] - xRange[0]) / 2)\n      .width(xRange[1] - xRange[0])\n      .y(this._margin.top + topOffset + yRange[0] + (yRange[1] - yRange[0]) / 2)\n      .height(yRange[1] - yRange[0])\n      .config(this._backgroundConfig)\n      .render();\n\n    const annotationGroup = elem(\"g.d3plus-plot-annotations\", {parent, transition, enter: {transform}, update: {transform}}).node();\n    this._annotations.forEach(annotation => {\n      new shapes[annotation.shape]()\n        .config(annotation)\n        .config({\n          x: d => d.x2 ? x(d.x2, \"x2\") : x(d.x),\n          x0: this._discrete === \"x\" ? d => d.x2 ? x(d.x2, \"x2\") : x(d.x) : x(domains.x[0]),\n          x1: this._discrete === \"x\" ? null : d => d.x2 ? x(d.x2, \"x2\") : x(d.x),\n          y: d => d.y2 ? y(d.y2, \"y2\") : y(d.y),\n          y0: this._discrete === \"y\" ? d => d.y2 ? y(d.y2, \"y2\") : y(d.y) : y(domains.y[1]) - yOffset,\n          y1: this._discrete === \"y\" ? null : d => d.y2 ? y(d.y2, \"y2\") : y(d.y) - yOffset\n        })\n        .select(annotationGroup)\n        .render();\n    });\n\n    let yOffset = this._xAxis.barConfig()[\"stroke-width\"];\n    if (yOffset) yOffset /= 2;\n\n    const discrete = this._discrete || \"x\";\n\n    const shapeConfig = {\n      duration: this._duration,\n      label: d => this._drawLabel(d.data, d.i),\n      select: elem(\"g.d3plus-plot-shapes\", {parent, transition, enter: {transform}, update: {transform}}).node(),\n      x: d => d.x2 !== undefined ? x(d.x2, \"x2\") : x(d.x),\n      x0: discrete === \"x\" ? d => d.x2 ? x(d.x2, \"x2\") : x(d.x) : x(typeof this._baseline === \"number\" ? this._baseline : domains.x[0]),\n      x1: discrete === \"x\" ? null : d => d.x2 ? x(d.x2, \"x2\") : x(d.x),\n      y: d => d.y2 !== undefined ? y(d.y2, \"y2\") : y(d.y),\n      y0: discrete === \"y\" ? d => d.y2 ? y(d.y2, \"y2\") : y(d.y) : y(typeof this._baseline === \"number\" ? this._baseline : domains.y[1]) - yOffset,\n      y1: discrete === \"y\" ? null : d => d.y2 ? y(d.y2, \"y2\") : y(d.y) - yOffset\n    };\n\n    if (this._stacked) {\n      const scale = opp === \"x\" ? x : y;\n      shapeConfig[`${opp}`] = shapeConfig[`${opp}0`] = d => {\n        const dataIndex = stackKeys.indexOf(d.id),\n              discreteIndex = discreteKeys.indexOf(d.discrete);\n        return dataIndex >= 0 ? scale(stackData[dataIndex][discreteIndex][0]) : scale(domains[opp][opp === \"x\" ? 0 : 1]);\n      };\n      shapeConfig[`${opp}1`] = d => {\n        const dataIndex = stackKeys.indexOf(d.id),\n              discreteIndex = discreteKeys.indexOf(d.discrete);\n        return dataIndex >= 0 ? scale(stackData[dataIndex][discreteIndex][1]) : scale(domains[opp][opp === \"x\" ? 0 : 1]);\n      };\n    }\n\n    const events = Object.keys(this._on);\n    shapeData.forEach(d => {\n\n      const s = new shapes[d.key]().config(shapeConfig).data(d.values);\n\n      if (d.key === \"Bar\") {\n\n        let space;\n        const scale = this._discrete === \"x\" ? x : y;\n        const scaleType = this._discrete === \"x\" ? xScale : yScale;\n        const vals = this._discrete === \"x\" ? xDomain : yDomain;\n        const range = this._discrete === \"x\" ? xRange : yRange;\n        if (scaleType !== \"Point\" && vals.length === 2) {\n          space = (scale(d.values[this._discrete === \"x\" ? 0 : d.values.length - 1][this._discrete]) - scale(vals[0])) * 2;\n        }\n        else if (vals.length > 1) space = scale(vals[1]) - scale(vals[0]);\n        else space = range[range.length - 1] - range[0];\n        if (this._groupPadding < space) space -= this._groupPadding;\n\n        let barSize = space || 1;\n\n        const groups = nest()\n          .key(d => d[this._discrete])\n          .key(d => d.group)\n          .entries(d.values);\n\n        const ids = merge(groups.map(d => d.values.map(v => v.key)));\n        const uniqueIds = Array.from(new Set(ids));\n\n        if (max(groups.map(d => d.values.length)) === 1) {\n          s[this._discrete]((d, i) => shapeConfig[this._discrete](d, i));\n        }\n        else {\n\n          barSize = (barSize - this._barPadding * uniqueIds.length - 1) / uniqueIds.length;\n\n          const offset = space / 2 - barSize / 2;\n\n          const xMod = scales.scaleLinear()\n            .domain([0, uniqueIds.length - 1])\n            .range([-offset, offset]);\n\n          s[this._discrete]((d, i) => shapeConfig[this._discrete](d, i) + xMod(uniqueIds.indexOf(d.group)));\n\n        }\n\n        s.width(barSize);\n        s.height(barSize);\n\n      }\n      else if (d.key === \"Line\") {\n\n        s.duration(width * 1.5);\n\n        if (this._confidence) {\n          const areaConfig = Object.assign({}, shapeConfig);\n          const discrete = this._discrete || \"x\";\n          const key = discrete === \"x\" ? \"y\" : \"x\";\n          const scaleFunction = discrete === \"x\" ? y : x;\n          areaConfig[`${key}0`] = d => scaleFunction(this._confidence[0] ? d.lci : d[key]);\n          areaConfig[`${key}1`] = d => scaleFunction(this._confidence[1] ? d.hci : d[key]);\n\n          const area = new shapes.Area().config(areaConfig).data(d.values);\n          const confidenceConfig = Object.assign(this._shapeConfig, this._confidenceConfig);\n\n          area\n            .config(configPrep.bind(this)(confidenceConfig, \"shape\", \"Area\"))\n            .render();\n\n          this._shapes.push(area);\n        }\n\n        s.config({\n          label: this._lineLabels ? this._drawLabel : false,\n          labelBounds: this._lineLabels ? (d, i, s) => {\n            const [firstX, firstY] = s.points[0];\n            const [lastX, lastY] = s.points[s.points.length - 1];\n            const height = this._height / 4;\n            return {\n              x: lastX - firstX,\n              y: lastY - firstY - height / 2,\n              width: this._padding.right,\n              height\n            };\n          } : false\n        });\n\n      }\n\n      const classEvents = events.filter(e => e.includes(`.${d.key}`)),\n            globalEvents = events.filter(e => !e.includes(\".\")),\n            shapeEvents = events.filter(e => e.includes(\".shape\"));\n      for (let e = 0; e < globalEvents.length; e++) s.on(globalEvents[e], d => this._on[globalEvents[e]](d.data, d.i));\n      for (let e = 0; e < shapeEvents.length; e++) s.on(shapeEvents[e], d => this._on[shapeEvents[e]](d.data, d.i));\n      for (let e = 0; e < classEvents.length; e++) s.on(classEvents[e], d => this._on[classEvents[e]](d.data, d.i));\n\n      const userConfig = configPrep.bind(this)(this._shapeConfig, \"shape\", d.key);\n      if (this._shapeConfig.duration === undefined) delete userConfig.duration;\n      s.config(userConfig).render();\n\n      this._shapes.push(s);\n\n      if (d.key === \"Line\" && this._lineMarkers) {\n        const markers = new shapes.Circle()\n          .data(d.values)\n          .config(shapeConfig)\n          .config(this._lineMarkerConfig)\n          .id(d => `${d.id}_${d.discrete}`);\n\n        for (let e = 0; e < globalEvents.length; e++) markers.on(globalEvents[e], d => this._on[globalEvents[e]](d.data, d.i));\n        for (let e = 0; e < shapeEvents.length; e++) markers.on(shapeEvents[e], d => this._on[shapeEvents[e]](d.data, d.i));\n        for (let e = 0; e < classEvents.length; e++) markers.on(classEvents[e], d => this._on[classEvents[e]](d.data, d.i));\n\n        markers.render();\n        this._shapes.push(markers);\n      }\n\n    });\n\n    const dataShapes = shapeData.map(d => d.key);\n    if (dataShapes.includes(\"Line\")) {\n      if (this._confidence) dataShapes.push(\"Area\");\n      if (this._labelMarkers) dataShapes.push(\"Circle\");\n    }\n    const exitShapes = this._previousShapes.filter(d => !dataShapes.includes(d));\n\n    exitShapes.forEach(shape => {\n      new shapes[shape]()\n        .config(shapeConfig)\n        .data([])\n        .render();\n    });\n\n    this._previousShapes = dataShapes;\n\n    return this;\n\n  }\n\n  /**\n      @memberof Plot\n      @desc Allows drawing custom shapes to be used as annotations in the provided x/y plot. This method accepts custom config objects for the [Shape](http://d3plus.org/docs/#Shape) class, either a single config object or an array of config objects. Each config object requires an additional parameter, the \"shape\", which denotes which [Shape](http://d3plus.org/docs/#Shape) sub-class to use ([Rect](http://d3plus.org/docs/#Rect), [Line](http://d3plus.org/docs/#Line), etc). Annotations will be drawn underneath the data to be displayed.\n      @param {Array|Object} *annotations* = []\n      @chainable\n  */\n  annotations(_) {\n    return arguments.length ? (this._annotations = _ instanceof Array ? _ : [_], this) : this._annotations;\n  }\n\n  /**\n       @memberof Plot\n       @desc A d3plus-shape configuration Object used for styling the background rectangle of the inner x/y plot (behind all of the shapes and gridlines).\n       @param {Object} [*value*]\n       @chainable\n   */\n  backgroundConfig(_) {\n    return arguments.length ? (this._backgroundConfig = assign(this._backgroundConfig, _), this) : this._backgroundConfig;\n  }\n\n  /**\n      @memberof Plot\n      @desc Sets the pixel space between each bar in a group of bars.\n      @param {Number} *value* = 0\n      @chainable\n  */\n  barPadding(_) {\n    return arguments.length ? (this._barPadding = _, this) : this._barPadding;\n  }\n\n  /**\n      @memberof Plot\n      @desc Sets the baseline for the x/y plot. If *value* is not specified, returns the current baseline.\n      @param {Number} *value*\n      @chainable\n  */\n  baseline(_) {\n    return arguments.length ? (this._baseline = _, this) : this._baseline;\n  }\n\n  /**\n       @memberof Plot\n       @desc Sets the confidence to the specified array of lower and upper bounds.\n       @param {String[]|Function[]} *value*\n       @chainable\n       @example <caption>Can be called with accessor functions or static keys:</caption>\n       var data = {id: \"alpha\", value: 10, lci: 9, hci: 11};\n       ...\n       // Accessor functions\n       .confidence([function(d) { return d.lci }, function(d) { return d.hci }])\n\n       // Or static keys\n       .confidence([\"lci\", \"hci\"])\n   */\n  confidence(_) {\n    if (arguments.length && _ instanceof Array) {\n      this._confidence = [];\n      const lower = _[0];\n      this._confidence[0] = typeof lower === \"function\" || !lower ? lower : accessor(lower);\n      const upper = _[1];\n      this._confidence[1] = typeof upper === \"function\" || !upper ? upper : accessor(upper);\n\n      return this;\n    }\n    else return this._confidence;\n  }\n\n  /**\n       @memberof Plot\n       @desc If *value* is specified, sets the config method for each shape rendered as a confidence interval and returns the current class instance.\n       @param {Object} [*value*]\n       @chainable\n   */\n  confidenceConfig(_) {\n    return arguments.length ? (this._confidenceConfig = assign(this._confidenceConfig, _), this) : this._confidenceConfig;\n  }\n\n  /**\n      @memberof Plot\n      @desc Sets the discrete axis to the specified string. If *value* is not specified, returns the current discrete axis.\n      @param {String} *value*\n      @chainable\n  */\n  discrete(_) {\n    return arguments.length ? (this._discrete = _, this) : this._discrete;\n  }\n\n  /**\n      @memberof Plot\n      @desc When the width or height of the chart is less than or equal to this pixel value, the discrete axis will not be shown. This helps produce slick sparklines. Set this value to `0` to disable the behavior entirely.\n      @param {Number} *value*\n      @chainable\n  */\n  discreteCutoff(_) {\n    return arguments.length ? (this._discreteCutoff = _, this) : this._discreteCutoff;\n  }\n\n  /**\n      @memberof Plot\n      @desc Sets the pixel space between groups of bars.\n      @param {Number} [*value* = 5]\n      @chainable\n  */\n  groupPadding(_) {\n    return arguments.length ? (this._groupPadding = _, this) : this._groupPadding;\n  }\n\n  /**\n      @memberof Plot\n      @desc Draws labels on the right side of any Line shapes that are drawn on the plot.\n      @param {Boolean} [*value* = false]\n      @chainable\n  */\n  lineLabels(_) {\n    return arguments.length ? (this._lineLabels = _, this) : this._lineLabels;\n  }\n\n  /**\n      @memberof Plot\n      @desc Shape config for the Circle shapes drawn by the lineMarkers method.\n      @param {Object} *value*\n      @chainable\n  */\n  lineMarkerConfig(_) {\n    return arguments.length ? (this._lineMarkerConfig = assign(this._lineMarkerConfig, _), this) : this._lineMarkerConfig;\n  }\n\n  /**\n      @memberof Plot\n      @desc Draws circle markers on each vertex of a Line.\n      @param {Boolean} [*value* = false]\n      @chainable\n  */\n  lineMarkers(_) {\n    return arguments.length ? (this._lineMarkers = _, this) : this._lineMarkers;\n  }\n\n  /**\n      @memberof Plot\n      @desc A JavaScript [sort comparator function](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort) that receives each shape Class (ie. \"Circle\", \"Line\", etc) as it's comparator arguments. Shapes are drawn in groups based on their type, so you are defining the layering order for all shapes of said type.\n      @param {Function} *value*\n      @chainable\n  */\n  shapeSort(_) {\n    return arguments.length ? (this._shapeSort = _, this) : this._shapeSort;\n  }\n\n  /**\n      @memberof Plot\n      @desc Sets the size of bubbles to the given Number, data key, or function.\n      @param {Function|Number|String} *value* = 10\n      @chainable\n  */\n  size(_) {\n    return arguments.length ? (this._size = typeof _ === \"function\" || !_ ? _ : accessor(_), this) : this._size;\n  }\n\n  /**\n      @memberof Plot\n      @desc Sets the size scale maximum to the specified number.\n      @param {Number} *value* = 20\n      @chainable\n  */\n  sizeMax(_) {\n    return arguments.length ? (this._sizeMax = _, this) : this._sizeMax;\n  }\n\n  /**\n      @memberof Plot\n      @desc Sets the size scale minimum to the specified number.\n      @param {Number} *value* = 5\n      @chainable\n  */\n  sizeMin(_) {\n    return arguments.length ? (this._sizeMin = _, this) : this._sizeMin;\n  }\n\n  /**\n      @memberof Plot\n      @desc Sets the size scale to the specified string.\n      @param {String} *value* = \"sqrt\"\n      @chainable\n  */\n  sizeScale(_) {\n    return arguments.length ? (this._sizeScale = _, this) : this._sizeScale;\n  }\n\n  /**\n      @memberof Plot\n      @desc If *value* is specified, toggles shape stacking. If *value* is not specified, returns the current stack value.\n      @param {Boolean} *value* = false\n      @chainable\n  */\n  stacked(_) {\n    return arguments.length ? (this._stacked = _, this) : this._stacked;\n  }\n\n  /**\n      @memberof Plot\n      @desc Sets the stack offset. If *value* is not specified, returns the current stack offset function.\n      @param {Function|String} *value* = \"descending\"\n      @chainable\n  */\n  stackOffset(_) {\n    return arguments.length ? (this._stackOffset = typeof _ === \"function\" ? _ : d3Shape[`stackOffset${_.charAt(0).toUpperCase() + _.slice(1)}`], this) : this._stackOffset;\n  }\n\n  /**\n      @memberof Plot\n      @desc Sets the stack order. If *value* is not specified, returns the current stack order function.\n      @param {Function|String|Array} *value* = \"none\"\n      @chainable\n  */\n  stackOrder(_) {\n    if (arguments.length) {\n      if (typeof _ === \"string\") this._stackOrder = _ === \"ascending\" ? stackOrderAscending : _ === \"descending\" ? stackOrderDescending : d3Shape[`stackOrder${_.charAt(0).toUpperCase() + _.slice(1)}`];\n      else this._stackOrder = _;\n      return this;\n    }\n    else return this._stackOrder;\n  }\n\n  /**\n      @memberof Plot\n      @desc Sets the x accessor to the specified function or number. If *value* is not specified, returns the current x accessor.\n      @param {Function|Number} *value*\n      @chainable\n  */\n  x(_) {\n    if (arguments.length) {\n      if (typeof _ === \"function\") this._x = _;\n      else {\n        this._x = accessor(_);\n        if (!this._aggs[_] && this._discrete === \"x\") {\n          this._aggs[_] = a => {\n            const v = Array.from(new Set(a));\n            return v.length === 1 ? v[0] : v;\n          };\n        }\n      }\n      return this;\n    }\n    else return this._x;\n  }\n\n  /**\n       @memberof Plot\n       @desc Sets the x2 accessor to the specified function or number. If *value* is not specified, returns the current x2 accessor.\n       @param {Function|Number} *value*\n       @chainable\n   */\n  x2(_) {\n    if (arguments.length) {\n      if (typeof _ === \"function\") this._x2 = _;\n      else {\n        this._x2 = accessor(_);\n        if (!this._aggs[_] && this._discrete === \"x\") {\n          this._aggs[_] = a => {\n            const v = Array.from(new Set(a));\n            return v.length === 1 ? v[0] : v;\n          };\n        }\n      }\n      return this;\n    }\n    else return this._x2;\n  }\n\n  /**\n      @memberof Plot\n      @desc A pass-through to the underlying [Axis](http://d3plus.org/docs/#Axis) config used for the x-axis. Includes additional functionality where passing \"auto\" as the value for the [scale](http://d3plus.org/docs/#Axis.scale) method will determine if the scale should be \"linear\" or \"log\" based on the provided data.\n      @param {Object} *value*\n      @chainable\n  */\n  xConfig(_) {\n    return arguments.length ? (this._xConfig = assign(this._xConfig, _), this) : this._xConfig;\n  }\n\n  /**\n      @memberof Plot\n      @desc When the width of the chart is less than or equal to this pixel value, and the x-axis is not the discrete axis, it will not be shown. This helps produce slick sparklines. Set this value to `0` to disable the behavior entirely.\n      @param {Number} *value*\n      @chainable\n  */\n  xCutoff(_) {\n    return arguments.length ? (this._xCutoff = _, this) : this._xCutoff;\n  }\n\n  /**\n      @memberof Plot\n      @desc A pass-through to the underlying [Axis](http://d3plus.org/docs/#Axis) config used for the secondary x-axis. Includes additional functionality where passing \"auto\" as the value for the [scale](http://d3plus.org/docs/#Axis.scale) method will determine if the scale should be \"linear\" or \"log\" based on the provided data.\n      @param {Object} *value*\n      @chainable\n  */\n  x2Config(_) {\n    return arguments.length ? (this._x2Config = assign(this._x2Config, _), this) : this._x2Config;\n  }\n\n  /**\n      @memberof Plot\n      @desc Sets the x domain to the specified array. If *value* is not specified, returns the current x domain. Additionally, if either value of the array is undefined, it will be calculated from the data.\n      @param {Array} *value*\n      @chainable\n  */\n  xDomain(_) {\n    return arguments.length ? (this._xDomain = _, this) : this._xDomain;\n  }\n\n  /**\n       @memberof Plot\n       @desc Sets the x2 domain to the specified array. If *value* is not specified, returns the current x2 domain. Additionally, if either value of the array is undefined, it will be calculated from the data.\n       @param {Array} *value*\n       @chainable\n   */\n  x2Domain(_) {\n    return arguments.length ? (this._x2Domain = _, this) : this._x2Domain;\n  }\n\n  /**\n      @memberof Plot\n      @desc Defines a custom sorting comparitor function to be used for discrete x axes.\n      @param {Function} *value*\n      @chainable\n  */\n  xSort(_) {\n    return arguments.length ? (this._xSort = _, this) : this._xSort;\n  }\n\n  /**\n       @memberof Plot\n       @desc Defines a custom sorting comparitor function to be used for discrete x2 axes.\n       @param {Function} *value*\n       @chainable\n   */\n  x2Sort(_) {\n    return arguments.length ? (this._x2Sort = _, this) : this._x2Sort;\n  }\n\n  /**\n      @memberof Plot\n      @desc Sets the y accessor to the specified function or number. If *value* is not specified, returns the current y accessor.\n      @param {Function|Number} *value*\n      @chainable\n  */\n  y(_) {\n    if (arguments.length) {\n      if (typeof _ === \"function\") this._y = _;\n      else {\n        this._y = accessor(_);\n        if (!this._aggs[_] && this._discrete === \"y\") {\n          this._aggs[_] = a => {\n            const v = Array.from(new Set(a));\n            return v.length === 1 ? v[0] : v;\n          };\n        }\n      }\n      return this;\n    }\n    else return this._y;\n  }\n\n  /**\n       @memberof Plot\n       @desc Sets the y2 accessor to the specified function or number. If *value* is not specified, returns the current y2 accessor.\n       @param {Function|Number} *value*\n       @chainable\n   */\n  y2(_) {\n    if (arguments.length) {\n      if (typeof _ === \"function\") this._y2 = _;\n      else {\n        this._y2 = accessor(_);\n        if (!this._aggs[_] && this._discrete === \"y2\") {\n          this._aggs[_] = a => {\n            const v = Array.from(new Set(a));\n            return v.length === 1 ? v[0] : v;\n          };\n        }\n      }\n      return this;\n    }\n    else return this._y2;\n  }\n\n  /**\n      @memberof Plot\n      @desc A pass-through to the underlying [Axis](http://d3plus.org/docs/#Axis) config used for the y-axis. Includes additional functionality where passing \"auto\" as the value for the [scale](http://d3plus.org/docs/#Axis.scale) method will determine if the scale should be \"linear\" or \"log\" based on the provided data.\n\n*Note:* If a \"domain\" array is passed to the y-axis config, it will be reversed.\n      @param {Object} *value*\n      @chainable\n  */\n  yConfig(_) {\n    if (arguments.length) {\n      if (_.domain) _.domain = _.domain.slice().reverse();\n      this._yConfig = assign(this._yConfig, _);\n      return this;\n    }\n    return this._yConfig;\n  }\n\n  /**\n      @memberof Plot\n      @desc When the height of the chart is less than or equal to this pixel value, and the y-axis is not the discrete axis, it will not be shown. This helps produce slick sparklines. Set this value to `0` to disable the behavior entirely.\n      @param {Number} *value*\n      @chainable\n  */\n  yCutoff(_) {\n    return arguments.length ? (this._yCutoff = _, this) : this._yCutoff;\n  }\n\n  /**\n      @memberof Plot\n      @desc A pass-through to the underlying [Axis](http://d3plus.org/docs/#Axis) config used for the secondary y-axis. Includes additional functionality where passing \"auto\" as the value for the [scale](http://d3plus.org/docs/#Axis.scale) method will determine if the scale should be \"linear\" or \"log\" based on the provided data.\n      @param {Object} *value*\n      @chainable\n  */\n  y2Config(_) {\n    if (arguments.length) {\n      if (_.domain) _.domain = _.domain.slice().reverse();\n      this._y2Config = assign(this._y2Config, _);\n      return this;\n    }\n    return this._y2Config;\n  }\n\n  /**\n      @memberof Plot\n      @desc Sets the y domain to the specified array. If *value* is not specified, returns the current y domain. Additionally, if either value of the array is undefined, it will be calculated from the data.\n      @param {Array} *value*\n      @chainable\n  */\n  yDomain(_) {\n    return arguments.length ? (this._yDomain = _, this) : this._yDomain;\n  }\n\n  /**\n       @memberof Plot\n       @desc Sets the y2 domain to the specified array. If *value* is not specified, returns the current y2 domain. Additionally, if either value of the array is undefined, it will be calculated from the data.\n       @param {Array} *value*\n       @chainable\n   */\n  y2Domain(_) {\n    return arguments.length ? (this._y2Domain = _, this) : this._y2Domain;\n  }\n\n  /**\n      @memberof Plot\n      @desc Defines a custom sorting comparitor function to be used for discrete y axes.\n      @param {Function} *value*\n      @chainable\n  */\n  ySort(_) {\n    return arguments.length ? (this._ySort = _, this) : this._ySort;\n  }\n\n  /**\n       @memberof Plot\n       @desc Defines a custom sorting comparitor function to be used for discrete y2 axes.\n       @param {Function} *value*\n       @chainable\n   */\n  y2Sort(_) {\n    return arguments.length ? (this._y2Sort = _, this) : this._y2Sort;\n  }\n\n}\n","import {constant} from \"d3plus-common\";\n\nimport {default as Plot} from \"./Plot\";\n\n/**\n    @class AreaPlot\n    @extends Plot\n    @desc Creates an area plot based on an array of data.\n    @example <caption>the equivalent of calling:</caption>\nnew d3plus.Plot()\n  .baseline(0)\n  .discrete(\"x\")\n  .shape(\"Area\")\n*/\nexport default class AreaPlot extends Plot {\n\n  /**\n      @memberof AreaPlot\n      @desc Invoked when creating a new class instance, and overrides any default parameters inherited from Plot.\n      @private\n  */\n  constructor() {\n\n    super();\n    this._baseline = 0;\n    this._discrete = \"x\";\n    this._shape = constant(\"Area\");\n    this.x(\"x\");\n\n  }\n\n}\n","import {constant} from \"d3plus-common\";\n\nimport {default as Plot} from \"./Plot\";\n\n/**\n    @class BarChart\n    @extends Plot\n    @desc Creates a bar chart based on an array of data.\n    @example <caption>the equivalent of calling:</caption>\nnew d3plus.Plot()\n  .baseline(0)\n  .discrete(\"x\")\n  .shape(\"Bar\")\n*/\nexport default class BarChart extends Plot {\n\n  /**\n      @memberof BarChart\n      @desc Invoked when creating a new class instance, and overrides any default parameters inherited from Plot.\n      @private\n  */\n  constructor() {\n\n    super();\n    this._baseline = 0;\n    this._discrete = \"x\";\n    this._shape = constant(\"Bar\");\n    this.x(\"x\");\n\n  }\n\n}\n","import {assign, constant} from \"d3plus-common\";\n\nimport {default as Plot} from \"./Plot\";\n\n/**\n    @class BoxWhisker\n    @extends Plot\n    @desc Creates a simple box and whisker based on an array of data.\n    @example <caption>the equivalent of calling:</caption>\nnew d3plus.Plot()\n  .discrete(\"x\")\n  .shape(\"Box\")\n*/\nexport default class BoxWhisker extends Plot {\n\n  /**\n      @memberof BoxWhisker\n      @desc Invoked when creating a new class instance, and overrides any default parameters inherited from Plot.\n      @private\n  */\n  constructor() {\n\n    super();\n    this._discrete = \"x\";\n    this._shape = constant(\"Box\");\n    this.x(\"x\");\n\n    this._tooltipConfig = assign(this._tooltipConfig, {\n      title: (d, i) => {\n        if (!d) return \"\";\n        while (d.__d3plus__ && d.data) {\n          d = d.data;\n          i = d.i;\n        }\n        if (this._label) return this._label(d, i);\n        const l = this._ids(d, i).slice(0, this._drawDepth);\n        return l[l.length - 1];\n      }\n    });\n\n  }\n\n}\n","import {constant} from \"d3plus-common\";\n\nimport {default as Plot} from \"./Plot\";\n\n/**\n    @class BumpChart\n    @extends Plot\n    @desc Creates a bump chart based on an array of data.\n    @example <caption>the equivalent of calling:</caption>\nnew d3plus.Plot()\n  .discrete(\"x\")\n  .shape(\"Line\")\n  .x(\"x\")\n  .y2(d => this._y(d))\n  .yConfig({\n    tickFormat: val => {\n      const data = this._formattedData;\n      const xDomain = this._xDomain;\n      const startData = data.filter(d => d.x === xDomain[0]);\n      const d = startData.find(d => d.y === val);\n      return this._drawLabel(d, d.i);\n     }\n   })\n  .y2Config({\n    tickFormat: val => {\n      const data = this._formattedData;\n      const xDomain = this._xDomain;\n      const endData = data.filter(d => d.x === xDomain[xDomain.length - 1]);\n      const d = endData.find(d => d.y === val);\n      return this._drawLabel(d, d.i);\n     }\n   })\n  .ySort((a, b) => b.y - a.y)\n  .y2Sort((a, b) => b.y - a.y)\n*/\nexport default class BumpChart extends Plot {\n\n  /**\n      @memberof BumpChart\n      @desc Invoked when creating a new class instance, and overrides any default parameters inherited from Plot.\n      @private\n  */\n  constructor() {\n\n    super();\n    this._discrete = \"x\";\n    this._shape = constant(\"Line\");\n    this.x(\"x\");\n    this.y2(d => this._y(d));\n\n    this.yConfig({\n      tickFormat: val => {\n        const data = this._formattedData;\n        const xMin = data[0].x instanceof Date ? data[0].x.getTime() : data[0].x;\n        const startData = data.filter(d => (d.x instanceof Date ? d.x.getTime() : d.x) === xMin);\n        const d = startData.find(d => d.y === val);\n        return d ? this._drawLabel(d, d.i) : \"\";\n      }\n    });\n    this.y2Config({\n      tickFormat: val => {\n        const data = this._formattedData;\n        const xMax = data[data.length - 1].x instanceof Date ? data[data.length - 1].x.getTime() : data[data.length - 1].x;\n        const endData = data.filter(d => (d.x instanceof Date ? d.x.getTime() : d.x) === xMax);\n        const d = endData.find(d => d.y === val);\n        return d ? this._drawLabel(d, d.i) : \"\";\n      }\n    });\n    this.ySort((a, b) => this._y(b) - this._y(a));\n    this.y2Sort((a, b) => this._y(b) - this._y(a));\n  }\n\n}\n","import {constant} from \"d3plus-common\";\n\nimport {default as Plot} from \"./Plot\";\n\n/**\n    @class LinePlot\n    @extends Plot\n    @desc Creates a line plot based on an array of data.\n    @example <caption>the equivalent of calling:</caption>\nnew d3plus.Plot()\n  .discrete(\"x\")\n  .shape(\"Line\")\n*/\nexport default class LinePlot extends Plot {\n\n  /**\n      @memberof LinePlot\n      @desc Invoked when creating a new class instance, and overrides any default parameters inherited from Plot.\n      @private\n  */\n  constructor() {\n\n    super();\n    this._discrete = \"x\";\n    this._shape = constant(\"Line\");\n    this.x(\"x\");\n\n  }\n\n}\n","/**\n    @external Viz\n    @see https://github.com/d3plus/d3plus-viz#Viz\n*/\n\nimport {min, max, sum} from \"d3-array\";\nimport {nest} from \"d3-collection\";\nimport {mouse} from \"d3-selection\";\nimport {accessor, assign, configPrep, constant, elem, merge} from \"d3plus-common\";\nimport {Circle, Path, Rect} from \"d3plus-shape\";\nimport {Viz} from \"d3plus-viz\";\n\nconst tau = Math.PI * 2;\n\n/**\n    @class Radar\n    @extends Viz\n    @desc Creates a radar visualization based on an array of data.\n*/\nexport default class Radar extends Viz {\n\n  /**\n      @memberof Radar\n      @desc Invoked when creating a new class instance, and overrides any default parameters inherited from Viz.\n      @private\n  */\n  constructor() {\n    super();\n\n    this._axisConfig = {\n      shapeConfig: {\n        fill: constant(\"none\"),\n        labelConfig: {\n          fontColor: \"#000\",\n          padding: 0,\n          textAnchor: (d, i, x) => x.textAnchor,\n          verticalAlign: \"middle\"\n        },\n        stroke: \"#ccc\",\n        strokeWidth: constant(1)\n      }\n    };\n    this._discrete = \"metric\";\n    this._levels = 6;\n    this._metric = accessor(\"metric\");\n    this._outerPadding = 100;\n    this._shape = constant(\"Path\");\n    this._value = accessor(\"value\");\n  }\n\n  /**\n      Extends the draw behavior of the abstract Viz class.\n      @private\n  */\n  _draw(callback) {\n    super._draw(callback);\n    const height = this._height - this._margin.top - this._margin.bottom,\n          width = this._width - this._margin.left - this._margin.right;\n\n    const radius = min([height, width]) / 2 - this._outerPadding,\n          transform = `translate(${width / 2}, ${height / 2})`;\n\n    const nestedAxisData = nest()\n        .key(this._metric)\n        .entries(this._filteredData),\n          nestedGroupData = nest()\n        .key(this._id)\n        .key(this._metric)\n        .entries(this._filteredData);\n\n    const maxValue = max(nestedGroupData.map(h => h.values.map(d => sum(d.values, (x, i) => this._value(x, i)))).flat());\n\n    const circularAxis = Array.from(Array(this._levels).keys()).map(d => ({\n      id: d,\n      r: radius * ((d + 1) / this._levels)\n    }));\n\n    const circleConfig = configPrep.bind(this)(this._axisConfig.shapeConfig, \"shape\", \"Circle\");\n    delete circleConfig.label;\n\n    new Circle()\n      .data(circularAxis)\n      .select(\n        elem(\"g.d3plus-Radar-radial-circles\", {\n          parent: this._select,\n          enter: {transform},\n          update: {transform}\n        }).node()\n      )\n      .config(circleConfig)\n      .render();\n\n    const totalAxis = nestedAxisData.length;\n    const polarAxis = nestedAxisData\n      .map((d, i) => {\n        const width = this._outerPadding;\n        const fontSize =\n          this._shapeConfig.labelConfig.fontSize &&\n            this._shapeConfig.labelConfig.fontSize(d, i) ||\n          11;\n\n        const lineHeight = fontSize * 1.4;\n        const height = lineHeight * 2;\n        const padding = 10,\n              quadrant = parseInt(360 - 360 / totalAxis * i / 90, 10) % 4 + 1,\n              radians = tau / totalAxis * i;\n\n        let angle = 360 / totalAxis * i;\n\n        let textAnchor = \"start\";\n        let x = padding;\n\n        if (quadrant === 2 || quadrant === 3) {\n          x = -width - padding;\n          textAnchor = \"end\";\n          angle += 180;\n        }\n\n        const labelBounds = {\n          x,\n          y: -height / 2,\n          width,\n          height\n        };\n\n        return {\n          __d3plus__: true,\n          data: merge(d.values),\n          i,\n          id: d.key,\n          angle,\n          textAnchor,\n          labelBounds,\n          rotateAnchor: [-x, height / 2],\n          x: radius * Math.cos(radians),\n          y: radius * Math.sin(radians)\n        };\n      })\n      .sort((a, b) => a.key - b.key);\n\n    new Rect()\n      .data(polarAxis)\n      .rotate(d => d.angle || 0)\n      .width(0)\n      .height(0)\n      .x(d => d.x)\n      .y(d => d.y)\n      .label(d => d.id)\n      .labelBounds(d => d.labelBounds)\n      .labelConfig(this._axisConfig.shapeConfig.labelConfig)\n      .select(\n        elem(\"g.d3plus-Radar-text\", {\n          parent: this._select,\n          enter: {transform},\n          update: {transform}\n        }).node()\n      )\n      .render();\n\n    new Path()\n      .data(polarAxis)\n      .d(d => `M${0},${0} ${-d.x},${-d.y}`)\n      .select(\n        elem(\"g.d3plus-Radar-axis\", {\n          parent: this._select,\n          enter: {transform},\n          update: {transform}\n        }).node()\n      )\n      .config(configPrep.bind(this)(this._axisConfig.shapeConfig, \"shape\", \"Path\"))\n      .render();\n\n    const groupData = nestedGroupData.map(h => {\n\n      const q = h.values.map((d, i) => {\n        const value = sum(d.values, (x, i) => this._value(x, i));\n        const r = value / maxValue * radius,\n              radians = tau / totalAxis * i;\n        return {\n          x: r * Math.cos(radians),\n          y: r * Math.sin(radians)\n        };\n      });\n\n      const d = `M ${q[0].x} ${q[0].y} ${q\n        .map(l => `L ${l.x} ${l.y}`)\n        .join(\" \")} L ${q[0].x} ${q[0].y}`;\n\n      return {\n        arr: h.values.map(d => merge(d.values)),\n        id: h.key,\n        points: q,\n        d,\n        __d3plus__: true,\n        data: merge(h.values.map(d => merge(d.values)))\n      };\n\n    });\n\n    const pathConfig = configPrep.bind(this)(this._shapeConfig, \"shape\", \"Path\");\n    const events = Object.keys(pathConfig.on);\n    pathConfig.on = {};\n    for (let e = 0; e < events.length; e++) {\n      const event = events[e];\n      pathConfig.on[event] = (d, i) => {\n        const x = d.points.map(p => p.x + width / 2);\n        const y = d.points.map(p => p.y + height / 2);\n        const cursor = mouse(this._select.node());\n        const xDist = x.map(p => Math.abs(p - cursor[0]));\n        const yDist = y.map(p => Math.abs(p - cursor[1]));\n        const dists = xDist.map((d, i) => d + yDist[i]);\n        this._on[event].bind(this)(d.arr[dists.indexOf(min(dists))], i);\n      };\n    }\n\n    this._shapes.push(\n      new Path()\n        .data(groupData)\n        .d(d => d.d)\n        .select(\n          elem(\"g.d3plus-Radar-items\", {\n            parent: this._select,\n            enter: {transform},\n            update: {transform}\n          }).node()\n        )\n        .config(pathConfig)\n        .render()\n    );\n\n    return this;\n  }\n\n  /**\n      @memberof Radar\n      @desc Sets the config method used for the radial spokes, circles, and labels.\n      @param {Object} *value*\n      @chainable\n  */\n  axisConfig(_) {\n    return arguments.length ? (this._axisConfig = assign(this._axisConfig, _), this) : this._axisConfig;\n  }\n\n  /**\n      @memberof Radar\n      @desc Defines the value used as axis. If *value* is specified, sets the accessor to the specified metric function. If *value* is not specified, returns the current metric accessor.\n      @param {Function|String} *value*\n      @chainable\n  */\n  metric(_) {\n    return arguments.length ? (this._metric = typeof _ === \"function\" ? _ : accessor(_), this) : this._metric;\n  }\n\n  /**\n      @memberof Radar\n      @desc Determines how much pixel spaces to give the outer labels.\n      @param {Number} [*value* = 100]\n      @chainable\n  */\n  outerPadding(_) {\n    return arguments.length ? (this._outerPadding = _, this) : this._outerPadding;\n  }\n\n  /**\n      @memberof Radar\n      @desc If *value* is specified, sets the value accessor to the specified function or number and returns the current class instance. If *value* is not specified, returns the current value accessor.\n      @param {Function|String} *value*\n      @example\nfunction value(d) {\n  return d.value;\n}\n  */\n  value(_) {\n    return arguments.length ? (this._value = typeof _ === \"function\" ? _ : accessor(_), this) : this._value;\n  }\n\n}\n","import {default as AreaPlot} from \"./AreaPlot\";\n\n/**\n    @class StackedArea\n    @extends Area\n    @desc Creates a stacked area plot based on an array of data.\n    @example <caption>the equivalent of calling:</caption>\nnew d3plus.AreaPlot()\n  .stacked(true)\n*/\nexport default class StackedArea extends AreaPlot {\n\n  /**\n      @memberof StackedArea\n      @desc Invoked when creating a new class instance, and overrides any default parameters inherited from Plot.\n      @private\n  */\n  constructor() {\n\n    super();\n    this._stacked = true;\n\n  }\n\n}\n"],"names":["scale","data","discrete","padding","closest","map","d","reduce","acc","curr","i","arr","prev","domain","slice","reverse","Date","x","y","x2","y2","buffer","xKey","yKey","oppScale","_discrete","oppDomain","isDiscreteX","negVals","posVals","_stacked","groupedData","nest","key","group","entries","values","sum","filter","bMax","max","invert","bMin","min","discreteBuffer","axis","value","size","range","index","needsBuffer","tempAxis","copy","diverging","r","percentScale","scaleLog","Math","abs","leftPercentage","zero","outside","tempRange","pixelValue","decrease","log","log10","mod","pow","v","yScale","xScale","config","xD","yD","xR","yR","forEach","s","numericBuffer","vals","b","w","width","h","height","testLineShape","shapes","testTextBox","TextBox","defaultSize","_sizeScaleD3","_size","stackOrderAscending","series","sums","stackSum","keys","split","d3Shape","sort","a","localeCompare","stackOrderDescending","n","length","stackOffsetDiverging","order","dy","yn","yp","m","j","Plot","_annotations","_backgroundConfig","duration","fill","_barPadding","_buffer","Bar","BarBuffer","Box","BoxBuffer","Circle","CircleBuffer","Line","LineBuffer","Rect","RectBuffer","_confidenceConfig","c","_shapeConfig","stroke","fillOpacity","constant","_discreteCutoff","_groupPadding","_lineMarkerConfig","colorAssign","_id","_lineMarkers","_previousShapes","_shape","assign","Area","label","_drawLabel","labelConfig","fontResize","ariaLabel","ariaLabelStr","nested","_x","undefined","_y","_x2","_y2","textAnchor","verticalAlign","bind","fontColor","colorLegible","strokeWidth","_shapeOrder","_shapeSort","indexOf","_sizeMax","_sizeMin","_sizeScale","_stackOffset","_stackOrder","_timelineConfig","brushing","accessor","_xAxis","AxisBottom","align","_xTest","gridSize","_xConfig","_xCutoff","_x2Axis","AxisTop","_x2Test","_x2Config","_yAxis","AxisLeft","_yTest","_yConfig","gridConfig","_getPosition","id","_yCutoff","_y2Axis","AxisRight","_y2Test","_y2Config","callback","_filteredData","stackGroup","_groupBy","_ids","join","__d3plus__","hci","_confidence","_drawDepth","lci","shape","_formattedData","rExtent","extent","scales","charAt","toUpperCase","x2Exists","some","y2Exists","_height","_margin","top","bottom","opp","opp2","opps","parent","_select","transition","_transition","_width","left","right","x2Time","_time","xTime","y2Time","yTime","date","discreteKeys","domains","stackData","stackKeys","groupValues","obj","dd","a1","b1","Array","from","Set","g","ids","k","includes","fillerPoint","push","offset","p","xData","concat","x2Data","yData","y2Data","_xSort","_x2Sort","_ySort","_y2Sort","xDomain","_xDomain","x2Domain","_x2Domain","x2Scale","yDomain","_yDomain","y2Domain","_y2Domain","y2Scale","_baseline","shapeData","autoScale","fallback","userScale","deviation","mean","yConfigScale","toLowerCase","y2ConfigScale","xConfigScale","x2ConfigScale","res","res2","defaultConfig","barConfig","labels","title","tickSize","defaultX2Config","defaultY2Config","showX","showY","yC","locale","_locale","scalePadding","shapeConfig","labelBounds","rotate","yTicks","labelRotation","testGroup","elem","enter","opacity","x2Ticks","xTicks","y2Ticks","maxSize","select","node","ticks","render","yBounds","outerBounds","yWidth","y2Bounds","y2Width","xC","xRangeMax","_lineLabels","lineData","_dataCutoff","userConfig","configPrep","lineLabelConfig","fontSizeAccessor","fontSize","fontWeightAccessor","fontWeight","fontFamilyAccessor","fontFamily","paddingAccessor","labelWidths","datum","f","labelPadding","labelWidth","textWidth","largestLabel","labelSpace","xTestRange","_getRange","x2TestRange","x2Bounds","x2Height","xOffsetLeft","topOffset","xOffsetRight","xBounds","xHeight","_padding","horizontalMargin","verticalMargin","yRange","xRange","rectGroup","transform","x2Transform","xGroup","update","x2Group","xTrans","yTransform","yGroup","y2Transform","y2Group","annotationGroup","annotation","x0","x1","y0","yOffset","y1","_duration","dataIndex","discreteIndex","events","Object","_on","space","scaleType","barSize","groups","merge","uniqueIds","xMod","areaConfig","scaleFunction","area","confidenceConfig","_shapes","points","firstX","firstY","lastX","lastY","classEvents","e","globalEvents","shapeEvents","on","markers","dataShapes","_labelMarkers","exitShapes","_","arguments","lower","upper","_aggs","Viz","AreaPlot","BarChart","BoxWhisker","_tooltipConfig","_label","l","BumpChart","yConfig","tickFormat","val","xMin","getTime","startData","find","y2Config","xMax","endData","ySort","y2Sort","LinePlot","tau","PI","Radar","_axisConfig","_levels","_metric","_outerPadding","_value","radius","nestedAxisData","nestedGroupData","maxValue","flat","circularAxis","circleConfig","totalAxis","polarAxis","lineHeight","quadrant","parseInt","radians","angle","rotateAnchor","cos","sin","Path","groupData","q","pathConfig","event","cursor","mouse","xDist","yDist","dists","StackedArea"],"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"}