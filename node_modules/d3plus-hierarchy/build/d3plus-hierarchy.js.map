{"version":3,"file":"d3plus-hierarchy.js","sources":["../src/Pie.js","../src/Donut.js","../src/Pack.js","../src/nest.js","../src/Tree.js","../src/Treemap.js"],"sourcesContent":["import {min} from \"d3-array\";\nimport {arc, pie} from \"d3-shape\";\n\nimport {accessor, assign, configPrep, elem} from \"d3plus-common\";\nimport {Path} from \"d3plus-shape\";\nimport {Viz} from \"d3plus-viz\";\n\n/**\n    @class Pie\n    @extends Viz\n    @desc Uses the [d3 pie layout](https://github.com/d3/d3-shape#pies) to creates SVG arcs based on an array of data.\n*/\nexport default class Pie extends Viz {\n\n  /**\n      @memberof Pie\n      @desc Invoked when creating a new class instance, and sets any default parameters.\n      @private\n  */\n  constructor() {\n\n    super();\n\n    this._shapeConfig = assign(this._shapeConfig, {\n      ariaLabel: (d, i) =>  this._pieData ? `${++this._pieData[i].index}. ${this._drawLabel(d, i)}, ${this._value(d, i)}.` : \"\",\n      Path: {\n        labelConfig: {\n          fontResize: true\n        }\n      }\n    });\n    this._innerRadius = 0;\n    this._legendSort = (a, b) => this._value(b) - this._value(a);\n    this._padPixel = 0;\n    this._pie = pie();\n    this._sort = (a, b) => this._value(b) - this._value(a);\n    this._value = accessor(\"value\");\n  }\n\n  /**\n      Extends the draw behavior of the abstract Viz class.\n      @private\n  */\n  _draw(callback) {\n\n    super._draw(callback);\n\n    const height = this._height - this._margin.top - this._margin.bottom,\n          width = this._width - this._margin.left - this._margin.right;\n\n    const outerRadius = min([width, height]) / 2;\n\n    const pieData = this._pieData = this._pie\n      .padAngle(this._padAngle || this._padPixel / outerRadius)\n      .sort(this._sort)\n      .value(this._value)\n      (this._filteredData);\n\n    pieData.forEach((d, i) => {\n      d.__d3plus__ = true;\n      d.i = i;\n    });\n\n    const arcData = arc()\n      .innerRadius(this._innerRadius)\n      .outerRadius(outerRadius);\n\n    const transform = `translate(${width / 2 + this._margin.left}, ${height / 2 + this._margin.top})`;\n    this._shapes.push(new Path()\n      .data(pieData)\n      .d(arcData)\n      .select(elem(\"g.d3plus-Pie\", {\n        parent: this._select,\n        enter: {transform},\n        update: {transform}\n      }).node())\n      .config({\n        id: d => this._ids(d).join(\"-\"),\n        x: 0,\n        y: 0\n      })\n      .label(this._drawLabel)\n      .config(configPrep.bind(this)(this._shapeConfig, \"shape\", \"Path\"))\n      .render());\n\n    return this;\n  }\n\n  /**\n      @memberof Pie\n      @desc If *value* is specified, sets the inner radius accessor to the specified function or number and returns the current class instance. If *value* is not specified, returns the current inner radius accessor.\n      @param {Function|Number} [*value*]\n  */\n  innerRadius(_) {\n    return arguments.length ? (this._innerRadius = _, this) : this._innerRadius;\n  }\n\n  /**\n      @memberof Pie\n      @desc If *value* is specified, sets the arc padding to the specified radian value and returns the current class instance. If *value* is not specified, returns the current radian padding.\n      @param {Number} [*value*]\n  */\n  padAngle(_) {\n    return arguments.length ? (this._padAngle = _, this) : this._padAngle;\n  }\n\n  /**\n      @memberof Pie\n      @desc If *value* is specified, sets the arc padding to the specified pixel value and returns the current class instance. If *value* is not specified, returns the current pixel padding.\n      @param {Number} [*value*]\n  */\n  padPixel(_) {\n    return arguments.length ? (this._padPixel = _, this) : this._padPixel;\n  }\n\n  /**\n      @memberof Pie\n      @desc If *comparator* is specified, sets the sort order for the pie slices using the specified comparator function. If *comparator* is not specified, returns the current sort order, which defaults to descending order by the associated input data's numeric value attribute.\n      @param {Array} [*comparator*]\n      @example\nfunction comparator(a, b) {\n  return b.value - a.value;\n}\n  */\n  sort(_) {\n    return arguments.length ? (this._sort = _, this) : this._sort;\n  }\n\n  /**\n      @memberof Pie\n      @desc If *value* is specified, sets the value accessor to the specified function or number and returns the current class instance. If *value* is not specified, returns the current value accessor.\n      @param {Function|String} *value*\n      @example\nfunction value(d) {\n  return d.value;\n}\n  */\n  value(_) {\n    return arguments.length ? (this._value = typeof _ === \"function\" ? _ : accessor(_), this) : this._value;\n  }\n}\n","import {min} from \"d3-array\";\nimport {default as Pie} from \"./Pie\";\n\n/**\n    @class Donut\n    @extends Pie\n    @desc Extends the Pie visualization to create a donut chart.\n*/\nexport default class Donut extends Pie {\n\n  /**\n      @memberof Donut\n      @desc Invoked when creating a new class instance, and sets any default parameters.\n      @private\n  */\n  constructor() {\n\n    super();\n\n    this._innerRadius = () => min([\n      this._width - this._margin.left - this._margin.right,\n      this._height - this._margin.top - this._margin.bottom\n    ]) / 4;\n    this._padPixel = 2;\n\n  }\n\n}\n","/**\n    @external Viz\n    @see https://github.com/d3plus/d3plus-viz#Viz\n*/\nimport {nest} from \"d3-collection\";\nimport {hierarchy, pack} from \"d3-hierarchy\";\n\nimport {accessor, assign, configPrep, constant, elem} from \"d3plus-common\";\nimport {Circle} from \"d3plus-shape\";\nimport {Viz} from \"d3plus-viz\";\n\nconst recursionCircles = (d, arr = []) => {\n  if (d.values) {\n    d.values.forEach(h => {\n      arr.push(h);\n      recursionCircles(h, arr);\n    });\n  }\n  else {\n    arr.push(d);\n  }\n  return arr;\n};\n\n/**\n    @class Pack\n    @extends Viz\n    @desc Uses the [d3 pack layout](https://github.com/d3/d3-hierarchy#pack) to creates Circle Packing chart based on an array of data.\n*/\nexport default class Pack extends Viz {\n\n  /**\n      @memberof Pack\n      @desc Invoked when creating a new class instance, and sets any default parameters.\n      @private\n  */\n  constructor() {\n\n    super();\n\n    this._layoutPadding = 1;\n    this._on.mouseenter = () => {};\n\n    const defaultMouseMoveLegend = this._on[\"mousemove.legend\"];\n    this._on[\"mousemove.legend\"] = (d, i) => {\n      defaultMouseMoveLegend(d, i);\n\n      const ids = this._ids(d, i);\n      const hoverData = recursionCircles(d);\n\n      this.hover(h => {\n        const hover = Object.keys(h).filter(key => key !== \"value\").every(key => d[key] && d[key].includes(h[key]));\n\n        if (hover) hoverData.push(h);\n        else if (ids.includes(h.key)) hoverData.push(...recursionCircles(h, [h]));\n\n        return hoverData.includes(h);\n      });\n\n    };\n    const defaultMouseMoveShape = this._on[\"mousemove.shape\"];\n    this._on[\"mousemove.shape\"] = (d, i) => {\n      if (d.__d3plusTooltip__) defaultMouseMoveShape(d, i);\n      this.hover(h => recursionCircles(d, [d]).includes(h));\n    };\n    this._pack = pack();\n    this._packOpacity = constant(0.25);\n    this._shape = constant(\"Circle\");\n    this._shapeConfig = assign(this._shapeConfig, {\n      Circle: {\n        label: d => d.parent && !d.children ? d.id : false,\n        labelConfig: {\n          fontResize: true\n        },\n        opacity: d => d.__d3plusOpacity__\n      }\n    });\n    this._sort = (a, b) => b.value - a.value;\n    this._sum = accessor(\"value\");\n\n  }\n\n  /**\n      Extends the draw behavior of the abstract Viz class.\n      @private\n  */\n  _draw(callback) {\n    super._draw(callback);\n\n    const height = this._height - this._margin.top - this._margin.bottom,\n          width = this._width - this._margin.left - this._margin.right;\n\n    const diameter = Math.min(height, width);\n    const transform = `translate(${(width - diameter) / 2}, ${(height - diameter) / 2})`;\n\n    let nestedData = nest();\n    for (let i = 0; i <= this._drawDepth; i++) nestedData.key(this._groupBy[i]);\n    nestedData = nestedData.entries(this._filteredData);\n\n    const packData = this._pack\n      .padding(this._layoutPadding)\n      .size([diameter, diameter])\n      (hierarchy({key: nestedData.key, values: nestedData}, d => d.values).sum(this._sum).sort(this._sort))\n      .descendants();\n\n    packData.forEach((d, i) => {\n      d.__d3plus__ = true;\n      d.i = i;\n      d.id = d.parent ? d.parent.data.key : null;\n      d.data.__d3plusOpacity__ = d.height ? this._packOpacity(d.data, i) : 1;\n      d.data.__d3plusTooltip__ = !d.height ? true : false;\n    });\n\n    this._shapes.push(\n      new Circle()\n        .data(packData)\n        .select(\n          elem(\"g.d3plus-Pack\", {\n            parent: this._select,\n            enter: {transform},\n            update: {transform}\n          }).node()\n        )\n        .config(configPrep.bind(this)(this._shapeConfig, \"shape\", \"Circle\"))\n        .render()\n    );\n\n    return this;\n  }\n\n  /**\n      @memberof Pack\n      @desc If *value* is specified, sets the hover method to the specified function and returns the current class instance.\n      @param {Function} [*value*]\n      @chainable\n   */\n  hover(_) {\n    this._hover = _;\n    this._shapes.forEach(s => s.hover(_));\n\n    if (this._legend) this._legendClass.hover(_);\n    return this;\n  }\n\n  /**\n      @memberof Pack\n      @desc If *value* is specified, sets the opacity accessor to the specified function or number and returns the current class instance. If *value* is not specified, returns the current pack opacity accessor.\n      @param {Function|Number} [*value*]\n  */\n  layoutPadding(_) {\n    return arguments.length ? (this._layoutPadding = _, this) : this._layoutPadding;\n  }\n\n  /**\n      @memberof Pack\n      @desc If *value* is specified, sets the padding accessor to the specified function or number and returns the current class instance. If *value* is not specified, returns the current pack opacity accessor.\n      @param {Function|Number} [*value*]\n  */\n  packOpacity(_) {\n    return arguments.length ? (this._packOpacity = typeof _ === \"function\" ? _ : constant(_), this) : this._packOpacity;\n  }\n\n  /**\n      @memberof Pack\n      @desc If *comparator* is specified, sets the sort order for the pack using the specified comparator function. If *comparator* is not specified, returns the current group sort order, which defaults to descending order by the associated input data's numeric value attribute.\n      @param {Array} [*comparator*]\n      @example\nfunction comparator(a, b) {\n  return b.value - a.value;\n}\n  */\n  sort(_) {\n    return arguments.length ? (this._sort = _, this) : this._sort;\n  }\n\n\n  /**\n      @memberof Pack\n      @desc If *value* is specified, sets the sum accessor to the specified function or number and returns the current class instance. If *value* is not specified, returns the current sum accessor.\n      @param {Function|Number} [*value*]\n      @example\nfunction sum(d) {\n  return d.sum;\n}\n  */\n  sum(_) {\n    return arguments.length ? (this._sum = typeof _ === \"function\" ? _ : accessor(_), this) : this._sum;\n  }\n}\n","import {nest} from \"d3-collection\";\n\n/**\n    @function nest\n    @summary Extends the base behavior of d3.nest to allow for multiple depth levels.\n    @param {Array} *data* The data array to be nested.\n    @param {Array} *keys* An array of key accessors that signify each nest level.\n*/\nexport default function(data, keys) {\n\n  if (!(keys instanceof Array)) keys = [keys];\n\n  const dataNest = nest();\n  for (let i = 0; i < keys.length; i++) dataNest.key(keys[i]);\n  const nestedData = dataNest.entries(data);\n\n  return bubble(nestedData);\n\n}\n\n/**\n    Bubbles up values that do not nest to the furthest key.\n    @param {Array} *values* The \"values\" of a nest object.\n    @private\n*/\nfunction bubble(values) {\n\n  return values.map(d => {\n\n    if (d.key && d.values) {\n      if (d.values[0].key === \"undefined\") return d.values[0].values[0];\n      else d.values = bubble(d.values);\n    }\n\n    return d;\n\n  });\n\n}\n","import {extent, min, max} from \"d3-array\";\nimport {hierarchy, tree} from \"d3-hierarchy\";\nimport {scaleLinear} from \"d3-scale\";\n\nimport {assign, configPrep, constant, elem, merge} from \"d3plus-common\";\nimport {Circle, Path} from \"d3plus-shape\";\nimport {Viz} from \"d3plus-viz\";\n\nimport {default as nest} from \"./nest\";\n\n/**\n    @class Tree\n    @extends Viz\n    @desc Uses d3's [tree layout](https://github.com/d3/d3-hierarchy#tree) to create a tidy tree chart based on an array of data.\n*/\nexport default class Tree extends Viz {\n\n  /**\n      @memberof Tree\n      @desc Invoked when creating a new class instance, and sets any default parameters.\n      @private\n  */\n  constructor() {\n\n    super();\n\n    this._orient = \"vertical\";\n    this._separation = (a, b) => a.parent === b.parent ? 1 : 2;\n\n    this._shape = constant(\"Circle\");\n    this._shapeConfig = assign(this._shapeConfig, {\n      ariaLabel: (d, i) =>  this._treeData ? `${this._treeData[i].depth}. ${this._drawLabel(d, i)}.` : \"\",\n      labelConfig: {\n        fontColor: \"#444\"\n      },\n      Path: {\n        fill: \"none\",\n        stroke: \"#ccc\",\n        strokeWidth: 1\n      },\n      r: constant(5),\n      width: constant(10),\n      height: constant(10)\n    });\n\n    this._tree = tree();\n\n  }\n\n  /**\n      Extends the draw behavior of the abstract Viz class.\n      @private\n  */\n  _draw(callback) {\n\n    super._draw(callback);\n\n    const height = this._orient === \"vertical\"\n            ? this._height - this._margin.top - this._margin.bottom\n            : this._width - this._margin.left - this._margin.right,\n          left = this._orient === \"vertical\" ? \"left\" : \"top\",\n          that = this,\n          transform = `translate(${this._margin.left}, ${this._margin.top})`,\n          width = this._orient === \"horizontal\"\n            ? this._height - this._margin.top - this._margin.bottom\n            : this._width - this._margin.left - this._margin.right;\n\n    const treeData = this._treeData = this._tree\n      .separation(this._separation)\n      .size([width, height])\n      (hierarchy({\n        key: \"root\",\n        values: nest(this._filteredData, this._groupBy.slice(0, this._drawDepth + 1))\n      }, d => d.key && d.values ? d.values : null).sort(this._sort))\n      .descendants()\n      .filter(d => d.depth <= this._groupBy.length && d.parent);\n\n    /**\n        Merges the values of a given nest branch.\n        @private\n    */\n    function flattenBranchData(branch) {\n      return merge(branch.values.map(l => l.key && l.values ? flattenBranchData(l) : l), that._aggs);\n    }\n\n    treeData.forEach((d, i) => {\n      if (d.data.key && d.data.values) d.data = flattenBranchData(d.data);\n      d.__d3plus__ = true;\n      d.i = i;\n    });\n\n    let r = this._shapeConfig.r;\n    if (typeof r !== \"function\") r = constant(r);\n    const rBufferRoot = max(treeData, d => d.depth === 1 ? r(d.data, d.i) : 0);\n    const rBufferEnd = max(treeData, d => d.children ? 0 : r(d.data, d.i));\n\n    const yExtent = extent(treeData, d => d.y);\n    this._labelHeight = min([\n      this._orient === \"vertical\" ? 50 : 100,\n      (yExtent[1] - rBufferRoot - rBufferEnd) / (this._groupBy.length + 1)\n    ]);\n\n    this._labelWidths = nest(treeData, d => d.depth)\n      .map(d => d.values.reduce((num, v, i) => {\n        const next = i < d.values.length - 1 ? d.values[i + 1].x : width + this._margin[left],\n              prev = i ? d.values[i - 1].x : this._margin[left];\n        return min([num, next - v.x, v.x - prev]);\n      }, width));\n\n    const yScale = scaleLinear()\n      .domain(yExtent)\n      .range([rBufferRoot + this._labelHeight, height - rBufferEnd - this._labelHeight]);\n\n    treeData.forEach(d => {\n      const val = yScale(d.y);\n      if (this._orient === \"horizontal\") {\n        d.y = d.x;\n        d.x = val;\n      }\n      else d.y = val;\n    });\n\n    const elemObject = {parent: this._select, enter: {transform}, update: {transform}};\n\n    this._shapes.push(new Path()\n      .data(treeData.filter(d => d.depth > 1))\n      .select(elem(\"g.d3plus-Tree-Links\", elemObject).node())\n      .config(configPrep.bind(this)(this._shapeConfig, \"shape\", \"Path\"))\n      .config({\n        d: d => {\n\n          let r = this._shapeConfig.r;\n\n          if (typeof r === \"function\") r = r(d.data, d.i);\n\n          const px = d.parent.x - d.x + (this._orient === \"vertical\" ? 0 : r),\n                py = d.parent.y - d.y + (this._orient === \"vertical\" ? r : 0),\n                x = this._orient === \"vertical\" ? 0 : -r,\n                y = this._orient === \"vertical\" ? -r : 0;\n\n          return this._orient === \"vertical\"\n            ? `M${x},${y}C${x},${(y + py) / 2} ${px},${(y + py) / 2} ${px},${py}`\n            : `M${x},${y}C${(x + px) / 2},${y} ${(x + px) / 2},${py} ${px},${py}`;\n\n        },\n        id: (d, i) => this._ids(d, i).join(\"-\")\n      })\n      .render());\n\n    this._shapes.push(new Circle()\n      .data(treeData)\n      .select(elem(\"g.d3plus-Tree-Shapes\", elemObject).node())\n      .config(configPrep.bind(this)(this._shapeConfig, \"shape\", \"Circle\"))\n      .config({\n        id: (d, i) => this._ids(d, i).join(\"-\"),\n        label: (d, i) => {\n          if (this._label) return this._label(d.data, i);\n          const ids = this._ids(d, i).slice(0, d.depth);\n          return ids[ids.length - 1];\n        },\n        labelConfig: {\n          textAnchor: d => this._orient === \"vertical\" ? \"middle\"\n          : d.data.children && d.data.depth !== this._groupBy.length ? \"end\" : \"start\",\n          verticalAlign: d => this._orient === \"vertical\" ? d.data.depth === 1 ? \"bottom\" : \"top\" : \"middle\"\n        },\n        hitArea: (d, i, s) => {\n\n          const h = this._labelHeight,\n                w = this._labelWidths[d.depth - 1];\n\n          return {\n            width: this._orient === \"vertical\" ? w : s.r * 2 + w,\n            height: this._orient === \"horizontal\" ? h : s.r * 2 + h,\n            x: this._orient === \"vertical\" ? -w / 2 : d.children && d.depth !== this._groupBy.length ? -(s.r + w) : -s.r,\n            y: this._orient === \"horizontal\" ? -h / 2 : d.children && d.depth !== this._groupBy.length ? -(s.r + this._labelHeight) : -s.r\n          };\n\n        },\n        labelBounds: (d, i, s) => {\n\n          const h = this._labelHeight,\n                height = this._orient === \"vertical\" ? \"height\" : \"width\",\n                w = this._labelWidths[d.depth - 1],\n                width = this._orient === \"vertical\" ? \"width\" : \"height\",\n                x = this._orient === \"vertical\" ? \"x\" : \"y\",\n                y = this._orient === \"vertical\" ? \"y\" : \"x\";\n\n          return {\n            [width]: w,\n            [height]: h,\n            [x]: -w / 2,\n            [y]: d.children && d.depth !== this._groupBy.length ? -(s.r + h) : s.r\n          };\n\n        }\n      })\n      .render());\n\n    return this;\n\n  }\n\n  /**\n      @memberof Tree\n      @desc If *value* is specified, sets the orientation to the specified value. If *value* is not specified, returns the current orientation.\n      @param {String} [*value* = \"vertical\"] Accepts either \"vertical\" or \"horizontal\".\n  */\n  orient(_) {\n    return arguments.length ? (this._orient = _, this) : this._orient;\n  }\n\n  /**\n      @memberof Tree\n      @desc If *value* is specified, sets the separation accessor to the specified function. If *value* is not specified, returns the current separation accessor.\n\nFrom the [d3-hierarchy documentation](https://github.com/d3/d3-hierarchy#tree_separation):\n> The separation accessor is used to separate neighboring nodes. The separation function is passed two nodes a and b, and must return the desired separation. The nodes are typically siblings, though the nodes may be more distantly related if the layout decides to place such nodes adjacent.\n      @param {Function} [*value*]\n      @example\nfunction separation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n  */\n  separation(_) {\n    return arguments.length ? (this._separation = _, this) : this._separation;\n  }\n\n}\n","import {sum} from \"d3-array\";\r\nimport {nest} from \"d3-collection\";\r\nimport {hierarchy, treemap, treemapSquarify} from \"d3-hierarchy\";\r\n\r\nimport {accessor, assign, configPrep, constant, elem, merge} from \"d3plus-common\";\r\nimport {formatAbbreviate} from \"d3plus-format\";\r\nimport {Rect} from \"d3plus-shape\";\r\nimport {Viz} from \"d3plus-viz\";\r\n\r\n/**\r\n    @class Treemap\r\n    @extends Viz\r\n    @desc Uses the [d3 treemap layout](https://github.com/mbostock/d3/wiki/Treemap-Layout) to creates SVG rectangles based on an array of data. See [this example](https://d3plus.org/examples/d3plus-hierarchy/getting-started/) for help getting started using the treemap generator.\r\n*/\r\nexport default class Treemap extends Viz {\r\n\r\n  /**\r\n    @memberof Treemap\r\n    @desc Invoked when creating a new class instance, and sets any default parameters.\r\n    @private\r\n  */\r\n  constructor() {\r\n\r\n    super();\r\n\r\n    this._layoutPadding = 1;\r\n    this._legendSort = (a, b) => this._sum(b) - this._sum(a);\r\n    this._legendTooltip = assign({}, this._legendTooltip, {\r\n      tbody: []\r\n    });\r\n    this._shapeConfig = assign({}, this._shapeConfig, {\r\n      ariaLabel: (d, i) => {\r\n        const rank = this._rankData ? `${this._rankData.indexOf(d) + 1}. ` : \"\";\r\n        return `${rank}${this._drawLabel(d, i)}, ${this._sum(d, i)}.`;\r\n      },\r\n      labelConfig: {\r\n        fontMax: 20,\r\n        fontMin: 8,\r\n        fontResize: true,\r\n        padding: 5\r\n      }\r\n    });\r\n    this._sort = (a, b) => {\r\n      const aggA = isAggregated(a);\r\n      const aggB = isAggregated(b);\r\n      return aggA && !aggB ? 1 : !aggA && aggB ? -1 : b.value - a.value;\r\n    };\r\n    this._sum = accessor(\"value\");\r\n    this._thresholdKey = this._sum;\r\n    this._tile = treemapSquarify;\r\n    this._tooltipConfig = assign({}, this._tooltipConfig, {\r\n      tbody: [\r\n        [() => this._translate(\"Share\"), (d, i, x) => `${formatAbbreviate(x.share * 100, this._locale)}%`]\r\n      ]\r\n    });\r\n    this._treemap = treemap().round(true);\r\n\r\n    const isAggregated = leaf => leaf.children && leaf.children.length === 1 && leaf.children[0].data._isAggregation;\r\n\r\n  }\r\n\r\n  /**\r\n      @memberof Treemap\r\n      @desc Extends the draw behavior of the abstract Viz class.\r\n      @private\r\n  */\r\n  _draw(callback) {\r\n\r\n    super._draw(callback);\r\n\r\n    let nestedData = nest();\r\n    for (let i = 0; i <= this._drawDepth; i++) nestedData.key(this._groupBy[i]);\r\n    nestedData = nestedData.entries(this._filteredData);\r\n\r\n    const tmapData = this._treemap\r\n      .padding(this._layoutPadding)\r\n      .size([\r\n        this._width - this._margin.left - this._margin.right,\r\n        this._height - this._margin.top - this._margin.bottom\r\n      ])\r\n      .tile(this._tile)\r\n      (hierarchy({values: nestedData}, d => d.values).sum(this._sum).sort(this._sort));\r\n\r\n    const shapeData = [], that = this;\r\n\r\n    /**\r\n        @memberof Treemap\r\n        @desc Flattens and merges treemap data.\r\n        @private\r\n    */\r\n    function extractLayout(children) {\r\n      for (let i = 0; i < children.length; i++) {\r\n        const node = children[i];\r\n        if (node.depth <= that._drawDepth) extractLayout(node.children);\r\n        else {\r\n          const index = node.data.values.length === 1 ? that._filteredData.indexOf(node.data.values[0]) : undefined;\r\n          node.__d3plus__ = true;\r\n          node.id = node.data.key;\r\n          node.i = index > -1 ? index : undefined;\r\n          node.data = merge(node.data.values);\r\n          node.x = node.x0 + (node.x1 - node.x0) / 2;\r\n          node.y = node.y0 + (node.y1 - node.y0) / 2;\r\n          shapeData.push(node);\r\n        }\r\n      }\r\n    }\r\n    if (tmapData.children) extractLayout(tmapData.children);\r\n\r\n    this._rankData = shapeData.sort(this._sort).map(d => d.data);\r\n    const total = tmapData.value;\r\n    shapeData.forEach(d => {\r\n      d.share = this._sum(d.data, d.i) / total;\r\n    });\r\n\r\n    const transform = `translate(${this._margin.left}, ${this._margin.top})`;\r\n    const rectConfig = configPrep.bind(this)(this._shapeConfig, \"shape\", \"Rect\");\r\n    const fontMin = rectConfig.labelConfig.fontMin;\r\n    const padding = rectConfig.labelConfig.padding;\r\n\r\n    this._shapes.push(new Rect()\r\n      .data(shapeData)\r\n      .label(d => [\r\n        this._drawLabel(d.data, d.i),\r\n        `${formatAbbreviate(d.share * 100, this._locale)}%`\r\n      ])\r\n      .select(elem(\"g.d3plus-Treemap\", {\r\n        parent: this._select,\r\n        enter: {transform},\r\n        update: {transform}\r\n      }).node())\r\n      .config({\r\n        height: d => d.y1 - d.y0,\r\n        labelBounds: (d, i, s) => {\r\n          const h = s.height;\r\n          let sh = Math.min(50, (h - padding * 2) * 0.5);\r\n          if (sh < fontMin) sh = 0;\r\n          return [\r\n            {width: s.width, height: h - sh, x: -s.width / 2, y: -h / 2},\r\n            {width: s.width, height: sh + padding * 2, x: -s.width / 2, y: h / 2 - sh - padding * 2}\r\n          ];\r\n        },\r\n        labelConfig: {\r\n          textAnchor: (d, i, x) => {\r\n            let line, parent = x;\r\n            while (typeof line === \"undefined\" && parent) {\r\n              if (typeof parent.l !== \"undefined\") line = parent.l;\r\n              parent = parent.__d3plusParent__;\r\n            }\r\n            return line ? \"middle\" : \"start\";\r\n          },\r\n          verticalAlign: (d, i, x) => {\r\n            let line, parent = x;\r\n            while (typeof line === \"undefined\" && parent) {\r\n              if (typeof parent.l !== \"undefined\") line = parent.l;\r\n              parent = parent.__d3plusParent__;\r\n            }\r\n            return line ? \"bottom\" : \"top\";\r\n          }\r\n        },\r\n        width: d => d.x1 - d.x0\r\n      })\r\n      .config(rectConfig)\r\n      .render());\r\n\r\n    return this;\r\n\r\n  }\r\n\r\n  /**\r\n   * Applies the threshold algorithm for Treemaps.\r\n   * @param {Array} data The data to process.\r\n   */\r\n  _thresholdFunction(data) {\r\n    const aggs = this._aggs;\r\n    const drawDepth = this._drawDepth;\r\n    const groupBy = this._groupBy;\r\n    const threshold = this._threshold;\r\n    const thresholdKey = this._thresholdKey;\r\n\r\n    const totalSum = sum(data, thresholdKey);\r\n\r\n    if (threshold && thresholdKey) {\r\n      return thresholdByDepth(data, 0);\r\n    }\r\n\r\n    /**\r\n     * @memberof Treemap\r\n     * @desc Explores the data tree recursively and merges elements under the indicated threshold.\r\n     * @param {object[]} branchData The current subset of the dataset to work on.\r\n     * @param {number} depth The depth of the current branch.\r\n     * @private\r\n     */\r\n    function thresholdByDepth(branchData, depth) {\r\n      if (depth < drawDepth) {\r\n        return nest()\r\n          .key(groupBy[depth])\r\n          .entries(branchData)\r\n          .reduce((bulk, leaf) => {\r\n            const subBranchData = thresholdByDepth(leaf.values, depth + 1);\r\n            return bulk.concat(subBranchData);\r\n          }, []);\r\n      }\r\n      \r\n      if (depth === drawDepth) {\r\n        const thresholdPercent = Math.min(1, Math.max(0, threshold(branchData)));\r\n        \r\n        if (!isFinite(thresholdPercent) || isNaN(thresholdPercent)) return null;\r\n        \r\n        const removedItems = [];\r\n        const branchDataCopy = branchData.slice();\r\n        const thresholdValue = thresholdPercent * totalSum;\r\n\r\n        let n = branchDataCopy.length;\r\n        while (n--) {\r\n          const datum = branchDataCopy[n];\r\n          if (thresholdKey(datum) < thresholdValue) {\r\n            const index = branchDataCopy.indexOf(datum);\r\n            branchDataCopy.splice(index, 1);\r\n            removedItems.push(datum);\r\n          }\r\n        }\r\n\r\n        if (removedItems.length > 0) {\r\n          const mergedItem = merge(removedItems, aggs);\r\n          mergedItem._isAggregation = true;\r\n          mergedItem._threshold = thresholdPercent;\r\n          branchDataCopy.push(mergedItem);\r\n        }\r\n\r\n        return branchDataCopy;\r\n      }\r\n\r\n      throw new Error(\"Depth is higher than the amount of grouping levels.\");\r\n    }\r\n\r\n    return data;\r\n  }\r\n\r\n  /**\r\n      @memberof Treemap\r\n      @desc If *value* is specified, sets the inner and outer padding accessor to the specified function or number and returns the current class instance. If *value* is not specified, returns the current padding accessor.\r\n      @param {Function|Number} [*value*]\r\n  */\r\n  layoutPadding(_) {\r\n    return arguments.length ? (this._layoutPadding = typeof _ === \"function\" ? _ : constant(_), this) : this._layoutPadding;\r\n  }\r\n\r\n  /**\r\n      @memberof Treemap\r\n      @desc If *comparator* is specified, sets the sort order for the treemap using the specified comparator function. If *comparator* is not specified, returns the current group sort order, which defaults to descending order by the associated input data's numeric value attribute.\r\n      @param {Array} [*comparator*]\r\n      @example\r\nfunction comparator(a, b) {\r\n  return b.value - a.value;\r\n}\r\n  */\r\n  sort(_) {\r\n    return arguments.length ? (this._sort = _, this) : this._sort;\r\n  }\r\n\r\n  /**\r\n      @memberof Treemap\r\n      @desc If *value* is specified, sets the sum accessor to the specified function or number and returns the current class instance. If *value* is not specified, returns the current sum accessor.\r\n      @param {Function|Number} [*value*]\r\n      @example\r\nfunction sum(d) {\r\n  return d.sum;\r\n}\r\n  */\r\n  sum(_) {\r\n    if (arguments.length) {\r\n      this._sum = typeof _ === \"function\" ? _ : accessor(_);\r\n      this._thresholdKey = this._sum;\r\n      return this;\r\n    }\r\n    else return this._sum;\r\n  }\r\n\r\n  /**\r\n      @memberof Treemap\r\n      @desc If *value* is specified, sets the [tiling method](https://github.com/d3/d3-hierarchy#treemap-tiling) to the specified function and returns the current class instance. If *value* is not specified, returns the current [tiling method](https://github.com/d3/d3-hierarchy#treemap-tiling).\r\n      @param {Function} [*value*]\r\n  */\r\n  tile(_) {\r\n    return arguments.length ? (this._tile = _, this) : this._tile;\r\n  }\r\n\r\n}\r\n"],"names":["Pie","_shapeConfig","assign","ariaLabel","d","i","_pieData","index","_drawLabel","_value","Path","labelConfig","fontResize","_innerRadius","_legendSort","a","b","_padPixel","_pie","pie","_sort","accessor","callback","height","_height","_margin","top","bottom","width","_width","left","right","outerRadius","min","pieData","padAngle","_padAngle","sort","value","_filteredData","forEach","__d3plus__","arcData","arc","innerRadius","transform","_shapes","push","data","select","elem","parent","_select","enter","update","node","config","id","_ids","join","x","y","label","configPrep","bind","render","_","arguments","length","Viz","Donut","recursionCircles","arr","values","h","Pack","_layoutPadding","_on","mouseenter","defaultMouseMoveLegend","ids","hoverData","hover","Object","keys","filter","key","every","includes","defaultMouseMoveShape","__d3plusTooltip__","_pack","pack","_packOpacity","constant","_shape","Circle","children","opacity","__d3plusOpacity__","_sum","diameter","Math","nestedData","nest","_drawDepth","_groupBy","entries","packData","padding","size","hierarchy","sum","descendants","_hover","s","_legend","_legendClass","Array","dataNest","bubble","map","Tree","_orient","_separation","_treeData","depth","fontColor","fill","stroke","strokeWidth","r","_tree","tree","that","treeData","separation","slice","flattenBranchData","branch","merge","l","_aggs","rBufferRoot","max","rBufferEnd","yExtent","extent","_labelHeight","_labelWidths","reduce","num","v","next","prev","yScale","scaleLinear","domain","range","val","elemObject","px","py","_label","textAnchor","verticalAlign","hitArea","w","labelBounds","Treemap","_legendTooltip","tbody","rank","_rankData","indexOf","fontMax","fontMin","aggA","isAggregated","aggB","_thresholdKey","_tile","treemapSquarify","_tooltipConfig","_translate","formatAbbreviate","share","_locale","_treemap","treemap","round","leaf","_isAggregation","tmapData","tile","shapeData","extractLayout","undefined","x0","x1","y0","y1","total","rectConfig","Rect","sh","line","__d3plusParent__","aggs","drawDepth","groupBy","threshold","_threshold","thresholdKey","totalSum","thresholdByDepth","branchData","bulk","subBranchData","concat","thresholdPercent","isFinite","isNaN","removedItems","branchDataCopy","thresholdValue","n","datum","splice","mergedItem","Error"],"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"}