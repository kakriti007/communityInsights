{"version":3,"file":"d3plus-network.js","sources":["../src/Network.js","../src/Rings.js","../src/Sankey.js"],"sourcesContent":["/**\n    @external Viz\n    @see https://github.com/d3plus/d3plus-viz#Viz\n*/\n\nimport {extent, max, mean, min, merge} from \"d3-array\";\nimport {nest} from \"d3-collection\";\nimport {forceLink, forceManyBody, forceSimulation} from \"d3-force\";\nimport {polygonHull} from \"d3-polygon\";\nimport * as scales from \"d3-scale\";\nimport {zoomTransform} from \"d3-zoom\";\n\nimport {accessor, assign, configPrep, constant, elem} from \"d3plus-common\";\nimport * as shapes from \"d3plus-shape\";\nimport {dataLoad as load, Viz} from \"d3plus-viz\";\n\n/**\n    @class Network\n    @extends external:Viz\n    @desc Creates a network visualization based on a defined set of nodes and edges. [Click here](http://d3plus.org/examples/d3plus-network/getting-started/) for help getting started using the Network class.\n*/\nexport default class Network extends Viz {\n\n  /**\n      @memberof Network\n      @desc Invoked when creating a new class instance, and sets any default parameters.\n      @private\n  */\n  constructor() {\n\n    super();\n    this._links = [];\n    this._linkSize = constant(1);\n    this._linkSizeMin = 1;\n    this._linkSizeScale = \"sqrt\";\n    this._noDataMessage = false;\n    this._nodes = [];\n    this._on[\"click.shape\"] = (d, i) => {\n\n      this._tooltipClass.data([]).render();\n\n      if (this._hover && this._drawDepth >= this._groupBy.length - 1) {\n\n        const id = `${this._nodeGroupBy && this._nodeGroupBy[this._drawDepth](d, i) ? this._nodeGroupBy[this._drawDepth](d, i) : this._id(d, i)}`;\n\n        if (this._focus && this._focus === id) {\n\n          this.active(false);\n          this._on.mouseenter.bind(this)(d, i);\n\n          this._focus = undefined;\n          this._zoomToBounds(null);\n\n        }\n        else {\n\n          this.hover(false);\n\n          const links = this._linkLookup[id],\n                node = this._nodeLookup[id];\n\n          const filterIds = [id];\n          let xDomain = [node.x - node.r, node.x + node.r],\n              yDomain = [node.y - node.r, node.y + node.r];\n\n          links.forEach(l => {\n            filterIds.push(l.id);\n            if (l.x - l.r < xDomain[0]) xDomain[0] = l.x - l.r;\n            if (l.x + l.r > xDomain[1]) xDomain[1] = l.x + l.r;\n            if (l.y - l.r < yDomain[0]) yDomain[0] = l.y - l.r;\n            if (l.y + l.r > yDomain[1]) yDomain[1] = l.y + l.r;\n          });\n\n          this.active((h, x) => {\n            if (h.source && h.target) return h.source.id === id || h.target.id === id;\n            else return filterIds.includes(`${this._ids(h, x)[this._drawDepth]}`);\n          });\n\n          this._focus = id;\n          const t = zoomTransform(this._container.node());\n          xDomain = xDomain.map(d => d * t.k + t.x);\n          yDomain = yDomain.map(d => d * t.k + t.y);\n          this._zoomToBounds([[xDomain[0], yDomain[0]], [xDomain[1], yDomain[1]]]);\n\n        }\n\n      }\n\n    };\n    this._on[\"click.legend\"] = (d, i) => {\n\n      const ids = this._id(d);\n      let id = this._ids(d);\n      id = id[id.length - 1];\n\n      if (this._hover && this._drawDepth >= this._groupBy.length - 1) {\n\n        if (this._focus && this._focus === ids) {\n\n          this.active(false);\n\n          this._focus = undefined;\n          this._zoomToBounds(null);\n\n        }\n        else {\n\n          this.hover(false);\n\n          const nodes = ids.map(id => this._nodeLookup[id]);\n\n          const filterIds = [`${id}`];\n          let xDomain = [nodes[0].x - nodes[0].r, nodes[0].x + nodes[0].r],\n              yDomain = [nodes[0].y - nodes[0].r, nodes[0].y + nodes[0].r];\n\n          nodes.forEach(l => {\n            filterIds.push(l.id);\n            if (l.x - l.r < xDomain[0]) xDomain[0] = l.x - l.r;\n            if (l.x + l.r > xDomain[1]) xDomain[1] = l.x + l.r;\n            if (l.y - l.r < yDomain[0]) yDomain[0] = l.y - l.r;\n            if (l.y + l.r > yDomain[1]) yDomain[1] = l.y + l.r;\n          });\n\n          this.active((h, x) => {\n            if (h.source && h.target) return filterIds.includes(h.source.id) && filterIds.includes(h.target.id);\n            else {\n              const myIds = this._ids(h, x);\n              return filterIds.includes(`${myIds[myIds.length - 1]}`);\n            }\n          });\n\n          this._focus = ids;\n          const t = zoomTransform(this._container.node());\n          xDomain = xDomain.map(d => d * t.k + t.x);\n          yDomain = yDomain.map(d => d * t.k + t.y);\n          this._zoomToBounds([[xDomain[0], yDomain[0]], [xDomain[1], yDomain[1]]]);\n\n        }\n\n        this._on.mouseenter.bind(this)(d, i);\n        this._on[\"mousemove.legend\"].bind(this)(d, i);\n\n      }\n\n    };\n    this._on.mouseenter = () => {};\n    this._on[\"mouseleave.shape\"] = () => {\n      this.hover(false);\n    };\n    const defaultMouseMove = this._on[\"mousemove.shape\"];\n    this._on[\"mousemove.shape\"] = (d, i) => {\n      defaultMouseMove(d, i);\n      const id = `${this._nodeGroupBy && this._nodeGroupBy[this._drawDepth](d, i) ? this._nodeGroupBy[this._drawDepth](d, i) : this._id(d, i)}`,\n            links = this._linkLookup[id],\n            node = this._nodeLookup[id];\n\n      const filterIds = [id];\n      const xDomain = [node.x - node.r, node.x + node.r],\n            yDomain = [node.y - node.r, node.y + node.r];\n\n      links.forEach(l => {\n        filterIds.push(l.id);\n        if (l.x - l.r < xDomain[0]) xDomain[0] = l.x - l.r;\n        if (l.x + l.r > xDomain[1]) xDomain[1] = l.x + l.r;\n        if (l.y - l.r < yDomain[0]) yDomain[0] = l.y - l.r;\n        if (l.y + l.r > yDomain[1]) yDomain[1] = l.y + l.r;\n      });\n\n      this.hover((h, x) => {\n        if (h.source && h.target) return h.source.id === id || h.target.id === id;\n        else return filterIds.includes(`${this._ids(h, x)[this._drawDepth]}`);\n      });\n    };\n    this._sizeMin = 5;\n    this._sizeScale = \"sqrt\";\n    this._shape = constant(\"Circle\");\n    this._shapeConfig = assign(this._shapeConfig, {\n      ariaLabel: (d, i) => {\n        const validSize = this._size ? `, ${this._size(d, i)}` : \"\";\n        return `${this._drawLabel(d, i)}${validSize}.`;\n      },\n      labelConfig: {\n        duration: 0,\n        fontMin: 1,\n        fontResize: true,\n        labelPadding: 0,\n        textAnchor: \"middle\",\n        verticalAlign: \"middle\"\n      },\n      Path: {\n        fill: \"none\",\n        label: false,\n        stroke: \"#eee\"\n      }\n    });\n    this._x = accessor(\"x\");\n    this._y = accessor(\"y\");\n\n    this._zoom = true;\n\n  }\n\n  /**\n      Extends the draw behavior of the abstract Viz class.\n      @private\n  */\n  _draw(callback) {\n\n    super._draw(callback);\n\n    const height = this._height - this._margin.top - this._margin.bottom,\n          transform = `translate(${this._margin.left}, ${this._margin.top})`,\n          transition = this._transition,\n          width = this._width - this._margin.left - this._margin.right;\n\n    const data = this._filteredData.reduce((obj, d, i) => {\n      obj[this._id(d, i)] = d;\n      return obj;\n    }, {});\n\n    let nodes = this._nodes.reduce((obj, d, i) => {\n      obj[this._nodeGroupBy ? this._nodeGroupBy[this._drawDepth](d, i) : d.id] = d;\n      return obj;\n    }, {});\n\n    nodes = Array.from(new Set(Object.keys(data).concat(Object.keys(nodes)))).map((id, i) => {\n      const d = data[id],\n            n = nodes[id];\n\n      if (n === undefined) return false;\n\n      return {\n        __d3plus__: true,\n        data: d || n,\n        i, id,\n        fx: d !== undefined && this._x(d) !== undefined ? this._x(d) : this._x(n),\n        fy: d !== undefined && this._y(d) !== undefined ? this._y(d) : this._y(n),\n        node: n,\n        r: this._size ? d !== undefined && this._size(d) !== undefined ? this._size(d) : this._size(n) : this._sizeMin,\n        shape: d !== undefined && this._shape(d) !== undefined ? this._shape(d) : this._shape(n)\n      };\n\n    }).filter(n => n);\n\n    const nodeLookup = this._nodeLookup = nodes.reduce((obj, d) => {\n      obj[d.id] = d;\n      return obj;\n    }, {});\n\n    const nodeIndices = nodes.map(n => n.node);\n    const links = this._links.map(l => {\n      const referenceType = typeof l.source;\n      return {\n        size: this._linkSize(l),\n        source: referenceType === \"number\"\n          ? nodes[nodeIndices.indexOf(this._nodes[l.source])]\n          : referenceType === \"string\"\n            ? nodeLookup[l.source]\n            : nodeLookup[l.source.id],\n        target: referenceType === \"number\"\n          ? nodes[nodeIndices.indexOf(this._nodes[l.target])]\n          : referenceType === \"string\"\n            ? nodeLookup[l.target]\n            : nodeLookup[l.target.id]\n      };\n    });\n\n    this._linkLookup = links.reduce((obj, d) => {\n      if (!obj[d.source.id]) obj[d.source.id] = [];\n      obj[d.source.id].push(d.target);\n      if (!obj[d.target.id]) obj[d.target.id] = [];\n      obj[d.target.id].push(d.source);\n      return obj;\n    }, {});\n\n    const missingCoords = nodes.some(n => n.fx === undefined || n.fy === undefined);\n\n    if (missingCoords) {\n\n      const linkStrength = scales.scaleLinear()\n        .domain(extent(links, d => d.size))\n        .range([0.1, 0.5]);\n\n      const simulation = forceSimulation()\n        .force(\"link\", forceLink(links)\n          .id(d => d.id)\n          .distance(1)\n          .strength(d => linkStrength(d.size))\n          .iterations(4)\n        )\n        .force(\"charge\", forceManyBody().strength(-1))\n        .stop();\n\n      const iterations = 300;\n      const alphaMin = 0.001;\n      const alphaDecay = 1 - Math.pow(alphaMin, 1 / iterations);\n      simulation.velocityDecay(0);\n      simulation.alphaMin(alphaMin);\n      simulation.alphaDecay(alphaDecay);\n      simulation.alphaDecay(0);\n\n      simulation.nodes(nodes);\n      simulation.tick(iterations).stop();\n\n      const hull = polygonHull(nodes.map(n => [n.vx, n.vy]));\n      const {angle, cx, cy} = shapes.largestRect(hull);\n\n      nodes.forEach(n => {\n        const p = shapes.pointRotate([n.vx, n.vy], -1 * (Math.PI / 180 * angle), [cx, cy]);\n        n.fx = p[0];\n        n.fy = p[1];\n      });\n\n    }\n\n    const xExtent = extent(nodes.map(n => n.fx)),\n          yExtent = extent(nodes.map(n => n.fy));\n\n    const x = scales.scaleLinear().domain(xExtent).range([0, width]),\n          y = scales.scaleLinear().domain(yExtent).range([0, height]);\n\n    const nodeRatio = (xExtent[1] - xExtent[0]) / (yExtent[1] - yExtent[0]),\n          screenRatio = width / height;\n\n    if (nodeRatio > screenRatio) {\n      const h = height * screenRatio / nodeRatio;\n      y.range([(height - h) / 2, height - (height - h) / 2]);\n    }\n    else {\n      const w = width * nodeRatio / screenRatio;\n      x.range([(width - w) / 2, width - (width - w) / 2]);\n    }\n\n    nodes.forEach(n => {\n      n.x = x(n.fx);\n      n.y = y(n.fy);\n    });\n\n    const rExtent = extent(nodes.map(n => n.r));\n    let rMax = this._sizeMax || max([1, min(\n      merge(nodes\n        .map(n1 => nodes\n          .map(n2 => n1 === n2 ? null : shapes.pointDistance([n1.x, n1.y], [n2.x, n2.y]))\n        )\n      )\n    ) / 2]);\n\n    const r = scales[`scale${this._sizeScale.charAt(0).toUpperCase()}${this._sizeScale.slice(1)}`]()\n                .domain(rExtent).range([rExtent[0] === rExtent[1] ? rMax : min([rMax / 2, this._sizeMin]), rMax]),\n          xDomain = x.domain(),\n          yDomain = y.domain();\n\n    const xOldSize = xDomain[1] - xDomain[0],\n          yOldSize = yDomain[1] - yDomain[0];\n\n    nodes.forEach(n => {\n      const size = r(n.r);\n      if (xDomain[0] > x.invert(n.x - size)) xDomain[0] = x.invert(n.x - size);\n      if (xDomain[1] < x.invert(n.x + size)) xDomain[1] = x.invert(n.x + size);\n      if (yDomain[0] > y.invert(n.y - size)) yDomain[0] = y.invert(n.y - size);\n      if (yDomain[1] < y.invert(n.y + size)) yDomain[1] = y.invert(n.y + size);\n    });\n\n    const xNewSize = xDomain[1] - xDomain[0],\n          yNewSize = yDomain[1] - yDomain[0];\n\n    rMax *= min([xOldSize / xNewSize, yOldSize / yNewSize]);\n    r.range([rExtent[0] === rExtent[1] ? rMax : min([rMax / 2, this._sizeMin]), rMax]);\n    x.domain(xDomain);\n    y.domain(yDomain);\n\n    nodes.forEach(n => {\n      n.x = x(n.fx);\n      n.fx = n.x;\n      n.y = y(n.fy);\n      n.fy = n.y;\n      n.r = r(n.r);\n      n.width = n.r * 2;\n      n.height = n.r * 2;\n    });\n\n    this._container = this._select.selectAll(\"svg.d3plus-network\").data([0]);\n\n    this._container = this._container.enter().append(\"svg\")\n        .attr(\"class\", \"d3plus-network\")\n        .attr(\"opacity\", 0)\n        .attr(\"width\", width)\n        .attr(\"height\", height)\n        .attr(\"x\", this._margin.left)\n        .attr(\"y\", this._margin.top)\n        .style(\"background-color\", \"transparent\")\n      .merge(this._container);\n\n    this._container.transition(this._transition)\n      .attr(\"opacity\", 1)\n      .attr(\"width\", width)\n      .attr(\"height\", height)\n      .attr(\"x\", this._margin.left)\n      .attr(\"y\", this._margin.top);\n\n    const hitArea = this._container.selectAll(\"rect.d3plus-network-hitArea\").data([0]);\n    hitArea.enter().append(\"rect\")\n        .attr(\"class\", \"d3plus-network-hitArea\")\n      .merge(hitArea)\n        .attr(\"width\", width)\n        .attr(\"height\", height)\n        .attr(\"fill\", \"transparent\")\n        .on(\"click\", () => {\n          if (this._focus) {\n            this.active(false);\n            this._focus = undefined;\n            this._zoomToBounds(null);\n          }\n        });\n\n    this._zoomGroup = this._container.selectAll(\"g.d3plus-network-zoomGroup\").data([0]);\n    const parent = this._zoomGroup = this._zoomGroup.enter().append(\"g\")\n        .attr(\"class\", \"d3plus-network-zoomGroup\")\n      .merge(this._zoomGroup);\n\n    const strokeExtent = extent(links, d => d.size);\n    if (strokeExtent[0] !== strokeExtent[1]) {\n      const strokeScale = scales[`scale${this._linkSizeScale.charAt(0).toUpperCase()}${this._linkSizeScale.slice(1)}`]()\n        .domain(strokeExtent)\n        .range([this._linkSizeMin, r.range()[0]]);\n      links.forEach(link => {\n        link.size = strokeScale(link.size);\n      });\n    }\n\n    const linkConfig = configPrep.bind(this)(this._shapeConfig, \"edge\", \"Path\");\n    delete linkConfig.on;\n\n    this._shapes.push(new shapes.Path()\n      .config(linkConfig)\n      .strokeWidth(d => d.size)\n      .activeStyle({\n        \"stroke-width\": d => d.size\n      })\n      .d(d => `M${d.source.x},${d.source.y} ${d.target.x},${d.target.y}`)\n      .data(links)\n      .select(elem(\"g.d3plus-network-links\", {parent, transition, enter: {transform}, update: {transform}}).node())\n      .render());\n\n    const shapeConfig = {\n      label: d => nodes.length <= this._dataCutoff || (this._hover && this._hover(d) || this._active && this._active(d)) ? this._drawLabel(d.data || d.node, d.i) : false,\n      select: elem(\"g.d3plus-network-nodes\", {parent, transition, enter: {transform}, update: {transform}}).node()\n    };\n\n    nest().key(d => d.shape).entries(nodes).forEach(d => {\n      this._shapes.push(new shapes[d.key]()\n        .config(configPrep.bind(this)(this._shapeConfig, \"shape\", d.key))\n        .config(shapeConfig)\n        .config(shapeConfig[d.key] || {})\n        .data(d.values)\n        .render());\n    });\n\n    return this;\n\n  }\n\n  /**\n      @memberof Network\n      @desc If *value* is specified, sets the hover method to the specified function and returns the current class instance.\n      @param {Function} [*value*]\n      @chainable\n   */\n  hover(_) {\n    this._hover = _;\n\n    if (this._nodes.length < this._dataCutoff) {\n      this._shapes.forEach(s => s.hover(_));\n      if (this._legend) this._legendClass.hover(_);\n    }\n\n    return this;\n  }\n\n  /**\n      @memberof Network\n      @desc A predefined *Array* of edges that connect each object passed to the [node](#Network.node) method. The `source` and `target` keys in each link need to map to the nodes in one of three ways:\n1. The index of the node in the nodes array (as in [this](http://d3plus.org/examples/d3plus-network/getting-started/) example).\n2. The actual node *Object* itself.\n3. A *String* value matching the `id` of the node.\n\nThe value passed should either be an *Array* of data or a *String* representing a filepath or URL to be loaded. An optional formatting function can be passed as a second argument to this method. This custom function will be passed the data that has been loaded, as long as there are no errors. This function should return the final links *Array*.\n      @param {Array|String} *links* = []\n      @param {Function} [*formatter*]\n      @chainable\n  */\n  links(_, f) {\n    if (arguments.length) {\n      const prev = this._queue.find(q => q[3] === \"links\");\n      const d = [load.bind(this), _, f, \"links\"];\n      if (prev) this._queue[this._queue.indexOf(prev)] = d;\n      else this._queue.push(d);\n      return this;\n    }\n    return this._links;\n  }\n\n  /**\n      @memberof Network\n      @desc Defines the thickness of the links connecting each node. The value provided can be either a pixel Number to be used for all links, or an accessor function that returns a specific data value to be used in an automatically calculated linear scale.\n      @param {Function|Name} [*value* = 1]\n      @chainable\n  */\n  linkSize(_) {\n    return arguments.length ? (this._linkSize = typeof _ === \"function\" ? _ : constant(_), this) : this._linkSize;\n  }\n\n  /**\n      @memberof Network\n      @desc Defines the minimum pixel stroke width used in link sizing.\n      @param {Number} [*value* = 2]\n      @chainable\n  */\n  linkSizeMin(_) {\n    return arguments.length ? (this._linkSizeMin = _, this) : this._linkSizeMin;\n  }\n\n  /**\n      @memberof Network\n      @desc Sets the specific type of [continuous d3-scale](https://github.com/d3/d3-scale#continuous-scales) used when calculating the pixel size of links in the network.\n      @param {String} [*value* = \"sqrt\"]\n      @chainable\n  */\n  linkSizeScale(_) {\n    return arguments.length ? (this._linkSizeScale = _, this) : this._linkSizeScale;\n  }\n\n  /**\n      @memberof Network\n      @desc If *value* is specified, sets the node group accessor(s) to the specified string, function, or array of values and returns the current class instance. This method overrides the default .groupBy() function from being used with the data passed to .nodes(). If *value* is not specified, returns the current node group accessor.\n      @param {String|Function|Array} [*value* = undefined]\n      @chainable\n  */\n  nodeGroupBy(_) {\n    if (!arguments.length) return this._nodeGroupBy;\n    if (!(_ instanceof Array)) _ = [_];\n    return this._nodeGroupBy = _.map(k => {\n      if (typeof k === \"function\") return k;\n      else {\n        if (!this._aggs[k]) {\n          this._aggs[k] = a => {\n            const v = Array.from(new Set(a));\n            return v.length === 1 ? v[0] : v;\n          };\n        }\n        return accessor(k);\n      }\n    }), this;\n  }\n\n  /**\n      @memberof Network\n      @desc The list of nodes to be used for drawing the network. The value passed should either be an *Array* of data or a *String* representing a filepath or URL to be loaded.\n\nAdditionally, a custom formatting function can be passed as a second argument to this method. This custom function will be passed the data that has been loaded, as long as there are no errors. This function should return the final node *Array*.\n      @param {Array|String} *nodes* = []\n      @param {Function} [*formatter*]\n      @chainable\n  */\n  nodes(_, f) {\n    if (arguments.length) {\n      const prev = this._queue.find(q => q[3] === \"nodes\");\n      const d = [load.bind(this), _, f, \"nodes\"];\n      if (prev) this._queue[this._queue.indexOf(prev)] = d;\n      else this._queue.push(d);\n      return this;\n    }\n    return this._nodes;\n  }\n\n  /**\n      @memberof Network\n      @desc If *value* is specified, sets the size accessor to the specified function or data key and returns the current class instance. If *value* is not specified, returns the current size accessor.\n      @param {Function|String} [*value*]\n      @chainable\n  */\n  size(_) {\n    return arguments.length ? (this._size = typeof _ === \"function\" || !_ ? _ : accessor(_), this) : this._size;\n  }\n\n  /**\n      @memberof Network\n      @desc Defines the maximum pixel radius used in size scaling. By default, the maximum size is determined by half the distance of the two closest nodes.\n      @param {Number} [*value*]\n      @chainable\n  */\n  sizeMax(_) {\n    return arguments.length ? (this._sizeMax = _, this) : this._sizeMax;\n  }\n\n  /**\n      @memberof Network\n      @desc Defines the minimum pixel radius used in size scaling.\n      @param {Number} [*value* = 5]\n      @chainable\n  */\n  sizeMin(_) {\n    return arguments.length ? (this._sizeMin = _, this) : this._sizeMin;\n  }\n\n  /**\n      @memberof Network\n      @desc Sets the specific type of [continuous d3-scale](https://github.com/d3/d3-scale#continuous-scales) used when calculating the pixel size of nodes in the network.\n      @param {String} [*value* = \"sqrt\"]\n      @chainable\n  */\n  sizeScale(_) {\n    return arguments.length ? (this._sizeScale = _, this) : this._sizeScale;\n  }\n\n  /**\n      @memberof Network\n      @desc If *value* is specified, sets the x accessor to the specified function or string matching a key in the data and returns the current class instance. The data passed to .data() takes priority over the .nodes() data array. If *value* is not specified, returns the current x accessor. By default, the x and y positions are determined dynamically based on default force layout properties.\n      @param {Function|String} [*value*]\n      @chainable\n  */\n  x(_) {\n    if (arguments.length) {\n      if (typeof _ === \"function\") this._x = _;\n      else {\n        this._x = accessor(_);\n        if (!this._aggs[_]) this._aggs[_] = a => mean(a);\n      }\n      return this;\n    }\n    else return this._x;\n  }\n\n  /**\n      @memberof Network\n      @desc If *value* is specified, sets the y accessor to the specified function or string matching a key in the data and returns the current class instance. The data passed to .data() takes priority over the .nodes() data array. If *value* is not specified, returns the current y accessor. By default, the x and y positions are determined dynamically based on default force layout properties.\n      @param {Function|String} [*value*]\n      @chainable\n  */\n  y(_) {\n    if (arguments.length) {\n      if (typeof _ === \"function\") this._y = _;\n      else {\n        this._y = accessor(_);\n        if (!this._aggs[_]) this._aggs[_] = a => mean(a);\n      }\n      return this;\n    }\n    else return this._y;\n  }\n\n}\n","/**\n    @external Viz\n    @see https://github.com/d3plus/d3plus-viz#Viz\n*/\n\nimport {extent, max, min} from \"d3-array\";\nimport {nest} from \"d3-collection\";\nimport * as scales from \"d3-scale\";\n\nimport {accessor, assign, configPrep, constant, elem} from \"d3plus-common\";\nimport {colorLegible} from \"d3plus-color\";\nimport * as shapes from \"d3plus-shape\";\nimport {dataLoad as load, Viz} from \"d3plus-viz\";\n\n/**\n    @class Rings\n    @extends external:Viz\n    @desc Creates a ring visualization based on a defined set of nodes and edges. [Click here](http://d3plus.org/examples/d3plus-network/simple-rings/) for help getting started using the Rings class.\n*/\nexport default class Rings extends Viz {\n\n  /**\n      @memberof Rings\n      @desc Invoked when creating a new class instance, and sets any default parameters.\n      @private\n  */\n  constructor() {\n\n    super();\n    this._links = [];\n    this._linkSize = constant(1);\n    this._linkSizeMin = 1;\n    this._linkSizeScale = \"sqrt\";\n    this._noDataMessage = false;\n    this._nodes = [];\n    this._on.mouseenter = () => {};\n    this._on[\"mouseleave.shape\"] = () => {\n      this.hover(false);\n    };\n    const defaultMouseMove = this._on[\"mousemove.shape\"];\n    this._on[\"mousemove.shape\"] = (d, i) => {\n      defaultMouseMove(d, i);\n      if (this._focus && this._focus === d.id) {\n        this.hover(false);\n        this._on.mouseenter.bind(this)(d, i);\n\n        this._focus = undefined;\n      }\n      else {\n        const id = this._nodeGroupBy && this._nodeGroupBy[this._drawDepth](d, i) ? this._nodeGroupBy[this._drawDepth](d, i) : this._id(d, i),\n              links = this._linkLookup[id],\n              node = this._nodeLookup[id];\n\n        const filterIds = [node.id];\n        const xDomain = [node.x - node.r, node.x + node.r],\n              yDomain = [node.y - node.r, node.y + node.r];\n\n        links.forEach(l => {\n          filterIds.push(l.id);\n          if (l.x - l.r < xDomain[0]) xDomain[0] = l.x - l.r;\n          if (l.x + l.r > xDomain[1]) xDomain[1] = l.x + l.r;\n          if (l.y - l.r < yDomain[0]) yDomain[0] = l.y - l.r;\n          if (l.y + l.r > yDomain[1]) yDomain[1] = l.y + l.r;\n        });\n\n        this.hover((h, x) => {\n          if (h.source && h.target) return h.source.id === node.id || h.target.id === node.id;\n          else return filterIds.includes(this._ids(h, x)[this._drawDepth]);\n        });\n      }\n    };\n    this._on[\"click.shape\"] = d => {\n      this._center = d.id;\n      // Need to resets margins and padding because we are\n      // skipping over the default render method and using\n      // _draw directly.\n      this._margin = {bottom: 0, left: 0, right: 0, top: 0};\n      this._padding = {bottom: 0, left: 0, right: 0, top: 0};\n      this._draw();\n    };\n    this._sizeMin = 5;\n    this._sizeScale = \"sqrt\";\n    this._shape = constant(\"Circle\");\n    this._shapeConfig = assign(this._shapeConfig, {\n      ariaLabel: (d, i) => {\n        const validSize = this._size ? `, ${this._size(d, i)}` : \"\";\n        return `${this._drawLabel(d, i)}${validSize}.`;\n      },\n      labelConfig: {\n        duration: 0,\n        fontMin: 1,\n        fontResize: true,\n        labelPadding: 0,\n        textAnchor: \"middle\",\n        verticalAlign: \"middle\"\n      },\n      Path: {\n        fill: \"none\",\n        label: false,\n        stroke: \"#eee\",\n        strokeWidth: 1\n      }\n    });\n\n  }\n\n  /**\n      Extends the draw behavior of the abstract Viz class.\n      @private\n  */\n  _draw(callback) {\n\n    super._draw(callback);\n\n    const data = this._filteredData.reduce((obj, d, i) => {\n      obj[this._id(d, i)] = d;\n      return obj;\n    }, {});\n\n    let nodes = this._nodes;\n\n    if (!this._nodes.length && this._links.length) {\n      const nodeIds = Array.from(new Set(this._links.reduce((ids, link) => ids.concat([link.source, link.target]), [])));\n      nodes = nodeIds.map(node => typeof node === \"object\" ? node : {id: node});\n    }\n\n    nodes = nodes.reduce((obj, d, i) => {\n      obj[this._nodeGroupBy ? this._nodeGroupBy[this._drawDepth](d, i) : this._id(d, i)] = d;\n      return obj;\n    }, {});\n\n    nodes = Array.from(new Set(Object.keys(data).concat(Object.keys(nodes)))).map((id, i) => {\n\n      const d = data[id],\n            n = nodes[id];\n\n      if (n === undefined) return false;\n\n      return {\n        __d3plus__: true,\n        data: d || n,\n        i, id,\n        node: n,\n        shape: d !== undefined && this._shape(d) !== undefined ? this._shape(d) : this._shape(n)\n      };\n\n    }).filter(n => n);\n\n    const nodeLookup = this._nodeLookup = nodes.reduce((obj, d) => {\n      obj[d.id] = d;\n      return obj;\n    }, {});\n\n    const links = this._links.map(link => {\n      const check = [\"source\", \"target\"];\n      const edge = check.reduce((result, check) => {\n        result[check] = typeof link[check] === \"number\" ? nodes[link[check]] : nodeLookup[link[check].id || link[check]];\n        return result;\n      }, {});\n      edge.size = this._linkSize(link);\n      return edge;\n    });\n\n    const linkMap = links.reduce((map, link) => {\n      if (!map[link.source.id]) {\n        map[link.source.id] = [];\n      }\n      map[link.source.id].push(link);\n      if (!map[link.target.id]) {\n        map[link.target.id] = [];\n      }\n      map[link.target.id].push(link);\n      return map;\n    }, {});\n\n    const height = this._height - this._margin.top - this._margin.bottom,\n          transform = `translate(${this._margin.left}, ${this._margin.top})`,\n          transition = this._transition,\n          width = this._width - this._margin.left - this._margin.right;\n\n    const edges = [],\n          radius = min([height, width]) / 2,\n          ringWidth = radius / 3;\n\n    const primaryRing = ringWidth,\n          secondaryRing = ringWidth * 2;\n\n    const center = nodeLookup[this._center];\n\n    center.x = width / 2;\n    center.y = height / 2;\n    center.r = this._sizeMin ? max([this._sizeMin, primaryRing * .65]) : this._sizeMax ? min([this._sizeMax, primaryRing * .65]) : primaryRing * .65;\n\n    const claimed = [center],\n          primaries = [];\n\n    linkMap[this._center].forEach(edge => {\n      const node = edge.source.id === this._center ? edge.target : edge.source;\n      node.edges = linkMap[node.id].filter(link => link.source.id !== this._center || link.target.id !== this._center);\n      node.edge = edge;\n\n      claimed.push(node);\n      primaries.push(node);\n    });\n\n    primaries.sort((a, b) => a.edges.length - b.edges.length);\n\n    const secondaries = [];\n    let totalEndNodes = 0;\n\n    primaries.forEach(p => {\n      const primaryId = p.id;\n\n      p.edges = p.edges.filter(edge => !claimed.includes(edge.source) && edge.target.id === primaryId ||\n                                       !claimed.includes(edge.target) && edge.source.id === primaryId);\n\n      totalEndNodes += p.edges.length || 1;\n\n      p.edges.forEach(edge => {\n        const {source, target} = edge;\n        const claim = target.id === primaryId ? source : target;\n        claimed.push(claim);\n      });\n    });\n\n    const tau = Math.PI * 2;\n    let offset = 0;\n\n    primaries.forEach((p, i) => {\n      const children = p.edges.length || 1;\n      const space = tau / totalEndNodes * children;\n\n      if (i === 0) {\n        offset -= space / 2;\n      }\n\n      const angle = offset + space / 2 - tau / 4;\n\n      p.radians = angle;\n      p.x = width / 2 + primaryRing * Math.cos(angle);\n      p.y = height / 2 + primaryRing * Math.sin(angle);\n\n      offset += space;\n\n      p.edges.forEach((edge, i) => {\n        const node = edge.source.id === p.id ? edge.target : edge.source;\n        const s = tau / totalEndNodes;\n        const a = angle - s * children / 2 + s / 2 + s * i;\n\n        node.radians = a;\n        node.x = width / 2 + secondaryRing * Math.cos(a);\n        node.y = height / 2 + secondaryRing * Math.sin(a);\n\n        secondaries.push(node);\n      });\n    });\n\n    const primaryDistance = ringWidth / 2;\n    const secondaryDistance = ringWidth / 4;\n\n    let primaryMax = primaryDistance / 2 - 4;\n    if (primaryDistance / 2 - 4 < 8) {\n      primaryMax = min([primaryDistance / 2, 8]);\n    }\n\n    let secondaryMax = secondaryDistance / 2 - 4;\n    if (secondaryDistance / 2 - 4 < 4) {\n      secondaryMax = min([secondaryDistance / 2, 4]);\n    }\n\n    if (secondaryMax > ringWidth / 10) {\n      secondaryMax = ringWidth / 10;\n    }\n\n    if (secondaryMax > primaryMax && secondaryMax > 10) {\n      secondaryMax = primaryMax * .75;\n    }\n    if (primaryMax > secondaryMax * 1.5) {\n      primaryMax = secondaryMax * 1.5;\n    }\n\n    primaryMax = Math.floor(primaryMax);\n    secondaryMax = Math.floor(secondaryMax);\n\n    let radiusFn;\n\n    if (this._size) {\n      const domain = extent(data, d => d.size);\n\n      if (domain[0] === domain[1]) {\n        domain[0] = 0;\n      }\n\n      radiusFn = scales.scaleLinear()\n        .domain(domain)\n        .rangeRound([3, min([primaryMax, secondaryMax])]);\n\n      const val = center.size;\n      center.r = radiusFn(val);\n    }\n    else {\n      radiusFn = scales.scaleLinear()\n        .domain([1, 2])\n        .rangeRound([primaryMax, secondaryMax]);\n    }\n\n    secondaries.forEach(s => {\n      s.ring = 2;\n      const val = this._size ? s.size : 2;\n      s.r = this._sizeMin ? max([this._sizeMin, radiusFn(val)]) : this._sizeMax ? min([this._sizeMax, radiusFn(val)]) : radiusFn(val);\n    });\n\n    primaries.forEach(p => {\n      p.ring = 1;\n      const val = this._size ? p.size : 1;\n      p.r = this._sizeMin ? max([this._sizeMin, radiusFn(val)]) : this._sizeMax ? min([this._sizeMax, radiusFn(val)]) : radiusFn(val);\n    });\n\n    nodes = [center].concat(primaries).concat(secondaries);\n\n    primaries.forEach(p => {\n      const check = [\"source\", \"target\"];\n      const {edge} = p;\n\n      check.forEach(node => {\n        edge[node] = nodes.find(n => n.id === edge[node].id);\n      });\n\n      edges.push(edge);\n\n      linkMap[p.id].forEach(edge => {\n        const node = edge.source.id === p.id ? edge.target : edge.source;\n\n        if (node.id !== center.id) {\n          let target = secondaries.find(s => s.id === node.id);\n\n          if (!target) {\n            target = primaries.find(s => s.id === node.id);\n          }\n\n          if (target) {\n            edge.spline = true;\n\n            const centerX = width / 2;\n            const centerY = height / 2;\n            const middleRing = primaryRing + (secondaryRing - primaryRing) * 0.5;\n\n            const check = [\"source\", \"target\"];\n\n            check.forEach((node, i) => {\n              edge[`${node}X`] = edge[node].x + Math.cos(edge[node].ring === 2 ? edge[node].radians + Math.PI : edge[node].radians) * edge[node].r;\n              edge[`${node}Y`] = edge[node].y + Math.sin(edge[node].ring === 2 ? edge[node].radians + Math.PI : edge[node].radians) * edge[node].r;\n              edge[`${node}BisectX`] = centerX + middleRing * Math.cos(edge[node].radians);\n              edge[`${node}BisectY`] = centerY + middleRing * Math.sin(edge[node].radians);\n\n              edge[node] = nodes.find(n => n.id === edge[node].id);\n\n              if (edge[node].edges === undefined) edge[node].edges = {};\n\n              const oppId = i === 0 ? edge.target.id : edge.source.id;\n\n              if (edge[node].id === p.id) {\n                edge[node].edges[oppId] = {\n                  angle: p.radians + Math.PI,\n                  radius: ringWidth / 2\n                };\n              }\n              else {\n                edge[node].edges[oppId] = {\n                  angle: target.radians,\n                  radius: ringWidth / 2\n                };\n              }\n            });\n\n            edges.push(edge);\n          }\n        }\n      });\n    });\n\n    nodes.forEach(node => {\n\n      if (node.id !== this._center) {\n        const fontSize = this._shapeConfig.labelConfig.fontSize && this._shapeConfig.labelConfig.fontSize(node) || 11;\n        const lineHeight = fontSize * 1.4;\n        const height = lineHeight * 2;\n        const padding = 5;\n        const width = ringWidth - node.r;\n\n        let angle = node.radians * (180 / Math.PI);\n        let x = node.r + padding;\n        let textAnchor = \"start\";\n\n        if (angle < -90 || angle > 90) {\n          x = -node.r - width - padding;\n          textAnchor = \"end\";\n          angle += 180;\n        }\n\n        node.labelBounds = {\n          x,\n          y: -lineHeight / 2,\n          width,\n          height\n        };\n\n        node.rotate = angle;\n        node.textAnchor = textAnchor;\n      }\n      else {\n        node.labelBounds = {\n          x: -primaryRing / 2,\n          y: -primaryRing / 2,\n          width: primaryRing,\n          height: primaryRing\n        };\n      }\n    });\n\n    this._linkLookup = links.reduce((obj, d) => {\n      if (!obj[d.source.id]) obj[d.source.id] = [];\n      obj[d.source.id].push(d.target);\n      if (!obj[d.target.id]) obj[d.target.id] = [];\n      obj[d.target.id].push(d.source);\n      return obj;\n    }, {});\n\n    const strokeExtent = extent(links, d => d.size);\n    if (strokeExtent[0] !== strokeExtent[1]) {\n      const radius = min(nodes, d => d.r);\n      const strokeScale = scales[`scale${this._linkSizeScale.charAt(0).toUpperCase()}${this._linkSizeScale.slice(1)}`]()\n        .domain(strokeExtent)\n        .range([this._linkSizeMin, radius]);\n      links.forEach(link => {\n        link.size = strokeScale(link.size);\n      });\n    }\n\n    const linkConfig = configPrep.bind(this)(this._shapeConfig, \"edge\", \"Path\");\n    delete linkConfig.on;\n\n    this._shapes.push(new shapes.Path()\n      .config(linkConfig)\n      .strokeWidth(d => d.size)\n      .id(d => `${d.source.id}_${d.target.id}`)\n      .d(d => d.spline ? `M${d.sourceX},${d.sourceY}C${d.sourceBisectX},${d.sourceBisectY} ${d.targetBisectX},${d.targetBisectY} ${d.targetX},${d.targetY}` : `M${d.source.x},${d.source.y} ${d.target.x},${d.target.y}`)\n      .data(edges)\n      .select(elem(\"g.d3plus-rings-links\", {parent: this._select, transition, enter: {transform}, update: {transform}}).node())\n      .render());\n\n    const that = this;\n\n    const shapeConfig = {\n      label: d => nodes.length <= this._dataCutoff || (this._hover && this._hover(d) || this._active && this._active(d)) ? this._drawLabel(d.data || d.node, d.i) : false,\n      labelBounds: d => d.labelBounds,\n      labelConfig: {\n        fontColor: d => d.id === this._center ? configPrep.bind(that)(that._shapeConfig, \"shape\", d.key).labelConfig.fontColor(d) : colorLegible(configPrep.bind(that)(that._shapeConfig, \"shape\", d.key).fill(d)),\n        fontResize: d => d.id === this._center,\n        padding: 0,\n        textAnchor: d => nodeLookup[d.id].textAnchor || configPrep.bind(that)(that._shapeConfig, \"shape\", d.key).labelConfig.textAnchor,\n        verticalAlign: d => d.id === this._center ? \"middle\" : \"top\"\n      },\n      rotate: d => nodeLookup[d.id].rotate || 0,\n      select: elem(\"g.d3plus-rings-nodes\", {parent: this._select, transition, enter: {transform}, update: {transform}}).node()\n    };\n\n    nest().key(d => d.shape).entries(nodes).forEach(d => {\n      this._shapes.push(new shapes[d.key]()\n        .config(configPrep.bind(this)(this._shapeConfig, \"shape\", d.key))\n        .config(shapeConfig)\n        .data(d.values)\n        .render());\n    });\n\n    return this;\n\n  }\n\n  /**\n   @memberof Rings\n   @desc Sets the center node to be the node with the given id.\n   @param {String}\n   @chainable\n   */\n  center(_) {\n    return arguments.length ? (this._center = _, this) : this._center;\n  }\n\n  /**\n      @memberof Rings\n      @desc If *value* is specified, sets the hover method to the specified function and returns the current class instance.\n      @param {Function} [*value*]\n      @chainable\n   */\n  hover(_) {\n    this._hover = _;\n\n    this._shapes.forEach(s => s.hover(_));\n    if (this._legend) this._legendClass.hover(_);\n\n    return this;\n  }\n\n  /**\n      @memberof Rings\n      @desc A predefined *Array* of edges that connect each object passed to the [node](#Rings.node) method. The `source` and `target` keys in each link need to map to the nodes in one of three ways:\n1. The index of the node in the nodes array (as in [this](http://d3plus.org/examples/d3plus-network/getting-started/) example).\n2. The actual node *Object* itself.\n3. A *String* value matching the `id` of the node.\n\nThe value passed should either be an *Array* of data or a *String* representing a filepath or URL to be loaded. An optional formatting function can be passed as a second argument to this method. This custom function will be passed the data that has been loaded, as long as there are no errors. This function should return the final links *Array*.\n      @param {Array|String} *links* = []\n      @param {Function} [*formatter*]\n      @chainable\n  */\n  links(_, f) {\n    if (arguments.length) {\n      const prev = this._queue.find(q => q[3] === \"links\");\n      const d = [load.bind(this), _, f, \"links\"];\n      if (prev) this._queue[this._queue.indexOf(prev)] = d;\n      else this._queue.push(d);\n      return this;\n    }\n    return this._links;\n  }\n\n  /**\n      @memberof Network\n      @desc Defines the thickness of the links connecting each node. The value provided can be either a pixel Number to be used for all links, or an accessor function that returns a specific data value to be used in an automatically calculated linear scale.\n      @param {Function|Name} [*value* = 1]\n      @chainable\n  */\n  linkSize(_) {\n    return arguments.length ? (this._linkSize = typeof _ === \"function\" ? _ : constant(_), this) : this._linkSize;\n  }\n\n  /**\n      @memberof Network\n      @desc Defines the minimum pixel stroke width used in link sizing.\n      @param {Number} [*value* = 2]\n      @chainable\n  */\n  linkSizeMin(_) {\n    return arguments.length ? (this._linkSizeMin = _, this) : this._linkSizeMin;\n  }\n\n  /**\n      @memberof Network\n      @desc Sets the specific type of [continuous d3-scale](https://github.com/d3/d3-scale#continuous-scales) used when calculating the pixel size of links in the network.\n      @param {String} [*value* = \"sqrt\"]\n      @chainable\n  */\n  linkSizeScale(_) {\n    return arguments.length ? (this._linkSizeScale = _, this) : this._linkSizeScale;\n  }\n\n  /**\n      @memberof Rings\n      @desc If *value* is specified, sets the node group accessor(s) to the specified string, function, or array of values and returns the current class instance. This method overrides the default .groupBy() function from being used with the data passed to .nodes(). If *value* is not specified, returns the current node group accessor.\n      @param {String|Function|Array} [*value* = undefined]\n      @chainable\n  */\n  nodeGroupBy(_) {\n    if (!arguments.length) return this._nodeGroupBy;\n    if (!(_ instanceof Array)) _ = [_];\n    return this._nodeGroupBy = _.map(k => {\n      if (typeof k === \"function\") return k;\n      else {\n        if (!this._aggs[k]) {\n          this._aggs[k] = a => {\n            const v = Array.from(new Set(a));\n            return v.length === 1 ? v[0] : v;\n          };\n        }\n        return accessor(k);\n      }\n    }), this;\n  }\n\n  /**\n      @memberof Rings\n      @desc The list of nodes to be used for drawing the rings network. The value passed should either be an *Array* of data or a *String* representing a filepath or URL to be loaded.\n\nAdditionally, a custom formatting function can be passed as a second argument to this method. This custom function will be passed the data that has been loaded, as long as there are no errors. This function should return the final node *Array*.\n      @param {Array|String} *nodes* = []\n      @param {Function} [*formatter*]\n      @chainable\n  */\n  nodes(_, f) {\n    if (arguments.length) {\n      const prev = this._queue.find(q => q[3] === \"nodes\");\n      const d = [load.bind(this), _, f, \"nodes\"];\n      if (prev) this._queue[this._queue.indexOf(prev)] = d;\n      else this._queue.push(d);\n      return this;\n    }\n    return this._nodes;\n  }\n\n  /**\n      @memberof Rings\n      @desc If *value* is specified, sets the size accessor to the specified function or data key and returns the current class instance. If *value* is not specified, returns the current size accessor.\n      @param {Function|String} [*value*]\n      @chainable\n  */\n  size(_) {\n    return arguments.length ? (this._size = typeof _ === \"function\" || !_ ? _ : accessor(_), this) : this._size;\n  }\n\n  /**\n      @memberof Rings\n      @desc If *value* is specified, sets the size scale maximum to the specified number and returns the current class instance. If *value* is not specified, returns the current size scale maximum. By default, the maximum size is determined by half the distance of the two closest nodes.\n      @param {Number} [*value*]\n      @chainable\n  */\n  sizeMax(_) {\n    return arguments.length ? (this._sizeMax = _, this) : this._sizeMax;\n  }\n\n  /**\n      @memberof Rings\n      @desc If *value* is specified, sets the size scale minimum to the specified number and returns the current class instance. If *value* is not specified, returns the current size scale minimum.\n      @param {Number} [*value* = 5]\n      @chainable\n  */\n  sizeMin(_) {\n    return arguments.length ? (this._sizeMin = _, this) : this._sizeMin;\n  }\n\n  /**\n      @memberof Rings\n      @desc If *value* is specified, sets the size scale to the specified string and returns the current class instance. If *value* is not specified, returns the current size scale.\n      @param {String} [*value* = \"sqrt\"]\n      @chainable\n  */\n  sizeScale(_) {\n    return arguments.length ? (this._sizeScale = _, this) : this._sizeScale;\n  }\n\n}\n","/**\n    @external Viz\n    @see https://github.com/d3plus/d3plus-viz#Viz\n*/\nimport {nest} from \"d3-collection\";\nimport {\n  sankey,\n  sankeyCenter,\n  sankeyJustify,\n  sankeyLeft,\n  sankeyLinkHorizontal,\n  sankeyRight\n} from \"d3-sankey\";\n\nconst sankeyAligns = {\n  center: sankeyCenter,\n  justify: sankeyJustify,\n  left: sankeyLeft,\n  right: sankeyRight\n};\n\nimport {accessor, assign, configPrep, constant, elem} from \"d3plus-common\";\nimport {Path} from \"d3plus-shape\";\nimport * as shapes from \"d3plus-shape\";\nimport {dataLoad as load, Viz} from \"d3plus-viz\";\n\n/**\n    @class Sankey\n    @extends external:Viz\n    @desc Creates a sankey visualization based on a defined set of nodes and links. [Click here](http://d3plus.org/examples/d3plus-network/sankey-diagram/) for help getting started using the Sankey class.\n*/\nexport default class Sankey extends Viz {\n\n  /**\n      @memberof Sankey\n      @desc Invoked when creating a new class instance, and sets any default parameters.\n      @private\n  */\n  constructor() {\n    super();\n    this._nodeId = accessor(\"id\");\n    this._links = accessor(\"links\");\n    this._linksSource = \"source\";\n    this._linksTarget = \"target\";\n    this._noDataMessage = false;\n    this._nodes = accessor(\"nodes\");\n    this._nodeAlign = sankeyAligns.justify;\n    this._nodePadding = 8;\n    this._nodeWidth = 30;\n    this._on.mouseenter = () => {};\n    this._on[\"mouseleave.shape\"] = () => {\n      this.hover(false);\n    };\n    const defaultMouseMove = this._on[\"mousemove.shape\"];\n    this._on[\"mousemove.shape\"] = (d, i) => {\n      defaultMouseMove(d, i);\n      if (this._focus && this._focus === d.id) {\n        this.hover(false);\n        this._on.mouseenter.bind(this)(d, i);\n\n        this._focus = undefined;\n      }\n      else {\n        const id = this._nodeId(d, i),\n              node = this._nodeLookup[id],\n              nodeLookup = Object.keys(this._nodeLookup).reduce((all, item) => {\n                all[this._nodeLookup[item]] = !isNaN(item) ? parseInt(item, 10) : item;\n                return all;\n              }, {});\n\n        const links = this._linkLookup[node];\n        const filterIds = [id];\n\n        links.forEach(l => {\n          filterIds.push(nodeLookup[l]);\n        });\n\n        this.hover((h, x) => {\n          if (h.source && h.target) {\n            return h.source.id === id || h.target.id === id;\n          }\n          else {\n            return filterIds.includes(this._nodeId(h, x));\n          }\n        });\n      }\n    };\n    this._path = sankeyLinkHorizontal();\n    this._sankey = sankey();\n    this._shape = constant(\"Rect\");\n    this._shapeConfig = assign(this._shapeConfig, {\n      Path: {\n        fill: \"none\",\n        hoverStyle: {\n          \"stroke-width\": d => Math.max(1, Math.abs(d.source.y1 - d.source.y0) * (d.value / d.source.value) - 2)\n        },\n        label: false,\n        stroke: \"#DBDBDB\",\n        strokeOpacity: 0.5,\n        strokeWidth: d => Math.max(1, Math.abs(d.source.y1 - d.source.y0) * (d.value / d.source.value) - 2)\n\n      },\n      Rect: {}\n    });\n    this._value = constant(1);\n  }\n\n  /**\n      Extends the draw behavior of the abstract Viz class.\n      @private\n  */\n  _draw(callback) {\n    super._draw(callback);\n\n    const height = this._height - this._margin.top - this._margin.bottom,\n          width = this._width - this._margin.left - this._margin.right;\n\n    const _nodes = Array.isArray(this._nodes)\n      ? this._nodes\n      : this._links.reduce((all, d) => {\n        if (!all.includes(d[this._linksSource])) all.push(d[this._linksSource]);\n        if (!all.includes(d[this._linksTarget])) all.push(d[this._linksTarget]);\n        return all;\n      }, []).map(id => ({id}));\n\n    const nodes = _nodes\n      .map((n, i) => ({\n        __d3plus__: true,\n        data: n,\n        i,\n        id: this._nodeId(n, i),\n        node: n,\n        shape: \"Rect\"\n      }));\n\n    const nodeLookup = this._nodeLookup = nodes.reduce((obj, d, i) => {\n      obj[d.id] = i;\n      return obj;\n    }, {});\n\n    const links = this._links.map((link, i) => {\n      const check = [this._linksSource, this._linksTarget];\n      const linkLookup = check.reduce((result, item) => {\n        result[item] = nodeLookup[link[item]];\n        return result;\n      }, {});\n      return {\n        source: linkLookup[this._linksSource],\n        target: linkLookup[this._linksTarget],\n        value: this._value(link, i)\n      };\n    });\n\n    this._linkLookup = links.reduce((obj, d) => {\n      if (!obj[d.source]) obj[d.source] = [];\n      obj[d.source].push(d.target);\n      if (!obj[d.target]) obj[d.target] = [];\n      obj[d.target].push(d.source);\n      return obj;\n    }, {});\n\n    const transform = `translate(${this._margin.left}, ${this._margin.top})`;\n\n    this._sankey\n      .nodeAlign(this._nodeAlign)\n      .nodePadding(this._nodePadding)\n      .nodeWidth(this._nodeWidth)\n      .nodes(nodes)\n      .links(links)\n      .size([width, height])();\n\n    this._shapes.push(\n      new Path()\n        .config(this._shapeConfig.Path)\n        .data(links)\n        .d(this._path)\n        .select(\n          elem(\"g.d3plus-Links\", {\n            parent: this._select,\n            enter: {transform},\n            update: {transform}\n          }).node()\n        )\n        .render()\n    );\n    nest()\n      .key(d => d.shape)\n      .entries(nodes)\n      .forEach(d => {\n        this._shapes.push(\n          new shapes[d.key]()\n            .data(d.values)\n            .height(d => d.y1 - d.y0)\n            .width(d => d.x1 - d.x0)\n            .x(d => (d.x1 + d.x0) / 2)\n            .y(d => (d.y1 + d.y0) / 2)\n            .select(\n              elem(\"g.d3plus-sankey-nodes\", {\n                parent: this._select,\n                enter: {transform},\n                update: {transform}\n              }).node()\n            )\n            .config(configPrep.bind(this)(this._shapeConfig, \"shape\", d.key))\n            .render()\n        );\n      });\n    return this;\n  }\n\n  /**\n      @memberof Sankey\n      @desc If *value* is specified, sets the hover method to the specified function and returns the current class instance.\n      @param {Function} [*value*]\n      @chainable\n   */\n  hover(_) {\n    this._hover = _;\n    this._shapes.forEach(s => s.hover(_));\n    if (this._legend) this._legendClass.hover(_);\n\n    return this;\n  }\n\n  /**\n      @memberof Sankey\n      @desc A predefined *Array* of edges that connect each object passed to the [node](#Sankey.node) method. The `source` and `target` keys in each link need to map to the nodes in one of one way:\n1. A *String* value matching the `id` of the node.\n\nThe value passed should be an *Array* of data. An optional formatting function can be passed as a second argument to this method. This custom function will be passed the data that has been loaded, as long as there are no errors. This function should return the final links *Array*.\n      @param {Array} *links* = []\n      @chainable\n  */\n  links(_, f) {\n    if (arguments.length) {\n      const prev = this._queue.find(q => q[3] === \"links\");\n      const d = [load.bind(this), _, f, \"links\"];\n      if (prev) this._queue[this._queue.indexOf(prev)] = d;\n      else this._queue.push(d);\n      return this;\n    }\n    return this._links;\n  }\n\n  /**\n      @memberof Sankey\n      @desc The key inside of each link Object that references the source node.\n      @param {String} [*value* = \"source\"]\n      @chainable\n  */\n  linksSource(_) {\n    return arguments.length ? (this._linksSource = _, this) : this._linksSource;\n  }\n\n  /**\n      @memberof Sankey\n      @desc The key inside of each link Object that references the target node.\n      @param {String} [*value* = \"target\"]\n      @chainable\n  */\n  linksTarget(_) {\n    return arguments.length ? (this._linksTarget = _, this) : this._linksTarget;\n  }\n\n  /**\n      @memberof Sankey\n      @desc Sets the nodeAlign property of the sankey layout, which can either be \"left\", \"right\", \"center\", or \"justify\".\n      @param {Function|String} [*value* = \"justify\"]\n      @chainable\n  */\n  nodeAlign(_) {\n    return arguments.length\n      ? (this._nodeAlign = typeof _ === \"function\" ? _ : sankeyAligns[_], this)\n      : this._nodeAlign;\n  }\n\n  /**\n      @memberof Sankey\n      @desc If *value* is specified, sets the node id accessor(s) to the specified array of values and returns the current class instance. If *value* is not specified, returns the current node group accessor.\n      @param {String} [*value* = \"id\"]\n      @chainable\n  */\n  nodeId(_) {\n    return arguments.length\n      ? (this._nodeId = typeof _ === \"function\" ? _ : accessor(_), this)\n      : this._nodeId;\n  }\n\n  /**\n      @memberof Sankey\n      @desc The list of nodes to be used for drawing the network. The value passed must be an *Array* of data.\n\nAdditionally, a custom formatting function can be passed as a second argument to this method. This custom function will be passed the data that has been loaded, as long as there are no errors. This function should return the final node *Array*.\n      @param {Array} *nodes* = []\n      @chainable\n  */\n  nodes(_, f) {\n    if (arguments.length) {\n      const prev = this._queue.find(q => q[3] === \"nodes\");\n      const d = [load.bind(this), _, f, \"nodes\"];\n      if (prev) this._queue[this._queue.indexOf(prev)] = d;\n      else this._queue.push(d);\n      return this;\n    }\n    return this._nodes;\n  }\n\n  /**\n      @memberof Sankey\n      @desc If *value* is specified, sets the padding of the node and returns the current class instance. If *value* is not specified, returns the current nodePadding. By default, the nodePadding size is 8.\n      @param {Number} [*value* = 8]\n      @chainable\n  */\n  nodePadding(_) {\n    return arguments.length ? (this._nodePadding = _, this) : this._nodePadding;\n  }\n\n\n  /**\n      @memberof Sankey\n      @desc If *value* is specified, sets the width of the node and returns the current class instance. If *value* is not specified, returns the current nodeWidth. By default, the nodeWidth size is 30.\n      @param {Number} [*value* = 30]\n      @chainable\n  */\n  nodeWidth(_) {\n    return arguments.length ? (this._nodeWidth = _, this) : this._nodeWidth;\n  }\n\n  /**\n      @memberof Sankey\n      @desc If *value* is specified, sets the width of the links and returns the current class instance. If *value* is not specified, returns the current value accessor.\n      @param {Function|Number} *value*\n      @example\nfunction value(d) {\n  return d.value;\n}\n  */\n  value(_) {\n\n    return arguments.length\n      ? (this._value = typeof _ === \"function\" ? _ : accessor(_), this)\n      : this._value;\n  }\n}\n"],"names":["Network","_links","_linkSize","constant","_linkSizeMin","_linkSizeScale","_noDataMessage","_nodes","_on","d","i","_tooltipClass","data","render","_hover","_drawDepth","_groupBy","length","id","_nodeGroupBy","_id","_focus","active","mouseenter","bind","undefined","_zoomToBounds","hover","links","_linkLookup","node","_nodeLookup","filterIds","xDomain","x","r","yDomain","y","forEach","l","push","h","source","target","includes","_ids","t","zoomTransform","_container","map","k","ids","nodes","myIds","defaultMouseMove","_sizeMin","_sizeScale","_shape","_shapeConfig","assign","ariaLabel","validSize","_size","_drawLabel","labelConfig","duration","fontMin","fontResize","labelPadding","textAnchor","verticalAlign","Path","fill","label","stroke","_x","accessor","_y","_zoom","callback","height","_height","_margin","top","bottom","transform","left","transition","_transition","width","_width","right","_filteredData","reduce","obj","Array","from","Set","Object","keys","concat","n","__d3plus__","fx","fy","shape","filter","nodeLookup","nodeIndices","referenceType","size","indexOf","missingCoords","some","linkStrength","scales","domain","extent","range","simulation","forceSimulation","force","forceLink","distance","strength","iterations","forceManyBody","stop","alphaMin","alphaDecay","Math","pow","velocityDecay","tick","hull","polygonHull","vx","vy","shapes","angle","cx","cy","p","PI","xExtent","yExtent","nodeRatio","screenRatio","w","rExtent","rMax","_sizeMax","max","min","merge","n1","n2","charAt","toUpperCase","slice","xOldSize","yOldSize","invert","xNewSize","yNewSize","_select","selectAll","enter","append","attr","style","hitArea","on","_zoomGroup","parent","strokeExtent","strokeScale","link","linkConfig","configPrep","_shapes","config","strokeWidth","activeStyle","select","elem","update","shapeConfig","_dataCutoff","_active","nest","key","entries","values","_","s","_legend","_legendClass","f","arguments","prev","_queue","find","q","load","_aggs","a","v","mean","Viz","Rings","_center","_padding","_draw","nodeIds","check","edge","result","linkMap","edges","radius","ringWidth","primaryRing","secondaryRing","center","claimed","primaries","sort","b","secondaries","totalEndNodes","primaryId","claim","tau","offset","children","space","radians","cos","sin","primaryDistance","secondaryDistance","primaryMax","secondaryMax","floor","radiusFn","rangeRound","val","ring","spline","centerX","centerY","middleRing","oppId","fontSize","lineHeight","padding","labelBounds","rotate","sourceX","sourceY","sourceBisectX","sourceBisectY","targetBisectX","targetBisectY","targetX","targetY","that","fontColor","colorLegible","sankeyAligns","sankeyCenter","justify","sankeyJustify","sankeyLeft","sankeyRight","Sankey","_nodeId","_linksSource","_linksTarget","_nodeAlign","_nodePadding","_nodeWidth","all","item","isNaN","parseInt","_path","sankeyLinkHorizontal","_sankey","sankey","hoverStyle","abs","y1","y0","value","strokeOpacity","Rect","_value","isArray","linkLookup","nodeAlign","nodePadding","nodeWidth","x1","x0"],"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"}